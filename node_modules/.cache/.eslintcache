[{"D:\\Python files\\Start Django\\blog_tube\\frontend\\blog_tube\\src\\index.js":"1","D:\\Python files\\Start Django\\blog_tube\\frontend\\blog_tube\\src\\reportWebVitals.js":"2","D:\\Python files\\Start Django\\blog_tube\\frontend\\blog_tube\\src\\App.js":"3","D:\\Python files\\Start Django\\blog_tube\\frontend\\blog_tube\\src\\componenets\\appFooter.js":"4","D:\\Python files\\Start Django\\blog_tube\\frontend\\blog_tube\\src\\componenets\\appHeader.js":"5","D:\\Python files\\Start Django\\blog_tube\\frontend\\blog_tube\\src\\componenets\\appSignup.js":"6","D:\\Python files\\Start Django\\blog_tube\\frontend\\blog_tube\\src\\componenets\\appLogin.js":"7","D:\\Python files\\Start Django\\blog_tube\\frontend\\blog_tube\\src\\componenets\\appBodyLoading.js":"8","D:\\Python files\\Start Django\\blog_tube\\frontend\\blog_tube\\src\\componenets\\appBlogians.js":"9","D:\\Python files\\Start Django\\blog_tube\\frontend\\blog_tube\\src\\componenets\\Menu.js":"10","D:\\Python files\\Start Django\\blog_tube\\frontend\\blog_tube\\src\\componenets\\appUserProfile.js":"11","D:\\Python files\\Start Django\\blog_tube\\frontend\\blog_tube\\src\\componenets\\statics\\utils.js":"12","D:\\Python files\\Start Django\\blog_tube\\frontend\\blog_tube\\src\\componenets\\userImage.js":"13","D:\\Python files\\Start Django\\blog_tube\\frontend\\blog_tube\\src\\componenets\\appUploadBlog.js":"14","D:\\Python files\\Start Django\\blog_tube\\frontend\\blog_tube\\src\\componenets\\appBlog.js":"15","D:\\Python files\\Start Django\\blog_tube\\frontend\\blog_tube\\src\\componenets\\appHome.js":"16"},{"size":500,"mtime":499162500000,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"18"},{"size":4876,"mtime":1633762335325,"results":"20","hashOfConfig":"18"},{"size":2128,"mtime":1625231243882,"results":"21","hashOfConfig":"18"},{"size":6968,"mtime":1633756514664,"results":"22","hashOfConfig":"18"},{"size":11100,"mtime":1633756685992,"results":"23","hashOfConfig":"18"},{"size":10167,"mtime":1633756581996,"results":"24","hashOfConfig":"18"},{"size":1016,"mtime":1632908597651,"results":"25","hashOfConfig":"18"},{"size":6328,"mtime":1633756488588,"results":"26","hashOfConfig":"18"},{"size":5410,"mtime":1633606234652,"results":"27","hashOfConfig":"18"},{"size":13020,"mtime":1633749877671,"results":"28","hashOfConfig":"18"},{"size":773,"mtime":1633756684164,"results":"29","hashOfConfig":"18"},{"size":2568,"mtime":1633756331139,"results":"30","hashOfConfig":"18"},{"size":20461,"mtime":1633758344524,"results":"31","hashOfConfig":"18"},{"size":11424,"mtime":1633743983410,"results":"32","hashOfConfig":"18"},{"size":5295,"mtime":1633606212937,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lv51fl",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":3,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":1,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},"D:\\Python files\\Start Django\\blog_tube\\frontend\\blog_tube\\src\\index.js",[],"D:\\Python files\\Start Django\\blog_tube\\frontend\\blog_tube\\src\\reportWebVitals.js",[],"D:\\Python files\\Start Django\\blog_tube\\frontend\\blog_tube\\src\\App.js",["79","80","81","82","83"],"import {useHistory,  BrowserRouter as Router ,Route ,Redirect} from 'react-router-dom'\nimport {CacheSwitch , CacheRoute } from 'react-router-cache-route'\nimport AppHeader from './componenets/appHeader';\nimport AppFooter from './componenets/appFooter';\nimport AppLogin from './componenets/appLogin';\nimport AppSignup from './componenets/appSignup';\nimport AppBodyLoading from './componenets/appBodyLoading';\nimport AppBlogians from './componenets/appBlogians';\nimport config from './componenets/statics/appConfig.json'\nimport AppBlog from './componenets/appBlog';\nimport appConfig from './componenets/statics/appConfig.json'\n\nimport './App.css'\nimport  React , {useState , useCallback , useEffect} from 'react'\nimport AppUserProfile from './componenets/appUserProfile';\nimport AppUploadBlog from './componenets/appUploadBlog';\nimport { logout } from './componenets/statics/utils';\nimport AppHome from './componenets/appHome';\n\nvar Login_context = React.createContext(null)\n\n\nfunction App() {\n  var login_data = false\n\n  const [login_context_state , set_login_context_state] = useState(null)\n\n  function change_login_context (state){\n    set_login_context_state(state)\n  }\n\n  var blogs= [\n    'How 5g will Revolutionize the world...',\n    'Is Self-Driving and Electric Vehical worth buy Now??',\n    'Rasmali reciepe',\n    'what after 5g',\n    'What is Quantu Computing',\n    'See How PUBG  changed lives of hunderds of people sjdfhasjkfdhufnskfaueasfajukjfdskajfkmlkvcdljfierfnolfsia',\n\n    ]\n\n    let [appbody , set_appbody] = useState(null)\n\n    let callback = useCallback((el)=>{\n      set_appbody(el)\n    })\n\n\n    let app_container_callback = (el)=>{\n      set_appcontainer(el)\n    }\n\n    var [ appcontainer, set_appcontainer] = useState(null)\n\n   \n\n    const [appbodyloading_state , set_appbodyloading_state]= useState('none')\n\n    let change_appbodyloading = (display) =>{\n          set_appbodyloading_state(display)\n    }\n\n    const history = useHistory()\n    const [blogs_list , set_blogs_list] = useState([])\n\n    useEffect(()=>{\n    let xhr = new XMLHttpRequest()\n    xhr.open(\"POST\",config.origin+\"backend_api/getSessionId\")\n\n    xhr.onreadystatechange = ()=>{\n      if (xhr.readyState === 4 && xhr.status === 200){\n        let session = JSON.parse(xhr.response).session\n        if (session === \"\"){\n          logout()\n        } \n        else{\n          set_login_context_state(session)\n          }\n        console.log(session)\n      }\n    }\n    xhr.send()\n    \n    fetch(appConfig.origin+'backend_api/retriveHomeBlogs',{ \n      mode:'cors',\n      method:\"POST\",\n      headers:{ session : login_context_state }\n  })\n  .then(response=> response.text().then(\n      text=>{\n          let response = JSON.parse(text)\n          switch (response.status) {\n              case \"success\":\n                  set_blogs_list(response.blogs_list)\n                  break;\n              case \"fail\":\n                  history.push('/blog_tube_react/Home')\n                  break;\n              default:\n                  break;\n          }}))}\n    \n    ,[login_context_state])\n  \n\n    \n  return (\n    <Router>\n      \n  <Login_context.Provider value = {login_context_state}>\n      <AppHeader  bloglist = {blogs_list} login_state = {login_context_state}  />\n    <div className=\"appcontent\" ref = {app_container_callback} >\n      <div className=\"appbody\" ref = {callback}>\n        <AppBodyLoading loading = {appbodyloading_state} />\n        <CacheSwitch>\n            <Route exact path = '/blog_tube_react/Blog/:title'>\n              <AppBlog />\n            </Route>\n            <CacheRoute exact path = '/blog_tube_react/Login'  >\n              <AppLogin appbodyloading = {change_appbodyloading} change_login_context = {change_login_context} />\n            </CacheRoute>\n            <CacheRoute exact path = '/blog_tube_react/Signup'>\n              <AppSignup appbodyloading = {change_appbodyloading}  />\n            </CacheRoute>\n            <Route  path = '/blog_tube_react/Blogians' >\n              <AppBlogians />\n            </Route>\n            <Route exact path = '/blog_tube_react/Profile/:user_id'>\n              <AppUserProfile />\n            </Route>\n            <Route  path = '/blog_tube_react/UploadBlog'>\n              <AppUploadBlog appbodyloading= {change_appbodyloading} />\n            </Route>\n            <Route exact path = \"/blog_tube_react/Home\" >\n              <AppHome blogs_list = {blogs_list} />\n            </Route>\n            <CacheRoute exact path = \"/blog_tube_react/Error\">\n              <h1>Error</h1>\n            </CacheRoute>\n            <Route path = \"/blog_tube_react/\"><Redirect to=\"/blog_tube_react/Home\" /></Route>\n        </CacheSwitch>\n      \n      </div>\n      <AppFooter appbody = {appbody} appcontainer = {appcontainer}/>  \n      </div>   \n  </ Login_context.Provider>\n\n    </Router>\n  );\n}\n\nexport default App;\nexport { Login_context};\n","D:\\Python files\\Start Django\\blog_tube\\frontend\\blog_tube\\src\\componenets\\appFooter.js",["84","85","86"],"import './statics/css/appFooter.css'\r\nimport {useRef , useEffect} from 'react'\r\nimport github_logo from './statics/images/github.svg'\r\nimport facebook_logo from './statics/images/facebook.svg'\r\nimport instagram_logo from './statics/images/instagram.svg'\r\n\r\n\r\n\r\nvar AppFooter = props=>{\r\n\r\n    \r\n    var ref = useRef({})\r\n    \r\n    useEffect(()=>{\r\n        try{\r\n            let el = props.appbody\r\n            el.addEventListener('scroll' , event=>{\r\n                \r\n                let height = el.getBoundingClientRect().height\r\n                if (el.scrollTop+ height === el.scrollHeight){\r\n                    // ref.current['footer'].scrollIntoView({behavior:'smooth', block:'center'})\r\n                    props.appcontainer.scroll(0, props.appcontainer.scrollHeight)\r\n                }else{\r\n                    props.appcontainer.scroll(0,0)\r\n                }\r\n            })\r\n        }catch(err){\r\n            console.log(err)\r\n        }\r\n    },[props.appbody,props.appcontainer])\r\n\r\n    \r\n\r\n\r\n    return (\r\n        <div className=\"footer\" ref = {el=>ref.current['footer']= el } >\r\n            <div className=\"aboutus\">\r\n                <p><strong> Developer </strong><pre>:</pre> <code>Shouryaraj Singh</code></p>\r\n                <p><strong>Contact </strong> <pre>:</pre> <code> 96XXXXXXXX </code></p>\r\n                <p><strong>Email</strong> <pre>:</pre> <code>shouryarajsinghgoud@gmail.com</code></p>\r\n            </div>\r\n            <div className=\"github\">\r\n            <a target=\"_blank\" href = \"https://github.com/A-Scode\"><img src={github_logo} alt=\"github\"  height = \"50\" width= \"50\" /></a>\r\n            </div>\r\n            <div className=\"facebook\">\r\n            <a target=\"_blank\" href = \"https://www.facebook.com/shouryarajsingh.goud\"><img src={facebook_logo} alt=\"github\"  height = \"50\" width= \"50\" /></a>\r\n            </div>\r\n            <div className=\"insta\">\r\n                <a target=\"_blank\" href = \"https://www.instagram.com/shouryaraj_singh/\"><img src={instagram_logo} alt=\"github\"  height = \"50\" width= \"50\" /></a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppFooter;","D:\\Python files\\Start Django\\blog_tube\\frontend\\blog_tube\\src\\componenets\\appHeader.js",["87","88","89","90","91","92","93","94","95","96","97","98"],"import './statics/css/appHeader.css'\r\nimport blogTubeIcon1 from './statics/images/blogTubeIcon.svg'\r\n\r\nimport menuIcon from './statics/images/menu_icon.svg'\r\nimport menuIcon3 from './statics/images/menu_icon3.svg'\r\nimport searchIcon from './statics/images/search_icon.svg'\r\nimport appConfig from './statics/appConfig.json'\r\nimport search_logo from './statics/images/search_icon.svg'\r\n\r\nimport { useState, useRef ,useEffect, useCallback} from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Menu from './Menu'\r\n\r\nvar change_menu_state;\r\n\r\nconst AppHeader = props => {\r\n    \r\n    var root = document.documentElement\r\n    root.style.setProperty('--search_icon_url' , `url(${search_logo})`)\r\n\r\n    var [img_state, set_img_state] = useState(menuIcon)\r\n\r\n    var menuIcon_elem = useRef({})\r\n\r\n\r\n    const [state_blog_list , set_state_blog_list] = useState(props.bloglist)\r\n    useEffect(()=>{\r\n        set_state_blog_list([...props.bloglist])\r\n    },[props.bloglist])\r\n\r\n\r\n\r\n    var mq = window.matchMedia('(max-width: 768px)')\r\n    mq.onchange = () => {\r\n        set_responsive(mq.matches)\r\n\r\n    }\r\n    var [responsive, set_responsive] = useState(mq.matches)\r\n\r\n    let search_style = {\r\n        display: \"none\",\r\n    position:\"fixed\",\r\n    width:\"100vw\",\r\n    height:\"100vh\",\r\n    top:0,bottom:0,left:0,right:0,\r\n    justifyContent: \"center\",\r\n    pointerEvents: \"auto \",\r\n    zIndex: 6,\r\n    backdropFilter: \"blur(2px)\",\r\n    }\r\n\r\n    var [state_search_style , set_state_search_style] = useState(search_style)\r\n\r\n\r\n    let menu_click = () => {\r\n        if (img_state === menuIcon) {\r\n            set_img_state(menuIcon3)\r\n            set_menu_state(true)\r\n            console.log('menuImage is equal to menuIcon')\r\n        } else {\r\n            set_img_state(menuIcon)\r\n            set_menu_state(false)\r\n            console.log('menuImage !!!! equal to menuIcon')\r\n        }\r\n\r\n    }\r\n\r\n    \r\n    var responsiveSearch = (type) => {\r\n        try{\r\n            menuIcon_elem.current['searchIconResponsive'].style.backgroundImage= `url(${search_logo})`\r\n            set_state_search_style({...search_style , display : type})\r\n            menuIcon_elem.current['searchIconResponsive'].focus()\r\n            document.addEventListener('click' ,doc_click , true )\r\n            setTimeout(()=>menuIcon_elem.current['searchIconResponsive'].focus() , 500)\r\n    }catch(err){}\r\n    }\r\n\r\n    let showHideSearch=(type)=>{\r\n       try{\r\n        menuIcon_elem.current['blogList'].style.display = type\r\n       }catch(err){}\r\n        \r\n    }\r\n\r\n    let doc_click = event=>{\r\n        if (event.target != menuIcon_elem.current['searchIcon'] && event.target != menuIcon_elem.current['searchIconResponsive']){\r\n            mq.matches?\r\n            responsiveSearch(\"none\")\r\n            :showHideSearch('none')\r\n            document.removeEventListener('click' ,doc_click ,true )\r\n        }\r\n\r\n    }\r\n\r\n    window.addEventListener('resize' , ()=>{\r\n        if (mq.matches  && menuIcon_elem.current['blogList']) showHideSearch('none')\r\n    })\r\n\r\n    function responsive_search_option(event){\r\n        if (!mq.matches) {\r\n        if ( event.target != menuIcon_elem.current['searchIcon'] && event.target != menuIcon_elem.current['blogList'] ){\r\n            setTimeout(()=>showHideSearch('none'),200)}}\r\n        \r\n\r\n        else if (mq.matches){\r\n            \r\n            if (event.target.id === \"searchInputResponsive\"){\r\n                set_state_search_style({...search_style , display : 'flex'})\r\n                \r\n            }\r\n\r\n            else if (event.target != menuIcon_elem.current[\"searchIconResponsive\"] && event.target != menuIcon_elem.current['searchIcon'] ){\r\n                \r\n                set_state_search_style({...search_style , display : 'none'})\r\n            }\r\n            window.removeEventListener('click'  , responsive_search_option, true)\r\n        }\r\n    }\r\n    \r\nif(!mq.matches){\r\n    window.addEventListener('click' , responsive_search_option  , true)}\r\n   \r\n\r\n\r\n    const sorting_list= useCallback(()=>{\r\n        try{\r\n        let elem =  menuIcon_elem.current['searchIcon']\r\n        let value = elem.value.toLowerCase() \r\n        let copy = props.bloglist\r\n        let const_obj = {}\r\n        let final_arr = []\r\n\r\n        for (let blog of copy){\r\n            let index = blog.toLowerCase().search(value)\r\n            if (index > -1){\r\n                const_obj[copy.indexOf(blog)] = index\r\n            }\r\n        }\r\n        for (let index of Object.keys(const_obj).sort()){\r\n            final_arr.push(copy[index])\r\n        }\r\n        \r\n        set_state_blog_list([...final_arr])\r\n    }catch(err){}\r\n\r\n    })\r\n    \r\n    let [menu_state , set_menu_state] = useState(false)\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"header\" >\r\n            <Menu open = {menu_state} login_state = {props.login_state}  onClick = {()=>menu_click()} /> \r\n            <div className=\"menuicon\"  >\r\n                <img src={img_state} id='menuIcon' ref={el => menuIcon_elem.current['menuIcon'] = el} onClick={()=>menu_click()} alt=\"menuIcon\" />\r\n\r\n            </div>\r\n            <h1 id='blog_tube' > <img src={blogTubeIcon1} id='logo' />\r\n\r\n                Blog Tube</h1>\r\n\r\n            {responsive ? <img src={searchIcon} id='searchIcon' ref={el => menuIcon_elem.current['searchIcon'] = el}  onClick = {()=>{\r\n                responsiveSearch('flex')\r\n                set_menu_state(false)\r\n\r\n                }} />\r\n                : <><input ref={el => menuIcon_elem.current['searchIcon'] = el} placeholder='Search Blogs' onInput = {sorting_list} onFocus = {sorting_list} id='searchInput'  onFocus={()=>showHideSearch('block')} type='text' />            </>\r\n            }\r\n            <div id=\"blogList\" ref={el => menuIcon_elem.current['blogList'] = el}>\r\n                {state_blog_list.length !== 0 ? state_blog_list.map((e, i) =>( <Link to ={`/blog_tube_react/Blog/${e.blog_details.title}?id=${e.blog_details.blog_id}`} ><div key={i} className='blog_elems' >{e.blog_details.title}</div></Link>))\r\n                    : <div className='blog_elems'> No Blogs Found</div>}\r\n            </div>\r\n            {responsive ?\r\n                <div id=\"search\" style = {state_search_style}  >\r\n                    {responsive ?\r\n                        <><input ref={el => menuIcon_elem.current['searchIconResponsive'] = el} placeholder='Search Blogs' onInput= {sorting_list} id='searchInputResponsive' type='text' autoFocus= {true} />    </> : null}\r\n                    <div id=\"blogListContainer\" >\r\n                        {state_blog_list.length !== 0 ? state_blog_list.map((e, i) => ( <Link to ={`/blog_tube_react/Blog/${e.blog_details.title}?id=${e.blog_details.blog_id}`} ><div key={i} className='blog_elems' >{e.blog_details.title}</div></Link>))\r\n                            : <div className='blog_elems'> No Blogs Found</div>}\r\n                    </div>\r\n                </div> : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppHeader\r\n\r\n","D:\\Python files\\Start Django\\blog_tube\\frontend\\blog_tube\\src\\componenets\\appSignup.js",["99","100","101","102","103"],"import './statics/css/appSignup.css'\r\nimport {useState,useRef , useEffect} from 'react'\r\nimport username from './statics/images/username.svg'\r\nimport password from './statics/images/password.svg'\r\nimport email from './statics/images/email.svg'\r\nimport uplaod_background_image from './statics/images/upload_image_background.svg'\r\nimport signup_background from './statics/images/signup_background.svg'\r\nimport { Link } from 'react-router-dom'\r\nimport appConfig from './statics/appConfig.json'\r\n\r\nimport anime from 'animejs'\r\n\r\n\r\nvar AppSignup = props=>{\r\n\r\n\r\n    let chars = {\"!\":null , \"#\":null , \"$\":null,\"%\":null,\"^\":null,\"&\":null,\"*\":null,\"(\":null,\")\":null,\"'\":null, '\"':null,\";\":null, \":\":null}\r\n\r\n\r\n    function checkUsername(event) {\r\n        event.preventDefault()\r\n        let filtered_list = [...event.target.value].filter((item)=> !(item in chars))\r\n        let list = [...event.target.value]\r\n\r\n        if( filtered_list.join('') == list.join('') ){\r\n                event.target.setCustomValidity(\"\")\r\n            }\r\n\r\n        else if (event.nativeEvent.data === '\"' || event.nativeEvent.data === \"'\"){\r\n            event.target.value = event.target.value.slice(0, event.target.value.length-1)\r\n        }else if (event.nativeEvent.data in chars ){\r\n            event.target.setCustomValidity(\"username should not contain \\n ------------ ?!:;\\\"'#$%^&*() ------------\")\r\n            event.target.reportValidity()\r\n            \r\n        }\r\n    }\r\n\r\n    function removequotes(event){\r\n        if (event.nativeEvent.data === '\"' || event.nativeEvent.data === \"'\"){\r\n            event.target.value = event.target.value.slice(0, event.target.value.length-1)\r\n            event.target.setCustomValidity('Cannot use \" or \\' ')\r\n            event.target.reportValidity()\r\n        }else{\r\n            event.target.setCustomValidity('')\r\n            \r\n        }\r\n    }\r\n\r\n    const ref = useRef({})\r\n\r\n\r\n\r\n    // useEffect for ref\r\n    useEffect(()=>{\r\ntry{\r\n    anime({\r\n        targets:ref.current['signup_heading'],\r\n        update:function(anime){\r\n            try{\r\n            ref.current['signup_heading'].style.filter = `hue-rotate(${anime.progress *3.6}deg)`\r\n            }catch(err){\r\n                \r\n            }\r\n        },\r\n        duration:2000,\r\n        autoplay:true,\r\n        direction:'alternate',\r\n        loop:true\r\n    })\r\n        set_refs()\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n\r\n    }, [ref, block_state])\r\n\r\n    let set_refs = ()=>{\r\n        ref.current['signup_form'].style.backgroundImage = `url(${signup_background})`\r\n        ref.current['username'].style.backgroundImage = `url(${username})`\r\n        ref.current['password'].style.backgroundImage = `url(${password})`\r\n        ref.current['email'].style.backgroundImage = `url(${email})`\r\n        ref.current['image'].style.backgroundImage = `url(${uplaod_background_image})`\r\n\r\n\r\n    }\r\n\r\n    var [block_state, set_block_state] = useState('form')\r\n\r\n    const origin = appConfig.origin\r\n\r\n    let submit_data=(event)=>{\r\n        \r\n        let xhr = new XMLHttpRequest()\r\n        props.appbodyloading('flex')\r\n        xhr.onreadystatechange = ()=>{\r\n            console.log(xhr.status, xhr.readyState)\r\n            if (xhr.status === 200 && xhr.readyState ===4){\r\n                let response = JSON.parse(xhr.response)\r\n                console.log(response)\r\n                \r\n                if(response.status === \"exists\"){\r\n                        ref.current['email'].focus()\r\n                        ref.current['email'].setCustomValidity('This Email Exists!!!')\r\n                        ref.current['email'].reportValidity()\r\n                        props.appbodyloading('none')\r\n\r\n                    }\r\n                    else if(response.status === \"otp\"){\r\n                        set_block_state(\"otp\")\r\n                        ref.current['otp_input'].style.backgroundImage = `url(${password})`\r\n                        props.appbodyloading('none')\r\n                        \r\n                    }\r\n                    else if(response.status === \"fail\"){\r\n                        set_block_state(\"error\")\r\n                        props.appbodyloading('none')\r\n\r\n                    }\r\n                }\r\n            }\r\n        \r\n        \r\n        \r\n        xhr.open('POST',origin+'backend_api/signup')\r\n        let progressbar = document.getElementById('progressbar')\r\n        xhr.upload.addEventListener('progress',(event)=>{\r\n            let percent = Math.round( (event.loaded/event.total)*100)\r\n            progressbar.style.width = `${percent}%`\r\n            progressbar.innerText = `Image ${percent}%`\r\n        })\r\n        xhr.upload.onloadend = ()=>{\r\n            progressbar.style.width = `${0}%`\r\n            progressbar.innerText = ''\r\n        }\r\n\r\n        let form = event.target\r\n        let data = {username : form[0].value,\r\n                    email    : form[1].value,\r\n                    password : form[2].value,\r\n                }\r\n        xhr.setRequestHeader('userData' , JSON.stringify(data))\r\n\r\n        let form_data = new FormData()\r\n        let imagefile = form[4].files[0]\r\n        console.log(imagefile)\r\n        form_data.append('image' , imagefile)\r\n        imagefile?\r\n        xhr.send(form_data)\r\n        :xhr.send()\r\n            }\r\n\r\n    \r\n    var input_id\r\n    var prev_value\r\n    function change_image(){\r\n        try{\r\n        if (ref.current['image_input'].value !== '' && ref.current['image_input'].value !== prev_value ){\r\n            try{let image_url = URL.createObjectURL( ref.current['image_input'].files[0])\r\n            ref.current['image'].style.backgroundImage = `url(${image_url})`}catch(e){console.log(e)}\r\n            prev_value = ref.current['image_input'].value\r\n            clearInterval(input_id)\r\n    }}catch(e){}\r\n    }\r\n\r\n    function check_otp(event){\r\n        let form = event.target\r\n        let otp_input = form[0]\r\n        if(otp_input.value.length != 4){\r\n            otp_input.focus()\r\n            otp_input.setCustomValidity('OTP must be of 4 digits!!!')\r\n            otp_input.reportValidity()\r\n            return\r\n        }else{ \r\n            otp_input.setCustomValidity('')\r\n            otp_input.reportValidity()\r\n        }\r\n        let xhr = new XMLHttpRequest()\r\n        props.appbodyloading('flex')\r\n\r\n        xhr.open( 'POST', origin+'backend_api/verifyotp' )\r\n        xhr.onreadystatechange = ()=>{\r\n            if(xhr.status === 200 && xhr.readyState === 4){\r\n                let response = JSON.parse(xhr.response)\r\n                console.log(response)\r\n                \r\n                if(response.status === 'fail'){\r\n                    otp_input.focus()\r\n                    otp_input.setCustomValidity('⚠️ Wrong OTP⚠️ Signup Again!!! ')\r\n                    otp_input.reportValidity()\r\n                    setTimeout(()=>{set_block_state('form');set_refs()},2000)\r\n                    props.appbodyloading('none')\r\n\r\n                }else if (response.staus === 'success'){\r\n                    set_block_state('success')\r\n                    props.appbodyloading('none')\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        xhr.setRequestHeader('otp' , otp_input.value)\r\n        xhr.send()\r\n        \r\n    }\r\n\r\n    let form_block = (<>\r\n        <h1 className = \"signup_heading\" ref = {el=>ref.current['signup_heading']=el} >Sign Up</h1>\r\n        <form action=\"javascript:void(0);\" onSubmit = {event=>submit_data(event)}>\r\n            <input required = {true} type=\"text\" placeholder = 'Username' className= 'signup_username' ref = {el => ref.current['username']= el} maxLength={100} onInput= {event=>checkUsername(event)} />\r\n            <input required = {true} type= \"email\" placeholder = 'Email' className= \"signup_email\"  ref = {el => ref.current['email']= el}  maxLength={100} onInput= {e=>removequotes(e)} />\r\n            <input required = {true} type=\"password\" placeholder = 'Password' className= 'signup_password'  ref = {el => ref.current['password']= el}  minLength={8} onInput={e=>removequotes(e)}  />\r\n            <input type=\"submit\" id = \"signup_submit\" value=\"Sign Up\" />\r\n            <div className=\"upload_image\" ref = {el => ref.current['image']=el} >\r\n                <input type=\"file\"  id = 'file_input'  ref = {el=>ref.current['image_input']=el}  accept= \"image/*\"  />\r\n                <label htmlFor= \"file_input\" id = \"file_input_label\" ref = {el=>ref.current['image_percent']= el}  onClick={()=>input_id = setInterval(change_image, 2000)}  >100%</label>\r\n            </div>\r\n        </form>\r\n        </>)\r\n\r\n\r\n    let otp_block = (<>\r\n        <h1 className = \"signup_heading\" ref = {el=>ref.current['signup_heading']=el} align='center' style = {{color:'rgb(24, 151, 201)'}} > \r\n        OTP\r\n        </h1>\r\n        <form action= {'javascript:void(0);'} onSubmit = {event =>{set_block_state('otp') ;check_otp(event)}} >\r\n            <input required = {true} type=\"number\" ref= {el=>ref.current['otp_input']=el} className = \"signup_password\"   onInput= {(e)=>{e.target.value.length>4?\r\n                e.target.setCustomValidity('No More than 4 Digits')\r\n                :e.target.setCustomValidity('')\r\n                e.target.reportValidity()\r\n                }} style = {{gridColumn:'1 / span 2',gridRow:'1 / span 2' , marginRight:'20px', marginLeft : '20px',fontSize:'30px', letterSpacing:'32px', color:\"#0334dd\" }} />\r\n\r\n            <ul className = 'instList'>\r\n                <li>Check Email for OTP</li>\r\n                <li>Must have 4 digits</li>\r\n                <li>Email is identity</li>\r\n            </ul>\r\n            <input type=\"submit\" id = \"signup_submit\"  />\r\n        </form>\r\n        </>)\r\n\r\n    let error_block = ( <>\r\n        <h2 className = \"signup_heading\" ref = {el=>ref.current['signup_heading']=el} align='center' style = {{color:'rgb(24, 151, 201)'}} >Error Occured!!</h2>\r\n        <button id = \"signup_submit\" onClick= {()=>{set_block_state('form')\r\n    setTimeout(()=>set_refs(),500)\r\n    }} style = {{justifySelf:'center',  gridColumn: '1/span 2', cursor:'pointer'}}>Back</button>\r\n        </>)\r\n\r\n        let success_block = (<>\r\n            <h3 ref = {el=>ref.current['signup_heading']=el} style = {{color:'rgb(24, 151, 201)', gridColumn:'1/ span 2'}}  align='center'>🎉Welcome🎉</h3>\r\n             <button id = \"signup_submit\"  style = {{justifySelf:'center',  gridColumn: '1/span 2',cursor:'pointer'}}><Link style  = {{textDecoration:'none'}} to  = \"/blog_tube_react/Login\"><span>Login</span></Link></button>\r\n            \r\n            </>)\r\n\r\n \r\n    return(\r\n      <div className=\"signup\">\r\n          <div className=\"signup_form\"  ref = {el=>ref.current['signup_form']=el}>\r\n            { block_state==='form'?form_block\r\n                : null}\r\n            {block_state === 'otp'?otp_block\r\n            :null}\r\n            {block_state==='error'?error_block\r\n            :null\r\n            }\r\n            {block_state==='success'?success_block\r\n        :null}\r\n                \r\n          </div>\r\n          <div className=\"progress signup_heading\" id = 'progressbar'></div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default AppSignup","D:\\Python files\\Start Django\\blog_tube\\frontend\\blog_tube\\src\\componenets\\appLogin.js",["104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121"],"import './statics/css/appLogin.css'\r\nimport email_logo from './statics/images/email.svg'\r\nimport password_logo from './statics/images/password.svg'\r\nimport form_background from './statics/images/form_background.svg'\r\nimport appConfig from './statics/appConfig.json'\r\n\r\nimport anime from 'animejs'\r\nimport { Login_context } from '../App'\r\nimport { useEffect, useRef , useState , useContext, useCallback, useMemo} from 'react'\r\nimport {\r\n    Link} from 'react-router-dom'\r\n\r\nvar AppLogin = props=>{\r\n   \r\n    let ref = useRef({})\r\n\r\n    let login_context = useContext(Login_context)\r\n\r\n    let [Error, set_Error] = useState('form')\r\n\r\n    useEffect(()=>{\r\n        try{\r\n            anime({\r\n                targets:ref.current['heading'],\r\n                update:function(anime){\r\n                    try{\r\n                    ref.current['heading'].style.filter = `hue-rotate(${anime.progress *3.6}deg)`\r\n                    }catch(err){let get }\r\n                },\r\n                duration:2000,\r\n                autoplay:true,\r\n                direction:'alternate',\r\n                loop:true\r\n            })\r\n        if (Error){\r\n            ref.current['form'].style.backgroundImage = `url(${form_background})`\r\n            if(ref.current['email'])ref.current['email'].style.backgroundImage = `url(${email_logo})` \r\n            if(ref.current['confirm_password'])ref.current['confirm_password'].style.backgroundImage = `url(${password_logo})` \r\n        ref.current['password'].style.backgroundImage = `url(${password_logo})`\r\n    }\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n\r\n\r\n    },[ref , Error])\r\n\r\n    const origin = appConfig.origin\r\n\r\n   let Login = useCallback((event)=>{\r\n        let form = event.target\r\n        let email_input = form[0]\r\n        let password_input = form[1]\r\n\r\n        let xhr = new XMLHttpRequest()\r\n        xhr.open('POST', `${origin}backend_api/loginmanully`)\r\n        props.appbodyloading('flex')\r\n\r\n        xhr.onreadystatechange = ()=>{\r\n            if (xhr.status === 200 && xhr.readyState === 4){\r\n                let response = JSON.parse(xhr.response)\r\n                \r\n                if(response.status === \"fail\"){\r\n                    set_Error(\"error\")\r\n                    props.appbodyloading('none')\r\n\r\n                }else if(response.status === \"not_match\"){\r\n                    password_input.focus()\r\n                    password_input.setCustomValidity('⚠️invalid password⚠️Forgot password ?')\r\n                    password_input.reportValidity()\r\n                    setTimeout(()=>password_input.setCustomValidity('') , 2000)\r\n                    props.appbodyloading('none')\r\n\r\n                }else if(response.status === \"success\"){\r\n                    props.change_login_context(response.session)\r\n                    sessionStorage.setItem('session', response.session)\r\n                    let login_data = JSON.stringify(response.login_data)\r\n                    localStorage['login_data'] = login_data\r\n                    props.appbodyloading('none')\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        xhr.setRequestHeader(\"credentails\" , JSON.stringify({email : email_input.value,\r\n                                                        password : password_input.value}))\r\n        xhr.send()\r\n    })\r\n    \r\n\r\n    let login_form =useMemo(()=> (<><h1 align='center' ref = {el =>ref.current['heading'] =el} >Login</h1>\r\n    <form action= 'javascript:void(0);' method = 'POST' onSubmit =  {(e)=>Login(e) } >  \r\n        <input id='email' maxLength={100} type=\"email\" ref= {el=>ref.current['email']= el} placeholder = 'Email' required = {true} />\r\n        <input type=\"password\" minLength={8} maxLength={100} id='password' ref = {el=>ref.current['password']=el}  placeholder= \"Password\" required = {true} />\r\n        <input className='submit' type=\"submit\"  value= 'Login'   />\r\n        <div className=\"redirectSignup\">\r\n                    <p>Didn't Have an account?<Link to = '/blog_tube_react/Signup'>SignUp</Link>\r\n                    <br />\r\n                    <a href = \"#\" onClick = {()=>set_Error('ask_email')} >Forgot Password </a>\r\n                    </p>\r\n                </div>\r\n    </form></>))\r\n\r\n    let error_msg =useMemo(()=> (<div className = 'error'>\r\n    <h2 ref = {el =>ref.current['heading'] =el} align = 'cetner'>Invalid Credentials</h2>\r\n    <button className = \"back\"  onClick = {()=>set_Error(\"form\")} >Back</button>\r\n    \r\n    </div>))\r\n\r\n    //email_form functions\r\n    let forgot_pass_email= useCallback(event=>{\r\n        let form = event.target\r\n        let email_input = form[0]\r\n        let email = email_input.value\r\n\r\n        let xhr = new XMLHttpRequest()\r\n        xhr.open('POST', origin + \"backend_api/forgototp\")\r\n        props.appbodyloading('flex')\r\n\r\n        xhr.onreadystatechange = ()=>{\r\n            if(xhr.status === 200 && xhr.readyState === 4){\r\n                let response = JSON.parse(xhr.response)\r\n                console.log(response)\r\n\r\n                if (response.status === \"error\"){\r\n                    set_Error('error')\r\n                    props.appbodyloading('none')\r\n                }else if (response.status === 'success'){\r\n                    set_Error('otp')\r\n                    props.appbodyloading('none')\r\n                }\r\n            }\r\n        }\r\n\r\n        xhr.setRequestHeader(\"userData\" , JSON.stringify({ email : email}))\r\n        xhr.send()\r\n    })\r\n\r\n    let email_form = useMemo(()=>(<>\r\n            <h1 align='center' ref = {el =>ref.current['heading'] =el} >Email</h1>\r\n        <div className = \"forgot_form\"  >\r\n            <form action=\"javascript:void(0);\" onSubmit = {forgot_pass_email} >\r\n            <input type=\"email\" id='email' ref={el => ref.current['email']=el} placeholder= \"Email\" required = {true} />\r\n            <input className='submit' type=\"submit\"  value= 'Submit'   />\r\n            </form>\r\n        </div>\r\n        </>\r\n    ))\r\n    \r\n    let forgot_pass_otp = useCallback( event =>{\r\n        let form = event.target\r\n        let otp_input  = form [0]\r\n\r\n        let xhr = new XMLHttpRequest()\r\n        xhr.open('POST', origin+'backend_api/validateforgototp')\r\n        props.appbodyloading('flex')\r\n\r\n        xhr.onreadystatechange = ()=>{\r\n            if (xhr.status === 200 && xhr.readyState === 4){\r\n                let response = JSON.parse(xhr.response)\r\n                console.log(response)\r\n                \r\n                if(response.status === 'fail'){\r\n                    otp_input.focus()\r\n                    otp_input.setCustomValidity('⚠️invalid OTP⚠️')\r\n                    otp_input.reportValidity()\r\n                    props.appbodyloading('none')\r\n                }else if (response.status === 'success'){\r\n                    set_Error('change_password')\r\n                    props.appbodyloading('none')\r\n                }\r\n            }\r\n        }\r\n\r\n        xhr.setRequestHeader('otp' , otp_input.value)\r\n        xhr.send()\r\n    })\r\n    const validotp= useCallback((e)=>{\r\n        if(e.target.value.length > 4){e.target.setCustomValidity('OTP must be of 4 digit');e.target.reportValidity()}\r\n        else if(e.target.value.length < 4){e.target.setCustomValidity('OTP must have 4 digits')}\r\n        else{e.target.setCustomValidity('')}\r\n    })\r\n\r\n    let otp_form = useMemo(()=>(<>\r\n            <h1 align='center' ref = {el =>ref.current['heading'] =el} >OTP</h1>\r\n            <div className = \"forgot_form\"  >\r\n            <form action=\"javascript:void(0);\" onSubmit = {forgot_pass_otp} >\r\n            <input type=\"number\" onInput={validotp} id= \"password\"\r\n            ref = {el=>ref.current['password']=el}  \r\n            placeholder= \"OTP\" required = {true}\r\n            style= {{fontSize : '35px', letterSpacing : \"20px\" , paddingLeft: \"60px\"}}\r\n             />\r\n            <input className='submit' type=\"submit\"  value= 'Submit'   />\r\n            </form>\r\n        </div>\r\n    </>))\r\n\r\n    let change_pass =useCallback( event =>{\r\n        let form = event.target\r\n        let password_input = form[1]\r\n\r\n        let xhr = new XMLHttpRequest()\r\n        xhr.open('POST' , origin + 'backend_api/changepassword')\r\n        props.appbodyloading('flex')\r\n\r\n        xhr.onreadystatechange  = ()=>{\r\n            if (xhr.status === 200 && xhr.readyState === 4){\r\n                let response  = JSON.parse(xhr.response)\r\n                \r\n                if (response.status === 'fail'){\r\n                    password_input.focus()\r\n                    password_input.setCustomValidity('Something went wrong')\r\n                    password_input.reportValidity()\r\n                    props.appbodyloading('none')\r\n                }else if (response.status === 'success'){\r\n                    set_Error('form')\r\n                    props.appbodyloading('none')\r\n                }\r\n            }\r\n        }\r\n\r\n        xhr.setRequestHeader('newpass' , password_input.value)\r\n        xhr.send()\r\n    })\r\n\r\n\r\n    let change_pass_from = useMemo(()=>(\r\n        <><h1 align='center' ref = {el =>ref.current['heading'] =el} >Change</h1>\r\n    <form action= 'javascript:void(0);'  onSubmit = {change_pass} >  \r\n    <input type=\"password\" minLength={8} maxLength={100} id='password' ref = {el=>ref.current['password']=el}  placeholder= \"New password\" required = {true} />\r\n        <input type=\"password\" minLength={8} maxLength={100} id='password' onInput = {(e)=>e.target.setCustomValidity('')} ref = {el=>ref.current['confirm_password']=el}  placeholder= \"Confirm password\" required = {true} />\r\n        <input className='submit' type=\"submit\"  value= 'Change'   />\r\n                    \r\n    </form></>\r\n    ))\r\n\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"form\" ref = {el =>ref.current['form'] = el}>\r\n                 {Error === \"form\"?login_form :null }\r\n                 {Error === \"ask_email\"? email_form :null}\r\n                 {Error === \"otp\" ? otp_form :null}\r\n                 {Error === \"change_password\" ? change_pass_from :null}\r\n                 {Error === \"error\"? error_msg:null}\r\n\r\n                \r\n\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default AppLogin;","D:\\Python files\\Start Django\\blog_tube\\frontend\\blog_tube\\src\\componenets\\appBodyLoading.js",["122"],"import { useState ,useEffect} from \"react\";\r\nimport  './statics/css/loading.css'\r\nimport logo from './statics/images/blogTubeIcon.svg'\r\n\r\nconst AppBodyLoading = props=>{\r\n\r\n    const [state , set_state ] = useState(props.loading)\r\n    useEffect(()=>{\r\n        set_state(props.loading)\r\n    },[props.loading])\r\n\r\n    return (\r\n        <div className=\"loading\"  style = {{display : state, pointerEvents:'all'}} >\r\n            <div className=\"logoanime\">\r\n                <h1 style = {{color :'white'}}  align = \"center\" >Depends on Internet Speed</h1>\r\n                <img src={logo}  id = 'loadinglogo'   />\r\n                <div className='loadinganime' >\r\n                    <div className ='dots' style = {{\"--i\" : 1}}></div>\r\n                    <div className ='dots' style = {{\"--i\" : 2}}></div>\r\n                    <div className ='dots' style = {{\"--i\" : 3}}></div>\r\n                   \r\n                </div>\r\n\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppBodyLoading;","D:\\Python files\\Start Django\\blog_tube\\frontend\\blog_tube\\src\\componenets\\appBlogians.js",["123","124","125","126","127","128","129","130"],"import './statics/css/appBlogians.css'\r\nimport appConfig from './statics/appConfig.json'\r\nimport {useEffect, useState ,useRef , useContext, useCallback} from 'react'\r\nimport blogiansIcon from './statics/images/blogians.svg'\r\nimport PropTypes from 'prop-types'\r\nimport {Login_context} from '../App'\r\nimport { useLocation , Link ,Redirect, useRouteMatch , useHistory} from 'react-router-dom'\r\nimport { CacheSwitch as Switch, CacheRoute as Route} from 'react-router-cache-route'\r\nimport AppUserProfile, { FollowButton } from './appUserProfile'\r\nimport UserImage from './userImage'\r\nimport { parseHTML } from 'jquery'\r\n\r\n\r\nvar AppBlogians = props=>{\r\n    const {path} = useRouteMatch()\r\n\r\n    const [user_list , set_user_list] = useState([])\r\n\r\n    var ref_list = useRef([]) ;\r\n\r\n    useEffect(()=>{\r\n    var xhr = new XMLHttpRequest()\r\n    xhr.open('GET' , appConfig.origin + \"backend_api/userlist\")\r\n    xhr.onreadystatechange = ()=>{\r\n        if (xhr.readyState === 4 && xhr.status === 200){\r\n            let response = JSON.parse(xhr.response)\r\n\r\n            if (response.status === 'success'){\r\n                ref_list.current['list'] = response.userslist\r\n                set_user_list(response.userslist)\r\n            }else if (response.status === 'fail'){\r\n                set_user_list([])\r\n            }\r\n\r\n        }\r\n    }\r\n    xhr.send()\r\n\r\n    window.addEventListener('resize' , hide_preview , true)\r\n    return ()=>window.removeEventListener('resize' , hide_preview , true)\r\n},[])\r\n\r\n    function search(event){\r\n        const target = event.target\r\n        let data = event.nativeEvent.data\r\n\r\n        if ( \"?\\\"':;!*()\".search(data) != -1){\r\n            target.setCustomValidity(\"username does not contain ?!:;#$%^&*\\\"'() \")\r\n            target.value = target.value.slice(0 , target.value.length -1)\r\n            target.reportValidity()\r\n        }else{\r\n            target.setCustomValidity(\"\")\r\n            target.reportValidity()\r\n            \r\n            let filtered_list = []\r\n            \r\n            for (var user of ref_list.current['list']){\r\n                if(user.user_name.search(target.value) != -1){\r\n                    filtered_list.push(user)\r\n                }\r\n            filtered_list.sort((a,b)=>b.followers_count - a.followers_count)\r\n            set_user_list(filtered_list)\r\n            \r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    const mq = window.matchMedia('(min-width : 768px)')\r\n\r\n\r\n    let ref = useRef({})\r\n\r\n    const [user_id , set_user_id]= useState(null)\r\n    \r\n    function show_preview(uid){\r\n        set_user_id(uid)\r\n        if (mq.matches){\r\n            ref.current['preview_window'].style.display = \"block\"\r\n            ref.current['blogians_window'].style.gridColumn = \"1 / span 1\"\r\n            set_follow('none')\r\n        }\r\n    }\r\n    function hide_preview(){\r\n        \r\n        ref.current['preview_window'].style.display = \"none\"\r\n        ref.current['blogians_window'].style.gridColumn = \"1 / span 2\"\r\n        \r\n        set_follow('block')\r\n    }\r\n    let history = useHistory()\r\n    const [follow ,set_follow] = useState('block')\r\n\r\n    return (\r\n    <div className= \"holder\">\r\n\r\n    <div  className=\"blogians\" ref = {el=>ref.current['blogians_window']=el} onDoubleClick= {()=>hide_preview()}>\r\n                <input className = \"blogiansInput\" onInput= {event=>search(event)} style= {{backgroundImage:`url(${blogiansIcon})`}} type = \"text\" placeholder = \"Search Blogians\" />\r\n                <div className=\"allBlogians\">\r\n                    {user_list.map(item=>{\r\n                        return(<BlogiansMiniProfile follow={follow} key = {item.user_id} user_details = {item}  onClick = {(uid)=>show_preview(uid)} to={`${path}/profile_small/${item.user_id}`} />)\r\n                    })}\r\n                </div>\r\n            </div>\r\n            <div className=\"profile_preview\" ref  = {el=>ref.current['preview_window']=el}>   \r\n                <Route exact  path = {`${path}/profile_small/:user_id`}>\r\n                    {mq.matches?(<>\r\n                    <AppUserProfile />\r\n                    {follow==='none'?<button id = \"FullpageProfile\"  onClick={()=>history.push(`/blog_tube_react/Profile/${user_id}`)}> Full Profile </button>:null}\r\n                    </>)\r\n                    : <Redirect to = {`/blog_tube_react/Profile/${user_id}`} />}\r\n                </Route>\r\n                \r\n\r\n            </div>\r\n            </div>\r\n    )\r\n}\r\n\r\n\r\nfunction BlogiansMiniProfile(props){\r\n    const [followers ,set_followers] = useState(props.user_details.followers_count)\r\n\r\n    const change_followers = useCallback((state)=>{\r\n        if (state)set_followers(followers+1)\r\n        else set_followers(followers -1)\r\n    })\r\n\r\n    return(\r\n        <Link className = \"links\" onClick = {()=>props.onClick(props.user_details.user_id)} style = {{textDecoration:'none',width : '100%',display:'flex', maxWidth: \"1000px\", justifyContent:'center',placeItems:'center'}} to = {props.to} >\r\n        <div className=\"miniprofile\"  >\r\n            <UserImage  width = \"50px\" height = \"50px\" to = {`/blog_tube_react/Profile/${props.user_details.user_id}`}\r\n             style = {{backgroundColor : \"rgb(255, 255, 255)\",\r\n                        margin:\"auto\",\r\n                        gridArea : \"photo\" ,\r\n                        borderWidth : \"2px\"}} \r\n                        \r\n                user_id = {props.user_details.user_id}\r\n                onClick = {()=>null} />\r\n            <div className=\"profile_name\" title = {props.user_details.user_name} >\r\n                {props.user_details.user_name}\r\n                \r\n                </div>\r\n            <div className=\"follower\" >\r\n                <div className=\"follower_count\" style= {{backgroundImage : `url(${blogiansIcon})`}}   >  {followers > 0 ?followers:\"No\"} Followers </div>\r\n            <FollowButton change_followers = {change_followers}  user_id = {props.user_details.user_id} style = {{marginRight: \"10px\" , marginLeft: 'auto',display:props.follow}}  /></div>\r\n            {props.user_details.total_blogs > 0 ?<div className=\"tag\">🏹Blogger</div>:null}\r\n        </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\nBlogiansMiniProfile.propTypes = {\r\n    user_details : PropTypes.object.isRequired,\r\n    to : PropTypes.string.isRequired\r\n}\r\n\r\nexport {BlogiansMiniProfile}\r\n\r\nexport  default AppBlogians;\r\n","D:\\Python files\\Start Django\\blog_tube\\frontend\\blog_tube\\src\\componenets\\Menu.js",["131","132","133"],"import {useCallback, useContext, useEffect, useRef ,useState } from 'react'\r\nimport { Login_context } from '../App'\r\nimport './statics/css/Menu.css'\r\nimport { Link , useHistory } from 'react-router-dom'\r\nimport UserImage from './userImage'\r\nimport {profile_photo , logout} from './statics/utils'\r\nimport homeIcon from './statics/images/homeIcon.svg'\r\nimport PropType from 'prop-types'\r\nimport loginIcon from './statics/images/password.svg'\r\nimport logoutIcon from './statics/images/logoutIcon.svg'\r\nimport uploadBlogIcon from './statics/images/uploadblogIcon.svg'\r\nimport blogians from  './statics/images/blogians.svg'\r\n\r\nfunction Menu  (props){\r\n    var ref = useRef({})\r\n\r\n    let count = 0 \r\n\r\n    function click_event(event){\r\n        const elements_list = ref.current['menu_container'].getElementsByTagName(\"*\")\r\n\r\n        let get_done = true\r\n        for (let elem of elements_list){\r\n            if (elem === event.target){\r\n                get_done = false\r\n            }\r\n        }\r\n        if(get_done){\r\n            count+=1\r\n                if (count===1){\r\n                    props.onClick()\r\n                    count=0\r\n                \r\n                }\r\n                event.target.removeEventListener('click' ,click_event , true)}\r\n        \r\n    }\r\n\r\n    function change_display(item){\r\n        if (!props.open){\r\n            if(mq.matches){item.style.display= 'none'}\r\n            else{\r\n            item.style.transform = 'translateX(-270px)'\r\n            item.style.backdropFilter = 'brightness(1)'\r\n            setTimeout(()=>{\r\n                item.style.display = 'none'\r\n                \r\n            },300)}\r\n        }else{\r\n            item.style.display = 'flex'\r\n            item.style.transform = 'translateX(0px)'\r\n            item.style.backdropFilter = 'brightness(0.6)'\r\n            item.addEventListener('click' , click_event , true)\r\n\r\n        }\r\n    }\r\n\r\n\r\n    var login_context = useContext(Login_context)\r\n    useEffect(()=>{\r\n        change_display(ref.current['menu_box'])\r\n    }, [props.open])\r\n\r\n    const [login , set_login ] = useState(Boolean(sessionStorage.session))\r\n\r\n\r\n    useEffect(()=>{\r\n        if( sessionStorage.session === login_context ){\r\n            set_login(true)\r\n        }else{ set_login(false) }\r\n\r\n    } , [sessionStorage.session , login,login_context])\r\n\r\n\r\n    let mq = window.matchMedia('(min-width: 576px)')\r\n\r\n    \r\n    try{if (!mq.matches){\r\n        ref.current[\"menu_container\"].style.left = 0\r\n    }}catch(err){\r\n        console.log(err)}\r\n    \r\n\r\n    return(\r\n        <div className=\"menu_box\" id = \"menu_box\"  ref= {el => ref.current['menu_box'] = el}  >\r\n            <div className=\"menu_container\" id = \"menu_container\" ref = { el => ref.current['menu_container']=el}>\r\n                <div className=\"nameImage\" style = {{display : 'grid',gridTemplateRows:' 70% 30% '}} >\r\n                <UserImage onClick = {()=>props.onClick()} width = \"80px\" style = {{alignSelf:\"end\"}}  height = \"80px\" to = {login?`/blog_tube_react/Profile/${profile_photo()}`:'/blog_tube_react/Signup'} user_id={profile_photo()} login_state = {props.login_state}  />\r\n                <h2 align = \"center\" style = {{margin:0 , padding:0,\r\n                fontFamily:'play',\r\n                fontSize:'28px',\r\n                color:\"#0066ed\",\r\n                lineHeight:2,\r\n                maxWidth:\"80%\",\r\n                textOverflow:'ellipsis',\r\n                justifySelf:'center'\r\n                }} >{login?JSON.parse(localStorage.login_data).username : \"\"}</h2>\r\n                </div>\r\n                <MenuItem onClick = {()=>props.onClick()}  img = {homeIcon} to = \"/blog_tube_react/Home\" >Home</MenuItem>\r\n                <MenuItem  onClick = {()=>props.onClick()} to = \"/blog_tube_react/Blogians\"  img = {blogians}>Blogians</MenuItem>\r\n                <MenuItem  onClick = {()=>props.onClick()} to = \"/blog_tube_react/UploadBlog\"  img = {uploadBlogIcon}>Upload Blog</MenuItem>\r\n                <MenuItem  onClick = {()=>props.onClick()} to = \"/blog_tube_react/Login\" logout = {login?true:false} img = {login?logoutIcon:loginIcon}>{login?\"Logout\":\"Login\"}</MenuItem>\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nvar MenuItem = props=>{\r\n    const child_style = {\r\n        width : '60%',\r\n        position : 'inherit',\r\n        backgroundImage : `url(${props.img})`,\r\n        backgroundRepeat : 'no-repeat',\r\n        backgroundSize: \"25px 25px\",\r\n        backgroundPosition: \"0px 0px\",\r\n        paddingLeft : \"40px\",\r\n        minHeight : '30px',\r\n        fontSize : '25px',\r\n        fontWeight : '500',\r\n        fontFamily : \"sans-serif\",\r\n    }\r\n    const menuItem_style = {\r\n        position:'inherit',\r\n        width : '100%',\r\n        height: '100%',\r\n        display : 'flex',\r\n        justifyContent : 'center',\r\n        placeItems : 'center',\r\n    }\r\n\r\n    const click= useCallback(()=>{\r\n        history.push(props.to)\r\n        props.onClick()\r\n        if( props.logout === true){\r\n            logout()\r\n        }\r\n    })\r\n    const history = useHistory()\r\n\r\n    return (\r\n        <Link  onClick={()=>click()} style = {{textDecoration: 'none'}}>\r\n        <div style = {menuItem_style} className=\"menuItem\">\r\n            <div style = {child_style}>{props.children}</div>\r\n        </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\nMenuItem.propType = {\r\n    to : PropType.string,\r\n    img : PropType.string.isRequired\r\n}\r\n\r\nexport default Menu;","D:\\Python files\\Start Django\\blog_tube\\frontend\\blog_tube\\src\\componenets\\appUserProfile.js",["134","135","136","137","138","139","140"],"import './statics/css/appUserProfile.css'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport { useCallback, useContext , useEffect ,useMemo,useRef,useState} from 'react'\r\nimport { useHistory, useRouteMatch } from 'react-router'\r\nimport appConfig from './statics/appConfig.json'\r\nimport PropTypes from 'prop-types'\r\nimport { Login_context } from '../App'\r\nimport UserImage from './userImage'\r\nimport followers_icon from './statics/images/blogians.svg'\r\nimport followings_icon from './statics/images/unkownUser.svg'\r\nimport blogs_icon from './statics/images/uploadblogIcon.svg'\r\nimport views_icon from './statics/images/preview.svg'\r\nimport email_icon from './statics/images/email.svg'\r\nimport datetime_icon from './statics/images/join_datetime.svg'\r\nimport comments_icon from './statics/images/comments.svg'\r\nimport { BlogComponent } from './appHome'\r\nimport { BlogiansMiniProfile } from './appBlogians'\r\nimport { Comment } from './appBlog'\r\n\r\nconst AppUserProfile = props =>{\r\n    let {user_id} = useParams()\r\n    const history = useHistory()\r\n\r\n    const [profile_data , set_profile_data] = useState({\r\n        userName:'',joinDatetime:'',email:'',\r\n        blogs:[],comments:[],followings:[],\r\n        followers:[]\r\n    })\r\n    useEffect(()=>{\r\n        if(user_id === \"null\")history.goBack()\r\n\r\n        let xhr = new XMLHttpRequest()\r\n        xhr.open('POST' , appConfig.origin+`backend_api/getUserDetails`)\r\n        xhr.onreadystatechange=()=>{\r\n            if(xhr.readyState === 4 && xhr.status === 200){\r\n                let response = JSON.parse(xhr.response)\r\n                switch (response.status) {\r\n                    case \"success\":\r\n                        console.log(response.userData)\r\n                        set_profile_data(response.userData)\r\n                        break;\r\n                    case \"fail\":\r\n                        history.push('/blog_tube_react/Error')\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        xhr.setRequestHeader('userId' , user_id)\r\n        xhr.send()\r\n        \r\n    }, [user_id])\r\n    \r\n\r\n    const[ views, set_views]= useState(0) ;\r\n\r\n    useEffect(()=>{\r\n        let views = 0\r\n        for (let i of profile_data.blogs){\r\n            views+= i.blog_details.views\r\n        }\r\n        set_views(views)\r\n    },[profile_data])\r\n\r\n    const usingColor = Math.floor(Math.random()*360)\r\n\r\n    useEffect(()=>{\r\n        let ele  = document.getElementsByClassName(\"appbody\")[0]\r\n        ele.scrollTo(0,0)\r\n    })\r\n    \r\n    return (<div className = \"profile_div\">\r\n        <div className = \"pic_bg\" style = {{filter:`hue-rotate(${usingColor}deg)`}}></div>\r\n        <div className=\"user_head\">\r\n            <UserImage  user_id= {user_id} to=\"#\"  \r\n            width= '100px' height = '100px'  onClick={()=>null}\r\n            style = {{borderWidth:\"2px\",borderRadius:\"5px\" ,margin:\"auto 10px\"}}\r\n            \r\n            />\r\n            <h3 style={{color:\"#00aed5\",filter:`hue-rotate(${usingColor}deg) brightness(0.5)`}}\r\n             id=\"profile_username\" >{profile_data.userName}</h3>\r\n            <FollowButton user_id = {user_id}\r\n            style={{marginLeft:'auto' ,marginRight:'20px',color:\"#00aed5\",filter:`hue-rotate(${usingColor}deg) brightness(0.5)`,\r\n            borderColor:\"#00aed5\"\r\n        }} />\r\n        </div>\r\n        <div className=\"data\">\r\n            <UserDataItem filter = {`hue-rotate(${usingColor-33}deg)  brightness(0.7)`} data_icon = {followers_icon} data={`${profile_data.followers.length?profile_data.followers.length:'No'} Followers`} />\r\n            <UserDataItem filter = {`hue-rotate(${usingColor-33}deg)  brightness(0.7)`} data_icon = {followings_icon} data={`${profile_data.followings.length?profile_data.followings.length:'No'} Followings`} />\r\n            <UserDataItem filter = {`hue-rotate(${usingColor-33}deg)  brightness(0.7)`} data_icon = {blogs_icon} data={`${profile_data.blogs.length?profile_data.blogs.length:'No'} Blogs`} />\r\n            <UserDataItem filter = {`hue-rotate(${usingColor-33}deg)  brightness(0.7)`} data_icon = {views_icon} data={`${views?views:'No'} Views`} />\r\n            <UserDataItem filter = {`hue-rotate(${usingColor-33}deg)  brightness(0.7)`} data_icon = {datetime_icon} data={profile_data.joinDatetime} />\r\n            <UserDataItem filter = {`hue-rotate(${usingColor-33}deg)  brightness(0.7)`} data_icon = {comments_icon} data={`${profile_data.comments.length?profile_data.comments.length:'No'} Comments`} />\r\n            <UserDataItem filter = {`hue-rotate(${usingColor-33}deg)  brightness(0.5)`} \r\n            style = {{flexBasis:'100%', overflow:'auto',userSelect:'text',placeContent:\"center\"}}\r\n            data_icon = {email_icon} data={profile_data.email} />\r\n        </div>\r\n        <ProfileTabs \r\n        followers = {profile_data.followers}\r\n        blogs = {profile_data.blogs} \r\n        comments = {profile_data.comments}\r\n        followings = {profile_data.followings}\r\n        filter = {`hue-rotate(${usingColor-33}deg)`} />\r\n    </div>)\r\n}\r\nexport default AppUserProfile;\r\n\r\nconst ProfileTabs=props=>{\r\n    var ref = useRef({})\r\n    const change_tab  = useCallback(event=>{\r\n        let value = event.target.value\r\n        let width = ref.current.all_comments.getBoundingClientRect().width\r\n        switch (value){\r\n            case \"blogs\":\r\n                ref.current.profile_tabs.scrollTo(0,0)\r\n                break;\r\n            case \"followers\":\r\n                ref.current.profile_tabs.scrollTo(width,0)\r\n                break;\r\n            case \"comments\":\r\n                ref.current.profile_tabs.scrollTo(width*2,0)\r\n                break;\r\n            case \"followings\":\r\n                ref.current.profile_tabs.scrollTo(width*3,0)\r\n                break;\r\n            default :\r\n                ref.current.profile_tabs.scrollTo(0,0)\r\n                break;\r\n        }\r\n    },[ref])\r\n    \r\n    return(\r\n        <div className=\"profile_tabs_container\">\r\n        <div className=\"tab_options\">\r\n            <input value = \"blogs\" type=\"radio\" onInput={e=>change_tab(e)} name=\"options\" id=\"blogs_option\" hidden defaultChecked />\r\n            <label style = {{filter:props.filter,'--bg-image':`url(${blogs_icon})`}} htmlFor=\"blogs_option\" className=\"optionlabel\">Blogs</label>\r\n            <input value = \"followers\" type=\"radio\" onInput={e=>change_tab(e)} name=\"options\" id=\"followers_option\" hidden />\r\n            <label style = {{filter:props.filter,'--bg-image':`url(${followers_icon})`}} htmlFor=\"followers_option\" className=\"optionlabel\">Followers</label>\r\n            <input value = \"comments\" type=\"radio\" onInput={e=>change_tab(e)} name=\"options\" id=\"comments_option\" hidden />\r\n            <label style = {{filter:props.filter,'--bg-image':`url(${comments_icon})`}} htmlFor=\"comments_option\" className=\"optionlabel\">Comments</label>\r\n            <input value = \"followings\" type=\"radio\" onInput={e=>change_tab(e)} name=\"options\" id=\"followings_option\" hidden />\r\n            <label style = {{filter:props.filter,'--bg-image':`url(${followings_icon})`}} htmlFor=\"followings_option\" className=\"optionlabel\">Followings</label>\r\n        </div>\r\n        <div className=\"profile_tabs\" ref = {el => ref.current.profile_tabs = el} >\r\n            <span id=\"all_blogs\" ref={el=>ref.current.all_blogs=el} >\r\n                {props.blogs!==[]?props.blogs.map(item=>(<BlogComponent mini={true} user_details={item.user_details}\r\n\r\n            views= {item.blog_details.views} likes={item.blog_details.likes} dislikes={item.blog_details.dislikes}\r\n            date = {item.blog_details.datetime}\r\n            title = {item.blog_details.title} \r\n            discription = {item.blog_details.discription}\r\n            image_url = {item.blog_details.blog_title_image} blog_id = {item.blog_details.blog_id}\r\n            key = {item.blog_details.blog_id} />))\r\n            :\"No Blogs\"}\r\n            </span>\r\n            <span id=\"all_followers\"  ref={el=>ref.current.all_followers=el} >\r\n                    {props.followers !==[]?\r\n                    props.followers.map(item=>(<BlogiansMiniProfile follow={'block'} key = {item.user_id} user_details = {item}  onClick = {()=>null} to={`/blog_tube_react/Profile/${item.user_id}`} />))\r\n                    :\"No Followers\"}\r\n            </span>\r\n            <span id=\"all_comments\" ref={el=>ref.current.all_comments=el} >\r\n                {props.comments!==[]?\r\n                (props.comments.map(item=>(<><Link className=\"comment_title\" to={`/blog_tube_react/Blog/${item.blog_title}?id=${item.blog_id}`} ><span>{item.blog_title}</span></Link><Comment c_detials = {item} key ={item.cid} /></>)))\r\n                :\"No Comments\"}\r\n            </span>\r\n            <span id=\"all_followings\" ref={el=>ref.current.all_followings=el} >\r\n            {props.followings !==[]?\r\n                    props.followings.map(item=>(<BlogiansMiniProfile follow={'block'} key = {item.user_id} user_details = {item}  onClick = {()=>null} to={`/blog_tube_react/Profile/${item.user_id}`} />))\r\n                    :\"No Followings\"}\r\n            </span>\r\n        </div>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nconst UserDataItem = props=>{\r\n    return (\r\n        <span className=\"data_item\" title = {props.data} style = {props.style}>\r\n            <img src = {props.data_icon} className = \"data_icon\" style = {{filter:props.filter}} width= \"30\" height=\"30\"  />\r\n            {props.data}\r\n            </span>\r\n    )\r\n}\r\n\r\nconst FollowButton=props=>{\r\n    const [follow_state, set_follow_state] = useState('Follow')\r\n    var context = useContext(Login_context)\r\n    var ref = useRef()\r\n    const history = useHistory()\r\n\r\n    const check_follower  = useCallback(()=>{\r\n        if (context === sessionStorage.session){\r\n            let xhr = new XMLHttpRequest()\r\n            xhr.open('POST' , appConfig.origin+'backend_api/getFollowingList')\r\n            xhr.onreadystatechange=()=>{if(xhr.status === 200 && xhr.readyState ===4){\r\n                let response = JSON.parse(xhr.response)\r\n                \r\n                switch (response.status) {\r\n                    case \"success\":\r\n                        response.followings.indexOf(props.user_id)!== -1?\r\n                        set_follow_state('Following'):set_follow_state('Follow')\r\n                        break;\r\n                    case \"loginRequired\":\r\n                        console.log('backend_api/getFollowingList LoginRequired')\r\n                        break;\r\n                    case \"fail\":\r\n                        check_follower()\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }}\r\n            xhr.setRequestHeader('session'  , context)\r\n            xhr.send()\r\n        }\r\n    },[context])\r\n\r\n    \r\n    useEffect(()=>{\r\n        const observer = new IntersectionObserver(entries=>{\r\n            if (entries[0].intersectionRatio > 0){\r\n                check_follower()\r\n            }\r\n        })\r\n        observer.observe(ref)\r\n\r\n    },[ref,props.user_id])\r\n\r\n    const follow_unfollow = useCallback((event)=>{\r\n        event.stopPropagation()\r\n        event.preventDefault()\r\n        if (context === sessionStorage.session){\r\n            let xhr = new XMLHttpRequest()\r\n            xhr.open('POST' , appConfig.origin+'backend_api/followUnfollow')\r\n            xhr.onreadystatechange=()=>{if(xhr.status === 200 && xhr.readyState ===4){\r\n                let response = JSON.parse(xhr.response)\r\n                switch (response.status) {\r\n                    case \"success\":\r\n                        if(response.followings.indexOf(props.user_id)!== -1){\r\n                        set_follow_state('Following')\r\n                        props.change_followers(true)\r\n                    }\r\n                        else{\r\n                            set_follow_state('Follow')\r\n                            props.change_followers(false)\r\n                    }\r\n                        \r\n                        break;\r\n                    case \"loginRequired\":\r\n                        console.log('backend_api/followUnfollow')\r\n                        history.push('/blog_tube_react/Login')\r\n                        break;\r\n                    case \"fail\":\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }}\r\n            xhr.setRequestHeader('session'  , context)\r\n            xhr.setRequestHeader('toFollow'  , props.user_id)\r\n            xhr.setRequestHeader('state' , follow_state)\r\n            xhr.send()\r\n        }\r\n    })\r\n    return(\r\n        <button id=\"follow_button\" style = {props.style} ref = {el=>ref = el} onClick={follow_unfollow} disabled ={context !== sessionStorage.session || JSON.parse(localStorage.login_data).user_id === props.user_id} >{follow_state}</button>\r\n    )\r\n}\r\n\r\nexport {FollowButton}\r\n\r\nFollowButton.propTypes = {\r\n    user_id : PropTypes.string.isRequired,\r\n    style : PropTypes.object\r\n}","D:\\Python files\\Start Django\\blog_tube\\frontend\\blog_tube\\src\\componenets\\statics\\utils.js",[],"D:\\Python files\\Start Django\\blog_tube\\frontend\\blog_tube\\src\\componenets\\userImage.js",["141","142"],"import PropTypes from 'prop-types'\r\nimport unkownUser from './statics/images/unkownUser.svg'\r\nimport appConfig from './statics/appConfig.json'\r\nimport {Link } from 'react-router-dom'\r\nimport { useEffect, useRef ,useContext , useState} from 'react'\r\nimport {Login_context} from '../App'\r\nlet UserImage = props=>{\r\n    var session  = useContext(Login_context)\r\n    let ref = useRef(\"\")\r\n    const [ div_style , set_div_style] = useState({\r\n        width        : props.width,\r\n        aspectRatio:\"1 / 1\",\r\n        borderRadius : '100%',\r\n        borderStyle  : 'inset',\r\n        backgroundColor: \"rgb(255 255 255 / 55%)\",\r\n        boxShadow: \"0px 0px 8px 3px #3b3b3b8c\",\r\n        borderWidth  : '4px',\r\n        borderColor  : '#0334dd',\r\n        backgroundSize : `contain`,\r\n        backgroundPosition:'center',\r\n        alignSelf : 'center',\r\n        justifySelf : 'center',\r\n        backgroundRepeat :'no-repeat'\r\n    })\r\n    var flag;\r\n\r\n    function load_image(){\r\n        if (flag === false){\r\n        if (props.user_id === \"unknown\"){\r\n            set_div_style({...div_style , ...props.style ,backgroundImage : `url(${unkownUser})` })\r\n            let to = '/blog_tube_react/Signup'\r\n            flag = true\r\n        }else{\r\n                let xhr = new XMLHttpRequest()\r\n    xhr.open('POST', appConfig.origin + \"backend_api/getprofilephoto\")\r\n    xhr.responseType = 'blob'\r\n    xhr.onreadystatechange = ()=>{\r\n        if (xhr.readyState === 4 && xhr.status === 200){\r\n            let response = xhr.response\r\n            set_div_style({...div_style , ...props.style ,backgroundImage : `url(${URL.createObjectURL(response)})` })\r\n            flag = true\r\n        }\r\n    }\r\n    xhr.setRequestHeader(\"session\" , session?session:'')\r\n    xhr.setRequestHeader(\"photouid\" , props.user_id)\r\n    xhr.send()\r\n        }}\r\n    }\r\n    \r\n\r\n    useEffect(()=>{\r\n        var observer = new IntersectionObserver((entries,observer)=>{\r\n            if (entries[0].intersectionRatio > 0){\r\n                load_image()\r\n            }\r\n        })\r\n        observer.observe(ref.current)\r\n        flag = false;\r\n        set_div_style({...div_style , ...props.style})\r\n},[props.user_id,session])\r\n\r\n    return  <Link to = {props.to} ref ={el =>ref.current =el}  style = {div_style} onClick= {()=>props.onClick()} ></Link>\r\n}\r\n\r\n\r\nUserImage.propTypes = {\r\n    width : PropTypes.string.isRequired,\r\n    height : PropTypes.string.isRequired,\r\n    user_id : PropTypes.string.isRequired,\r\n    to : PropTypes.string.isRequired,\r\n    style : PropTypes.object\r\n}\r\n\r\nexport default UserImage;","D:\\Python files\\Start Django\\blog_tube\\frontend\\blog_tube\\src\\componenets\\appUploadBlog.js",["143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165"],"import React ,{useEffect ,useContext , useState, useCallback, useMemo, useRef} from 'react'\r\nimport { useHistory, useRouteMatch  } from 'react-router'\r\nimport { CacheSwitch as Switch , CacheRoute as Route  } from 'react-router-cache-route'\r\nimport { Login_context } from '../App'\r\nimport './statics/css/appUploadBlog.css'\r\nimport $ from \"jquery\"\r\nimport preview_image from './statics/images/preview.svg'\r\nimport editor_image from './statics/images/editor.svg'\r\nimport youtubeLogo from './statics/images/youtubeLogo.svg'\r\nimport popComp from './statics/images/popComp.svg'\r\nimport appConfig from './statics/appConfig.json'\r\nimport { logout } from './statics/utils'\r\n\r\n\r\nvar final_data = {}\r\n\r\nvar AppUploadBlog = props=>{\r\n    var login_context  = useContext(Login_context)\r\n    const history  = useHistory()\r\n    const ref = useRef({})\r\n\r\n    const [upload_blog_state , set_upload_blog_state] = useState('blog')\r\n    \r\n    \r\n    const change_image = useCallback(event=>{\r\n        let target = $('#label_image')\r\n        if (event.target.files != []){\r\n        let image_file = event.target.files[0]\r\n        \r\n        let image_url = URL.createObjectURL(image_file)\r\n        let image_span = $('#image_span')\r\n        image_span.css({\r\n            'backgroundImage':`url(${image_url})`,\r\n            backgroundSize:'contain',\r\n            backgroundPosition : 'center',\r\n            backdropFilter:'blur(3px)',\r\n            'borderRadius':'20px',\r\n           \r\n        })\r\n        target.css({'backgroundImage': `url(${image_url})`})\r\n        final_data['blog_title_image']=image_file\r\n    }else\r\n        target.css({'borderRadius':'20px',\r\n           'backgroundSize' :'cover',\r\n           \"boxShadow\": \"0px 1px 7px 3px #1976d2\"\r\n        })        \r\n    },[])\r\n\r\n    const forward_to_editor = useCallback((event)=>{\r\n        event.preventDefault()\r\n        final_data.title = ref.current['blog_title'].value\r\n        final_data.discription = ref.current['blog_discription'].value\r\n        set_upload_blog_state('blog_editor')\r\n        history.push(\"/blog_tube_react/UploadBlog/editor\")\r\n    })\r\n    \r\n    const blog_info = useMemo(()=>(\r\n        <form className=\"blog_info\" action='javascript:void(0);' onSubmit = {event=>forward_to_editor(event)}>\r\n            <div className=\"blog_info_child\">\r\n            <h1 align = \"center\">Blog Information </h1>\r\n            <label htmlFor=\"blog_title\" id = \"label_title\">Title</label>\r\n            <input type=\"text\" autoFocus placeholder = \"Title\" autoComplete=\"off\" spellCheck=\"true\" autoCapitalize=\"words\"  id = \"blog_title\" maxLength={100} ref= {el =>ref.current['blog_title']=el} required />\r\n\r\n            <label htmlFor=\"blog_discription\" id = \"label_discription\">Discription</label>\r\n            <textarea type=\"text\" autoComplete=\"off\" spellCheck=\"true\" autoCapitalize=\"sentences\" id=\"blog_discription\" placeholder=\"Discription\" maxLength={200} ref= {el =>ref.current['blog_discription']=el} />\r\n\r\n            <span id=\"span_label\" style = {{gridArea:\"image\",alignSelf:\"center\",justifySelf:\"center\" ,display:\"grid\"}}><label htmlFor=\"blog_image\" id = \"label_image\" ><span id = \"image_span\"></span></label></span>\r\n            <input type=\"file\" id = \"blog_image\" accept=\"image/*\" onChange={change_image} hidden />\r\n\r\n            <input type=\"submit\"  value=\"Next\" id = \"submit\" />\r\n            </div>\r\n\r\n        </form>\r\n    ),[upload_blog_state, change_image,forward_to_editor])\r\n\r\n    const [editor_state,set_editor_state] = useState('editor')\r\n\r\n    let set_to_editor= e=>{\r\n        set_editor_state(e.target.value)\r\n    }\r\n    useEffect(()=>{\r\n        if (editor_state===\"editor\"){\r\n            history.push(\"/blog_tube_react/UploadBlog/editor\")\r\n            set_editor_state(\"editor\")\r\n        }else if (editor_state === \"preview\"){\r\n            history.push(\"/blog_tube_react/UploadBlog/preview\")\r\n            set_editor_state(\"preview\")\r\n        }\r\n    },[editor_state])\r\n\r\n    const[blog , set_blog] = useState([])\r\n    const set_myblog = useCallback(data=>set_blog(data))\r\n\r\n    const blog_editor = useMemo(()=>(\r\n        <div className=\"editor\">\r\n            <Editor_tabs change_state = {set_to_editor} editor_state = {editor_state} />\r\n\r\n            <Switch>\r\n                <Route exact path = \"/blog_tube_react/UploadBlog/editor\">\r\n                    <Editing_pane appbodyloading = {state =>props.appbodyloading(state)} blog = {set_myblog} />\r\n                </Route>\r\n                <Route exact path=\"/blog_tube_react/UploadBlog/preview\">\r\n                    <Preview_tab list = {blog} appbodyloading={state =>props.appbodyloading(state)} />\r\n                </Route>\r\n            </Switch>\r\n        </div>\r\n    ))\r\n    \r\n    useEffect(()=>{\r\n        final_data['blog_title_image']=\"\"\r\n        if (login_context !== sessionStorage.session){\r\n            history.push('/blog_tube_react/Login')\r\n\r\n            return null\r\n        }\r\n    },[])\r\n    return(\r\n        <div className=\"blog_upload_page\">\r\n            {upload_blog_state === 'blog'? blog_info : null}\r\n            {upload_blog_state === 'blog_editor'?blog_editor:null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default  AppUploadBlog;\r\n\r\nvar Preview_tab =props =>{\r\n    const history = useHistory()\r\n    const [data_list, set_data_list] = useState([])\r\n    var context = useContext(Login_context)\r\n    useEffect(()=>{\r\n        if (props.list && sessionStorage.session === context){\r\n        console.log(props.list)\r\n        props.appbodyloading('flex')\r\n        let xhr = new XMLHttpRequest()\r\n        xhr.open(\"POST\" , appConfig.origin+\"backend_api/blogPreview\")\r\n        xhr.onreadystatechange =()=>{\r\n            if (xhr.readyState === 4 && xhr.status === 200){\r\n                let response = JSON.parse(xhr.response)\r\n                switch (response.status) {\r\n                    case \"success\":\r\n                        set_data_list(response.hydratedBlog)\r\n                        console.log(\"data_list:\",data_list)\r\n                        props.appbodyloading('none')\r\n                        break;\r\n                    case \"loginRequired\":\r\n                        history.push(\"/blog_tube_react/Login\")\r\n                        console.log(\"backend_api/blogPreview\" ,response)\r\n                        logout()\r\n                        props.appbodyloading('none')\r\n                        break\r\n                    default:\r\n                        console.log(response.status)\r\n                        props.appbodyloading('none')\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        xhr.setRequestHeader(\"session\" , context)\r\n        xhr.setRequestHeader(\"contentType\" , \"application/json;charset=utf-8\")\r\n        let formdata = new FormData()\r\n        formdata.append('blog' , JSON.stringify(props.list))\r\n        xhr.send(formdata)}\r\n    },[props.list,context])\r\n    return(\r\n        <div className=\"showpreview\">\r\n            <Blog>\r\n                {data_list.map(item=>(<div className=\"container_data\" dangerouslySetInnerHTML = {{__html: item}}></div>))}\r\n            </Blog>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Blog =props=>{\r\n    return(<div className=\"blog_preview\">\r\n        {props.children}\r\n    </div>)\r\n}\r\n\r\nexport {Blog}\r\n\r\n\r\nvar Editor_tabs= props =>{\r\n    const ref = useRef({})\r\n    useEffect(()=>{\r\n        ref.current[props.editor_state].click()\r\n    },[props.editor_state])\r\n    const {path , url} = useRouteMatch()\r\n\r\n    useEffect(()=>{\r\n        if (path === \"/blog_tube_react/UploadBlog/editor\"){\r\n            props.change_state(\"editor\")\r\n        }else if (path === \"/blog_tube_react/UploadBlog/preview\"){\r\n            props.change_state(\"preview\")\r\n        }\r\n    },[])\r\n    return(\r\n        <div className=\"tabs\">\r\n            <input ref = {el=>ref.current['editor']=el} type=\"radio\" name=\"tabs\" id=\"editer_radio\" value={\"editor\"} onInput= {(e)=>props.change_state(e)} hidden   defaultChecked />\r\n            <label htmlFor=\"editer_radio\" id = \"label_editor\" ><img src = {editor_image}  className = \"label_ico\" />Editor</label>\r\n            <input ref = {el=>ref.current['preview']=el} type=\"radio\" name=\"tabs\" id=\"preview_radio\" value= \"preview\" onInput= {(e)=>props.change_state(e)} hidden   />\r\n            <label htmlFor= \"preview_radio\" id = \"label_preview\" ><img src = {preview_image}  className = \"label_ico\" />Preview</label>\r\n        </div>\r\n        )\r\n}\r\n\r\nvar Editing_pane = props =>{\r\n    const ref = useRef({})\r\n    const [edit_state , set_edit_state ] = useState(true)\r\n\r\n    const mq = window.matchMedia(\"(max-width : 767px)\") \r\n\r\n    const switch_comp = useCallback(()=>{\r\n        let display = ref.current['components'].style.display\r\n        if (mq.matches){\r\n            if (display === \"none\" || display === \"\"){\r\n                ref.current['components'].style.display = \"flex\"\r\n            }else{\r\n                ref.current['components'].style.display = \"\"\r\n            }\r\n        }else{\r\n            ref.current['components'].style.display = \"flex\"\r\n        }\r\n\r\n    },[mq])\r\n\r\n    const [input_state , set_input_state] = useState(\"Heading\")\r\n\r\n    function change_input_state(event){\r\n        set_input_state(event.target.value)\r\n        ref.current['maintext'].focus()\r\n    }\r\n\r\n    useEffect(()=>{\r\n        ref.current['maintext'].innerHTML = \"\"\r\n        if (input_state === \"Photo\" || input_state === \"Video\"||input_state === \"Youtube Video\" ){\r\n            set_edit_state(false)\r\n            ref.current['maintext'].classList.remove(\"bullet_list\")\r\n\r\n        }else if(input_state === \"List\"){\r\n            set_edit_state(true)\r\n            ref.current['maintext'].classList.add(\"bullet_list\")\r\n        }        \r\n        else{\r\n            set_edit_state(true)\r\n        ref.current['maintext'].classList.remove(\"bullet_list\")\r\n        }\r\n\r\n        let widget ;\r\n\r\n\r\n        switch (input_state) {\r\n            case \"Video\":\r\n                widget = (`<input type= \"file\" accept =\"video/*\" id = \"videofile\" hidden  required />\r\n                           <label  for = \"videofile\">Video</label> `)\r\n                set_edit_state(false)\r\n                break;\r\n            case \"Photo\":\r\n                widget = (`<input type= \"file\" accept =\"image/*\" id = \"photofile\" hidden required />\r\n                           <label  for = \"photofile\">Photo</label> `)\r\n                set_edit_state(false)\r\n                break;\r\n            case \"Youtube Video\":\r\n                widget = (` <label  for = \"videolink\" style = \"border:none;padding:0;\">video Link</label> \r\n                            <input  style=\"    height: 20px;\r\n                            width: 90%;\r\n                            margin: 0;\r\n                            place-self: center;\r\n                            padding: 0;\r\n                            border-color: blueviolet;\r\n                            border-radius: 5px\"  type= \"url\" id = \"videolink\" required  />`)\r\n                set_edit_state(false)\r\n                break;        \r\n            default:\r\n                widget=\"\"\r\n                    set_edit_state(true)\r\n                    break;\r\n        }\r\n        ref.current['maintext'].innerHTML = widget\r\n\r\n    }, [input_state])\r\n\r\n    const [blog , set_blog] = useState([])\r\n    useEffect(()=>props.blog([]),[])\r\n\r\n    const data_submit = e=>{\r\n        e.preventDefault()\r\n        e.nativeEvent.stopImmediatePropagation();\r\n        if (input_state === \"Heading\"){\r\n            let heading = ref.current['maintext'].innerText\r\n            set_blog([...blog,{\"Heading\" : heading}])\r\n            props.blog([...blog,{\"Heading\" : heading}])\r\n            ref.current['maintext'].innerText = \"\"\r\n        }else if (input_state === \"Paragraph\"){\r\n            let para = ref.current['maintext'].innerText\r\n            set_blog([...blog,{\"Paragraph\" : para}])\r\n            props.blog([...blog,{\"Paragraph\" : para}])\r\n            ref.current['maintext'].innerText = \"\"\r\n        }else if (input_state === \"List\"){\r\n            let list = ref.current['maintext'].innerText\r\n            list = list.split(\"\\n\").filter(i=>i?i:null)\r\n            set_blog([...blog,{\"List\":list}])\r\n            props.blog([...blog,{\"List\":list}])\r\n            ref.current['maintext'].innerText = \"\"\r\n        }else if (input_state === \"Photo\"){\r\n            \r\n            let photofile = e.target[0].files[0]\r\n            set_blog([...blog,{ \"Photo\": photofile , \"name\" : photofile.name}])\r\n            props.blog([...blog,{ \"Photo\": photofile , \"name\" : photofile.name}])\r\n        \r\n        }else if  (input_state === \"Video\" ){\r\n           \r\n                \r\n            let videofile = e.target[0].files[0]\r\n            set_blog([...blog,{ \"Video\": videofile, \"name\" : videofile.name}])\r\n            props.blog([...blog,{ \"Video\": videofile, \"name\" : videofile.name}])\r\n           \r\n        }\r\n        else if (input_state === \"Youtube Video\"){\r\n            let pathList = e.target[0].value.split('/')\r\n            let temp_id = pathList[pathList.length - 1].split(\"=\")\r\n            let id = temp_id[temp_id.length - 1]\r\n            set_blog([...blog,{\"Youtube Video\": id}])\r\n            props.blog([...blog,{\"Youtube Video\": id}])\r\n            e.target[0].value = \"\"\r\n        }\r\n        final_data.blog = blog\r\n    }\r\n    var login_context = useContext(Login_context)\r\n    const history = useHistory()\r\n    const submit_data  = useCallback(()=>{\r\n        final_data.blog = blog\r\n        console.log(final_data)\r\n        props.appbodyloading('flex')\r\n        if (login_context === sessionStorage.session){\r\n            let login_data = JSON.parse(localStorage.login_data)\r\n            let xhr = new XMLHttpRequest()\r\n            let blog_details = JSON.stringify(final_data)\r\n            xhr.open(\"POST\" , `${appConfig.origin}backend_api/uploadBlog`)\r\n            xhr.onreadystatechange = ()=>{\r\n                if (xhr.readyState === 4 && xhr.status === 200){\r\n                    let response =JSON.parse( xhr.response)\r\n                    switch (response.status) {\r\n                        case \"loginRequired\":\r\n                            history.push('/blog_tube_react/Login')\r\n                            props.appbodyloading('none')\r\n                            break;\r\n                        case \"fail\":\r\n                            history.push('/blog_tube_react/Error')\r\n                            props.appbodyloading('none')\r\n                            break;\r\n                        case \"success\":\r\n                            history.push('/blog_tube_react/Home')\r\n                            props.appbodyloading('none')\r\n                            break;\r\n                        default:\r\n                            console.log(response.status);\r\n                    }\r\n                }\r\n            }\r\n            let formdata = new FormData()\r\n            for (var i = 0; i < final_data.blog.length;i++ ){\r\n                let el = final_data.blog[i]\r\n                if (el.Photo){\r\n                    formdata.append(el.name , el.Photo)\r\n                }else if(el.Video){\r\n                    formdata.append(el.name , el.Video)\r\n                }\r\n            }\r\n            if (final_data.blog_title_image){\r\n                formdata.append('blog_title_image' , final_data.blog_title_image)\r\n            }\r\n            xhr.setRequestHeader(\"session\" , login_context)\r\n            xhr.setRequestHeader(\"logindata\" , login_data)\r\n            formdata.append(\"blogDetails\" , blog_details)\r\n            xhr.send(formdata)\r\n        }\r\n    },[blog,login_context])\r\n    \r\n    function rmcomp(i){\r\n        let b = blog\r\n        b.splice(i, 1)\r\n        console.log(\"b-\",b)\r\n        set_blog([...b])\r\n        props.blog([...b])\r\n    }\r\n\r\n    useEffect(()=>{\r\n        ref.current['editing'].scrollTo(0,ref.current['editing'].scrollHeight )\r\n    },[blog])\r\n\r\n    return (\r\n        <div className=\"editing_pane\">\r\n            <div className=\"editing\" ref ={el=>ref.current['editing']=el}>\r\n                <button className = \"upload\" onClick ={submit_data}  >Upload</button>\r\n                <button className = \"addComponents\" onClick = {switch_comp} ></button>\r\n\r\n                {blog.map((value , index, arr)=>{return (<Blog_part data = {value} index={index} key= {index} arr= {arr} rm = {rmcomp} />)})}\r\n\r\n            </div>\r\n            <div className=\"components\" ref = {el=>ref.current['components']=el}>\r\n                <h6 align = \"center\" className=\"heading\">Components</h6>\r\n                <input onClickCapture={e=>change_input_state(e)} name=\"comp\" hidden checked = {input_state === \"Heading\" } type=\"radio\"  value=\"Heading\"     id=\"Heading\"    defaultChecked/>\r\n                <label className=\"complist\" htmlFor=\"Heading\">Heading</label>\r\n                <input onClickCapture={e=>change_input_state(e)} name=\"comp\" hidden checked = {input_state === \"Paragraph\" } type=\"radio\"  value=\"Paragraph\"     id=\"Paragraph\"    />\r\n                <label className=\"complist\" htmlFor=\"Paragraph\">Paragraph</label>\r\n                <input onClickCapture={e=>change_input_state(e)} name=\"comp\" hidden checked = {input_state === \"List\" } type=\"radio\"  value=\"List\"     id=\"List\"    />\r\n                <label className=\"complist\" htmlFor=\"List\">List</label>\r\n                <input onClickCapture={e=>change_input_state(e)} name=\"comp\" hidden checked = {input_state === \"Photo\" } type=\"radio\"  value=\"Photo\"     id=\"Photo\"    />\r\n                <label className=\"complist\" htmlFor=\"Photo\">Photo</label>\r\n                <input onClickCapture={e=>change_input_state(e)} name=\"comp\" hidden checked = {input_state === \"Video\" } type=\"radio\"  value=\"Video\"     id=\"Video\"    />\r\n                <label className=\"complist\" htmlFor=\"Video\">Video</label>\r\n                <input onClickCapture={e=>change_input_state(e)} name=\"comp\" hidden checked = {input_state === \"Youtube Video\"} type=\"radio\"  value=\"Youtube Video\"     id=\"Youtube Video\"    />\r\n                <label className=\"complist\" htmlFor=\"Youtube Video\"><img src={youtubeLogo} width = {30} height={30} style={{verticalAlign:\"middle\"}} /> Video Link</label>\r\n\r\n\r\n\r\n            </div>\r\n\r\n            <form action=\"javascript:void(0);\" id=\"text_input\" ref = {el=>ref.current[\"text_input\"]=el} cols=\"30\" rows=\"10\"  onSubmit= {e=>data_submit(e)} >\r\n                <span ref = {el => ref.current['comp_tag']=el} contentEditable = \"false\" className=\"comp_tag\">{input_state}</span>\r\n                <div ref = {el => ref.current['maintext']= el}  className=\"maintext\"contentEditable = {edit_state}></div>\r\n                <input type=\"submit\" className=\"insert_comp\" ref = {el => ref.current['insert_comp']=el} value=\"\" />\r\n            </form >\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Blog_part = props=>{\r\n    let heading = String(Object.keys(props.data)[0])\r\n    let data\r\n    if (heading === \"Heading\"){\r\n        data =(<p className = \"h5\">{props.data[heading]}</p>) \r\n    }else if (heading === \"Paragraph\"){\r\n        data = (<p>{`${props.data[heading]}`}</p>)\r\n    }\r\n    else if (heading === \"List\"){\r\n        data = (<ul>\r\n            {props.data[heading].map(item=>(<li>{item}</li>))}\r\n            </ul>\r\n            )\r\n    }else if(heading ===\"Photo\"){\r\n        let url = URL.createObjectURL(props.data[heading])\r\n        data =(<img src = {url} height={200} width={400}  style={{boxShadow:\"rgb(0 0 0 / 20%) 0px 0px 5px 3px\", borderRadius : \"5px\", maxWidth:\"95%\",justifySelf:\"center\"}  } />)\r\n    }else if(heading ===\"Video\"){\r\n        let url = URL.createObjectURL(props.data[heading])\r\n        data =(<video src = {url}  controls style={{boxShadow:\"rgb(0 0 0 / 20%) 0px 0px 5px 3px\", borderRadius : \"5px\" , maxWidth:\"95%\" ,justifySelf:\"center\" ,zIndex:\"-1\" }} />)\r\n    }else if(heading === \"Youtube Video\"){\r\n        data = (<iframe  src={`https://www.youtube.com/embed/${props.data[heading]}`}\r\n        title=\"YouTube video player\" frameborder=\"0\" style={{boxShadow:\"rgb(0 0 0 / 20%) 0px 0px 5px 3px\",width :\"auto\",height:\"auto\", borderRadius : \"5px\" ,justifySelf:\"center\"}}\r\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" \r\n        allowfullscreen></iframe>)\r\n    }\r\n    return (\r\n        <div className=\"container_part\">\r\n            <h5>{`${heading}`}</h5>\r\n         <img src={popComp} width = {20} height= {20} onClick={()=>props.rm(props.index)} style = {{gridArea:\"img\", alignSelf:'center' , justifySelf :'center'}}  />\r\n            <span className=\"container_data\">{data}</span>\r\n        </div>\r\n    )\r\n}","D:\\Python files\\Start Django\\blog_tube\\frontend\\blog_tube\\src\\componenets\\appBlog.js",["166","167","168","169","170","171","172","173"],"import { useContext, useEffect, useState ,useRef, useCallback, useMemo} from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Blog } from \"./appUploadBlog\";\r\nimport { BlogiansMiniProfile } from \"./appBlogians\";\r\nimport appConfig from './statics/appConfig.json'\r\nimport './statics/css/appUploadBlog.css'\r\nimport './statics/css/appBlog.css'\r\nimport view_logo from './statics/images/preview.svg'\r\nimport like_logo from './statics/images/like.svg'\r\nimport dislike_logo from './statics/images/dislike.svg'\r\nimport { Login_context } from \"../App\";\r\nimport UserImage from \"./userImage\";\r\n\r\nconst AppBlog  = props=>{\r\n    const url = new URLSearchParams(window.location.search)\r\n    const blog_id = url.get('id')    \r\n    const history = useHistory()\r\n    if (blog_id === null){\r\n        history.push('/blog_tube_react/Error')\r\n    }\r\n\r\n    const [blog_data_list , set_blog_data_list] = useState([])\r\n    const [blog_details , set_blog_details] = useState({likes:\"\" , dislikes:\"\" ,\r\n     views :\"\" , title:\"\" , image_url:\"\",blogger_details:{}})\r\n\r\n     const ref = useRef({})\r\n    useEffect(()=>{\r\n    const xhr = new XMLHttpRequest()\r\n    xhr.open('GET' ,appConfig.origin+'backend_api/getBlog?blog_id='+blog_id )\r\n    xhr.onreadystatechange =()=>{\r\n        if (xhr.readyState === 4 && xhr.status === 200){\r\n            let response = JSON.parse(xhr.response)\r\n            switch (response.status){\r\n                case \"success\":\r\n                    set_blog_data_list(response.blog)\r\n                    set_blog_details({likes:response.likes ,\r\n                                      dislikes:response.dislikes ,\r\n                                    views:response.views ,\r\n                                title :response.title ,\r\n                            image_url:response.image_url,\r\n                                blogger_details : response.blogger_details})\r\n                    break;\r\n                case \"page_not_found\":\r\n                    history.push('/blog_tube_react/Error')\r\n                    break;\r\n                case \"fail\":\r\n                    history.push('/blog_tube_react/Error')\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    xhr.send()\r\n\r\n    },[])\r\n\r\n    var full = false\r\n\r\n    const getFullScreen = useCallback(()=>{\r\n        if (!full){\r\n        document.documentElement.requestFullscreen()\r\n        .then( ()=>full= true)\r\n        .catch(()=>full = false)}    \r\n        \r\n    },[ref.current.blog_page])\r\n    useEffect(()=>{\r\n        let ele  = document.getElementsByClassName(\"appbody\")[0]\r\n        ele.scrollTo(0,0)\r\n    }\r\n    \r\n    ,[blog_details])\r\n\r\n\r\n    return(<div  className = \"blog_page\" ref ={el=>ref.current.blog_page = el} onMouseDown={getFullScreen} >\r\n        <h2 align = \"center\">{blog_details.title}</h2>\r\n        <img src = {blog_details.image_url} className = \"title_image\" loading = {\"eager\"} />\r\n        <BlogiansMiniProfile user_details = {blog_details.blogger_details} onClick={()=>null}  to ={`/blog_tube_react/Profile/${blog_details.blogger_details.user_id}`} />\r\n        <Blog>\r\n            {blog_data_list.map((item,index)=>(<div key = {index} className = \"container_data\" dangerouslySetInnerHTML = {{__html:item}}></div>))}\r\n        </Blog>\r\n        <ReviewBlog blog_id = {blog_id} likes = {blog_details.likes} dislikes= {blog_details.dislikes} views= {blog_details.views} />\r\n        <Comments  blog_id = {blog_id} />\r\n    </div>)\r\n}\r\n\r\nexport default AppBlog\r\n\r\nconst ReviewBlog=props=>{\r\n    const session_id = useContext(Login_context)\r\n    const history = useHistory()\r\n    const[ reviewed  ,set_reviewed] = useState(\"not yet\")\r\n    const[reviews ,set_reviews] =useState({likes : props.likes ,dislikes : props.dislikes ,views : props.views})\r\n    const ref = useRef({})\r\n    useEffect(()=>{\r\n        set_reviews({likes : props.likes ,dislikes : props.dislikes ,views : props.views})\r\n    },[props.likes , props.dislikes , props.views])\r\n\r\n    const review=event=>{\r\n        let opt = event.target.value\r\n        if (session_id === sessionStorage.session ){\r\n            let xhr = new XMLHttpRequest()\r\n            let uid = JSON.parse(localStorage.login_data).user_id\r\n            xhr.open('POST' , appConfig.origin+`backend_api/Blogreview`)\r\n            xhr.onreadystatechange=()=>{if(xhr.readyState===4 && xhr.status===200){\r\n                let response = JSON.parse(xhr.response)\r\n                if(response.status===\"success\"){\r\n                    set_reviews({...response.details})\r\n                }\r\n            }}\r\n            let formdata = new FormData()\r\n            formdata.append('uid' , uid)\r\n            formdata.append('bid' , props.blog_id)\r\n            formdata.append('review' , opt)\r\n            xhr.send(formdata)\r\n        }else{\r\n            history.push('/blog_tube_react/Error')\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        if (session_id===sessionStorage.session){\r\n\r\n            let xhr = new XMLHttpRequest()\r\n            let uid = JSON.parse(localStorage.login_data).user_id\r\n            xhr.open('GET' , appConfig.origin+`backend_api/checkReviewr?bid=${props.blog_id}&uid=${uid}`)\r\n            xhr.onreadystatechange=()=>{if(xhr.readyState===4 && xhr.status===200){\r\n                let response = JSON.parse(xhr.response)\r\n                if(response.status===\"success\"){\r\n                    set_reviewed( response.isreviewer)\r\n                }\r\n            }}\r\n            xhr.send()\r\n        }\r\n    },[session_id])\r\n    useEffect(()=>{\r\n        if (reviewed === \"like\"){\r\n            ref.current.like.click()\r\n        }else if (reviewed === \"dislike\"){\r\n            ref.current.dislike.click()\r\n        }\r\n    },[reviewed])\r\n\r\n    \r\n    return(\r\n        <div className=\"review\">\r\n            <input type=\"radio\" name=\"review\" ref = {el=>ref.current.like = el}  id=\"like\" value= {\"like\"} onInput={e=>review(e)}  hidden/>\r\n            <label htmlFor=\"like\" id=\"like_label\" style={{backgroundImage:`url(${like_logo})`}} >{reviews.likes>0?reviews.likes:\"No Likes\"}</label>\r\n            <label id =\"view_label\" style={{backgroundImage:`url(${view_logo})`}}>{reviews.views>0?reviews.views:\"No Views\"}</label>\r\n            <input type=\"radio\" name=\"review\" ref = {el=>ref.current.dislike = el}  id=\"dislike\" value={\"dislike\"} onInput={e=>review(e)} disabled={!session_id} hidden/>\r\n            <label htmlFor=\"dislike\" id=\"dislike_label\" style={{backgroundImage:`url(${dislike_logo})`}}  >{reviews.dislikes>0?reviews.dislikes:\"No Dislikes\"}</label>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Comments =props=>{\r\n    let session_id = useContext(Login_context)\r\n    const ref = useRef({})\r\n    const [login_status , set_login_status] = useState(false)\r\n    const history = useHistory()\r\n    useEffect(()=>{\r\n        if(session_id === sessionStorage.session){\r\n            set_login_status(true)\r\n        }else{\r\n            set_login_status(false)\r\n        }\r\n    },[session_id])\r\n\r\n    const [comment_list , set_comment_list] = useState([])\r\n\r\n    useEffect(()=>{\r\n        let xhr = new XMLHttpRequest()\r\n        xhr.open('POST' , appConfig.origin+`backend_api/getComments`)\r\n        xhr.onreadystatechange=()=>{\r\n            if(xhr.status===200 && xhr.readyState === 4 ){\r\n                let response = JSON.parse(xhr.response)\r\n                switch (response.status) {\r\n                    case \"success\":\r\n                        set_comment_list(response.comment_list)\r\n                        console.log(response)\r\n                        break;\r\n                    case \"loginRequired\":\r\n                        console.log(`backend_api/getComments`)\r\n                        history.push(\"/blog_tube_react/Login\")\r\n                        break;\r\n                \r\n                    default:\r\n                        console.log(response.status)\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        let formdata = new FormData()\r\n        formdata.append('blog_id' , props.blog_id)\r\n        xhr.send(formdata)\r\n        \r\n    },[])\r\n\r\n    const send_comment = useCallback(()=>{\r\n        let comment = ref.current.comment_input.value\r\n        if (session_id === sessionStorage.session &&  comment !== ''){\r\n            const xhr = new XMLHttpRequest()\r\n            xhr.open(\"POST\" , appConfig.origin+`backend_api/uploadComment`)\r\n            xhr.onreadystatechange = ()=>{\r\n                if(xhr.readyState === 4 && xhr.status === 200){\r\n                let response = JSON.parse(xhr.response) \r\n                ref.current.comment_input.value =''\r\n                switch (response.status) {\r\n                    case \"success\":\r\n                        console.log(response)\r\n                        set_comment_list([response.new_comment ,...comment_list])\r\n                        break;\r\n                    case \"loginRequired\":\r\n                        console.log(response.status)\r\n                        history.push(\"/blog_tube_react/Login\")\r\n                        break;\r\n                    case \"fail\":\r\n                        console.log(response.status)\r\n                        history.push(\"/blog_tube_react/Error\") \r\n                        break;              \r\n                    default:\r\n                        console.log(response.status)\r\n                        break;                                 // list has to be updated here\r\n            }}}\r\n            const formdata = new FormData()\r\n            xhr.setRequestHeader(\"session\" ,session_id )\r\n            formdata.append(\"comment\" , comment)\r\n            formdata.append(\"user_id\"  , JSON.parse(localStorage.login_data).user_id)\r\n            formdata.append(\"blog_id\" , props.blog_id)\r\n            xhr.send(formdata)\r\n        }\r\n    \r\n    })\r\n    const cList = useMemo(()=>(comment_list.map(item=>(<Comment c_detials = {item} key ={item.cid} />))))\r\n    const nList = useMemo(()=>(<span style ={{display:\"grid\",placeItems:\"center\",\r\n    fontSize:\"30px\",width:\"100%\" ,height:\"100%\"}} id = \"no_comments\">No Comments😅</span>))\r\n    return(<div className=\"comments\">\r\n                <h5 align = \"center\">Comments</h5>\r\n                <div className=\"cover\">\r\n                <textarea name=\"comment\" maxLength={1000} id=\"comment_input\"  disabled={!login_status}\r\n                ref={el=>ref.current.comment_input = el} cols=\"3\" rows=\"5\">\r\n                </textarea>\r\n                <button ref = {el=>ref.current.send_comment = el} disabled= {!login_status}\r\n                   id=\"send_comment\" onClick = {()=>send_comment()} ></button>\r\n                </div>\r\n                <div className=\"comment_list\">\r\n                    {comment_list.length ===0?nList: cList }\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nconst Comment = props=>{\r\n    return (\r\n        <div className=\"comment\" id = {props.key}>\r\n            <UserImage user_id= {props.c_detials.uid} width={\"50px\"} height=\"50px\"\r\n             style= {{gridArea :\"user_image\" , borderWidth : \"2px\" , alignSelf : \"center\" , justifySelf: \"center\"}}\r\n             to = {`/blog_tube_react/Profile/${props.c_detials.uid}`} onClick={()=>null} />\r\n            <span id=\"user_name\">{props.c_detials.name}</span>\r\n            <p className=\"comment_text\" style={{whiteSpace:\"break-spaces\"}}>{props.c_detials.text}</p>\r\n            <div className=\"datetime\">{props.c_detials.upload_datetime}</div>\r\n        </div>\r\n    )\r\n}\r\nexport {Comment}","D:\\Python files\\Start Django\\blog_tube\\frontend\\blog_tube\\src\\componenets\\appHome.js",["174","175","176","177","178","179"],"import \"./statics/css/appHome.css\"\r\nimport UserImage from './userImage'\r\nimport PropType from 'prop-types'\r\nimport { useContext, useEffect, useState } from \"react\"\r\nimport { Link ,useHistory } from \"react-router-dom\"\r\nimport appConfig from './statics/appConfig.json'\r\nimport { Login_context } from \"../App\"\r\nimport \"./statics/css/appBlog.css\"\r\nimport view_logo from './statics/images/preview.svg'\r\nimport like_logo from './statics/images/like.svg'\r\nimport dislike_logo from './statics/images/dislike.svg'\r\nimport steps_bg from './statics/images/steps_bg.svg'\r\nimport { FollowButton } from \"./appUserProfile\"\r\n\r\nconst AppHome = props=>{\r\n\r\n    const mq = window.matchMedia('(max-width:768px)')\r\n    const [mini , set_mini] = useState(false)\r\n\r\n    function mq_change(){\r\n        if (mq.matches){\r\n            set_mini(true)\r\n        }else{\r\n            set_mini(false)\r\n        }\r\n    }\r\n    useEffect( ()=>{\r\n                mq_change()\r\n            window.addEventListener(\"resize\",mq_change,true)\r\n            return ()=>window.removeEventListener(\"resize\",mq_change,true)\r\n            },[])\r\n            \r\n    \r\n    return(\r\n        <div className=\"homepage\">\r\n           {props.blogs_list.map(item=>( <BlogComponent mini={mini} user_details={item.user_details} \r\n            views= {item.blog_details.views} likes={item.blog_details.likes} dislikes={item.blog_details.dislikes}\r\n            date = {item.blog_details.datetime}\r\n            title = {item.blog_details.title} \r\n            discription = {item.blog_details.discription}\r\n            image_url = {item.blog_details.blog_title_image} blog_id = {item.blog_details.blog_id}\r\n            key = {item.blog_details.blog_id} />))}\r\n        </div>\r\n    )\r\n}\r\nexport default AppHome\r\n\r\nconst BlogComponent = props=>{\r\n    const [style , set_style ] = useState({blog_details:{gridTemplateColumns: \"minmax(40%, 350px) minmax(calc(60% - 15px), auto)\",\r\n    gridTemplateRows: \"60px 170px 50px\",  gridGap: \"10px\",\r\n    gridTemplateAreas: `\"image blogger\" \"image head_dis\" \"image public\"`,\r\n    maxWidth: \"1000px\",width: \"90%\",\r\n        backgroundImage : `url(${steps_bg})`},\r\n        title_image:{\r\n            width: \"90%\",margin:\"0 10px\",border: \"2px solid #cca200\"\r\n        }\r\n        })\r\n\r\n    useEffect(()=>{\r\n        if (props.mini){\r\n            set_style({blog_details:{gridTemplateColumns: \"100%\",\r\n    gridTemplateAreas: `\"image\" \"blogger\" \"head_dis\" \"public\"`,\r\n    width:\"95%\" , maxWidth:\"400px\", gridGap: \"0\",\r\n            gridTemplateRows: \"minmax(200px,auto) 60px 170px 50px\",\r\n            backgroundImage : `url(${steps_bg})`},\r\n        title_image:{\r\n            width:\"100%\",margin:\"0\",border:\"none\"\r\n        }\r\n        })\r\n        }else{\r\n            set_style({blog_details:{gridTemplateColumns: \"minmax(40%, 350px) minmax(calc(60% - 15px), auto)\",\r\n    gridTemplateAreas: `\"image blogger\" \"image head_dis\" \"image public\"`,\r\n    gridTemplateRows: \"60px 170px 50px\", gridGap: \"10px\",\r\n            width: \"90%\",maxWidth: \"1000px\",\r\n            backgroundImage : `url(${steps_bg})`},\r\n            title_image:{\r\n                width: \"90%\",margin:\"0 10px\",border: \"2px solid #cca200\"\r\n            }\r\n            })\r\n        }\r\n    },[props.mini])\r\n        \r\n    return (<Link to = {`/blog_tube_react/Blog/${props.title}?id=${props.blog_id}`} style ={{display:\"flex\",width:\"100%\" ,placeItems:\"center\"}} >\r\n        <div className=\"blog_details\" style = {style.blog_details} >\r\n            <img className=\"blog_image\" style={style.title_image} src = {props.image_url} loading= \"lazy\" />\r\n            \r\n                <div className=\"blogger\">\r\n                    <UserImage user_id = {props.user_details.user_id} width=\"35px\" height=\"35px\" style ={{\r\n                        borderWidth:\"2px\"\r\n                    }} to ={`/blog_tube_react/Profile/${props.user_details.user_id}`}  onClick ={()=>null} />\r\n                    <span id = \"username\">{props.user_details.username}</span>\r\n                    <FollowButton user_id = {props.user_details.user_id}\r\n                    style = {{marginLeft:'auto' , marginRight:\"10px\"  , height:\"30px\" , alignSelf:'center'}}                    \r\n                    />\r\n                </div>\r\n                <span className = \"head_dis\">\r\n                    <h4>{props.title}</h4>\r\n                    <p>{props.discription!==\"\"?props.discription :\"No Discription\"}</p>\r\n                </span>\r\n                <span className=\"public_details\">\r\n                    <span id = \"like_label\" style = {{backgroundImage : `url(${like_logo})`}} >{props.likes?props.likes:\"No likes\"}</span>\r\n                    <span id = \"view_label\" style = {{backgroundImage : `url(${view_logo})`}} >{props.views?props.views:\"No views\"}</span>\r\n                    <span id = \"dislike_label\" style = {{backgroundImage : `url(${dislike_logo})`}} >{props.dislikes?props.dislikes:\"No dislikes\"}</span>\r\n                    <span className =\"datetime\">{props.date}</span>\r\n                </span>\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\nBlogComponent.propTypes = {\r\n    user_details : PropType.object.isRequired,\r\n    views : PropType.number.isRequired,\r\n    likes : PropType.number.isRequired,\r\n    dislikes : PropType.number.isRequired,\r\n    mini : PropType.bool\r\n}\r\nexport {BlogComponent}",{"ruleId":"180","severity":1,"message":"181","line":24,"column":7,"nodeType":"182","messageId":"183","endLine":24,"endColumn":17},{"ruleId":"180","severity":1,"message":"184","line":32,"column":7,"nodeType":"182","messageId":"183","endLine":32,"endColumn":12},{"ruleId":"185","severity":1,"message":"186","line":44,"column":20,"nodeType":"182","endLine":44,"endColumn":31},{"ruleId":"185","severity":1,"message":"187","line":103,"column":6,"nodeType":"188","endLine":103,"endColumn":27,"suggestions":"189"},{"ruleId":"190","severity":1,"message":"191","line":110,"column":3,"nodeType":"192","messageId":"193","endLine":110,"endColumn":57},{"ruleId":"194","severity":1,"message":"195","line":43,"column":13,"nodeType":"192","messageId":"196","endLine":43,"endColumn":68,"fix":"197"},{"ruleId":"194","severity":1,"message":"195","line":46,"column":13,"nodeType":"192","messageId":"196","endLine":46,"endColumn":87,"fix":"198"},{"ruleId":"194","severity":1,"message":"195","line":49,"column":17,"nodeType":"192","messageId":"196","endLine":49,"endColumn":89,"fix":"199"},{"ruleId":"180","severity":1,"message":"200","line":7,"column":8,"nodeType":"182","messageId":"183","endLine":7,"endColumn":17},{"ruleId":"180","severity":1,"message":"201","line":15,"column":5,"nodeType":"182","messageId":"183","endLine":15,"endColumn":22},{"ruleId":"202","severity":1,"message":"203","line":88,"column":26,"nodeType":"204","messageId":"205","endLine":88,"endColumn":28},{"ruleId":"202","severity":1,"message":"203","line":88,"column":81,"nodeType":"204","messageId":"205","endLine":88,"endColumn":83},{"ruleId":"202","severity":1,"message":"203","line":103,"column":27,"nodeType":"204","messageId":"205","endLine":103,"endColumn":29},{"ruleId":"202","severity":1,"message":"203","line":103,"column":82,"nodeType":"204","messageId":"205","endLine":103,"endColumn":84},{"ruleId":"202","severity":1,"message":"203","line":114,"column":35,"nodeType":"204","messageId":"205","endLine":114,"endColumn":37},{"ruleId":"202","severity":1,"message":"203","line":114,"column":100,"nodeType":"204","messageId":"205","endLine":114,"endColumn":102},{"ruleId":"185","severity":1,"message":"186","line":127,"column":25,"nodeType":"182","endLine":127,"endColumn":36},{"ruleId":"206","severity":1,"message":"207","line":161,"column":34,"nodeType":"192","endLine":161,"endColumn":71},{"ruleId":"206","severity":1,"message":"207","line":165,"column":27,"nodeType":"192","endLine":169,"endColumn":22},{"ruleId":"208","severity":1,"message":"209","line":170,"column":176,"nodeType":"210","messageId":"211","endLine":170,"endColumn":213},{"ruleId":"202","severity":1,"message":"212","line":25,"column":36,"nodeType":"204","messageId":"205","endLine":25,"endColumn":38},{"ruleId":"213","severity":1,"message":"214","line":75,"column":14,"nodeType":"182","messageId":"215","endLine":75,"endColumn":25},{"ruleId":"202","severity":1,"message":"203","line":168,"column":35,"nodeType":"204","messageId":"205","endLine":168,"endColumn":37},{"ruleId":"216","severity":1,"message":"217","line":208,"column":22,"nodeType":"218","messageId":"219","endLine":208,"endColumn":43},{"ruleId":"216","severity":1,"message":"217","line":225,"column":24,"nodeType":"218","messageId":"219","endLine":225,"endColumn":45},{"ruleId":"180","severity":1,"message":"220","line":17,"column":9,"nodeType":"182","messageId":"183","endLine":17,"endColumn":22},{"ruleId":"180","severity":1,"message":"221","line":28,"column":37,"nodeType":"182","messageId":"183","endLine":28,"endColumn":40},{"ruleId":"185","severity":1,"message":"186","line":50,"column":16,"nodeType":"182","endLine":50,"endColumn":27},{"ruleId":"185","severity":1,"message":"222","line":91,"column":21,"nodeType":"182","endLine":91,"endColumn":28},{"ruleId":"216","severity":1,"message":"217","line":92,"column":19,"nodeType":"218","messageId":"219","endLine":92,"endColumn":40},{"ruleId":"223","severity":1,"message":"224","line":99,"column":21,"nodeType":"192","endLine":99,"endColumn":75},{"ruleId":"185","severity":1,"message":"222","line":104,"column":20,"nodeType":"182","endLine":104,"endColumn":27},{"ruleId":"185","severity":1,"message":"186","line":111,"column":28,"nodeType":"182","endLine":111,"endColumn":39},{"ruleId":"185","severity":1,"message":"222","line":139,"column":22,"nodeType":"182","endLine":139,"endColumn":29},{"ruleId":"216","severity":1,"message":"217","line":142,"column":26,"nodeType":"218","messageId":"219","endLine":142,"endColumn":47},{"ruleId":"185","severity":1,"message":"186","line":150,"column":27,"nodeType":"182","endLine":150,"endColumn":38},{"ruleId":"225","severity":1,"message":"226","line":152,"column":26,"nodeType":"227","messageId":"228","endLine":152,"endColumn":34,"fix":"229"},{"ruleId":"185","severity":1,"message":"186","line":178,"column":21,"nodeType":"182","endLine":178,"endColumn":32},{"ruleId":"185","severity":1,"message":"222","line":184,"column":20,"nodeType":"182","endLine":184,"endColumn":27},{"ruleId":"216","severity":1,"message":"217","line":187,"column":26,"nodeType":"218","messageId":"219","endLine":187,"endColumn":47},{"ruleId":"185","severity":1,"message":"186","line":198,"column":22,"nodeType":"182","endLine":198,"endColumn":33},{"ruleId":"185","severity":1,"message":"222","line":227,"column":28,"nodeType":"182","endLine":227,"endColumn":35},{"ruleId":"216","severity":1,"message":"217","line":229,"column":19,"nodeType":"218","messageId":"219","endLine":229,"endColumn":40},{"ruleId":"206","severity":1,"message":"207","line":16,"column":17,"nodeType":"192","endLine":16,"endColumn":57},{"ruleId":"180","severity":1,"message":"230","line":3,"column":39,"nodeType":"182","messageId":"183","endLine":3,"endColumn":49},{"ruleId":"180","severity":1,"message":"231","line":6,"column":9,"nodeType":"182","messageId":"183","endLine":6,"endColumn":22},{"ruleId":"180","severity":1,"message":"232","line":7,"column":10,"nodeType":"182","messageId":"183","endLine":7,"endColumn":21},{"ruleId":"180","severity":1,"message":"233","line":8,"column":25,"nodeType":"182","messageId":"183","endLine":8,"endColumn":31},{"ruleId":"180","severity":1,"message":"234","line":11,"column":10,"nodeType":"182","messageId":"183","endLine":11,"endColumn":19},{"ruleId":"202","severity":1,"message":"203","line":47,"column":40,"nodeType":"204","messageId":"205","endLine":47,"endColumn":42},{"ruleId":"202","severity":1,"message":"203","line":58,"column":56,"nodeType":"204","messageId":"205","endLine":58,"endColumn":58},{"ruleId":"185","severity":1,"message":"186","line":124,"column":30,"nodeType":"182","endLine":124,"endColumn":41},{"ruleId":"185","severity":1,"message":"235","line":62,"column":8,"nodeType":"188","endLine":62,"endColumn":20,"suggestions":"236"},{"ruleId":"185","severity":1,"message":"237","line":72,"column":9,"nodeType":"188","endLine":72,"endColumn":55,"suggestions":"238"},{"ruleId":"185","severity":1,"message":"186","line":133,"column":18,"nodeType":"182","endLine":133,"endColumn":29},{"ruleId":"180","severity":1,"message":"239","line":3,"column":47,"nodeType":"182","messageId":"183","endLine":3,"endColumn":54},{"ruleId":"180","severity":1,"message":"240","line":4,"column":22,"nodeType":"182","messageId":"183","endLine":4,"endColumn":35},{"ruleId":"185","severity":1,"message":"187","line":53,"column":8,"nodeType":"188","endLine":53,"endColumn":17,"suggestions":"241"},{"ruleId":"206","severity":1,"message":"207","line":181,"column":13,"nodeType":"192","endLine":181,"endColumn":125},{"ruleId":"185","severity":1,"message":"242","line":218,"column":7,"nodeType":"188","endLine":218,"endColumn":16,"suggestions":"243"},{"ruleId":"185","severity":1,"message":"244","line":229,"column":7,"nodeType":"188","endLine":229,"endColumn":26,"suggestions":"245"},{"ruleId":"185","severity":1,"message":"186","line":231,"column":29,"nodeType":"182","endLine":231,"endColumn":40},{"ruleId":"180","severity":1,"message":"246","line":31,"column":17,"nodeType":"182","messageId":"183","endLine":31,"endColumn":19},{"ruleId":"185","severity":1,"message":"247","line":58,"column":16,"nodeType":"218","endLine":58,"endColumn":21},{"ruleId":"202","severity":1,"message":"203","line":27,"column":32,"nodeType":"204","messageId":"205","endLine":27,"endColumn":34},{"ruleId":"185","severity":1,"message":"186","line":49,"column":31,"nodeType":"182","endLine":49,"endColumn":42},{"ruleId":"216","severity":1,"message":"217","line":58,"column":44,"nodeType":"218","messageId":"219","endLine":58,"endColumn":65},{"ruleId":"185","severity":1,"message":"248","line":74,"column":7,"nodeType":"188","endLine":74,"endColumn":58,"suggestions":"249"},{"ruleId":"185","severity":1,"message":"187","line":89,"column":7,"nodeType":"188","endLine":89,"endColumn":21,"suggestions":"250"},{"ruleId":"185","severity":1,"message":"186","line":92,"column":24,"nodeType":"182","endLine":92,"endColumn":35},{"ruleId":"185","severity":1,"message":"222","line":94,"column":25,"nodeType":"182","endLine":94,"endColumn":32},{"ruleId":"190","severity":1,"message":"251","line":96,"column":13,"nodeType":"192","messageId":"193","endLine":96,"endColumn":89},{"ruleId":"190","severity":1,"message":"252","line":100,"column":21,"nodeType":"192","messageId":"193","endLine":100,"endColumn":112},{"ruleId":"190","severity":1,"message":"253","line":103,"column":21,"nodeType":"192","messageId":"193","endLine":103,"endColumn":103},{"ruleId":"185","severity":1,"message":"254","line":116,"column":7,"nodeType":"188","endLine":116,"endColumn":9,"suggestions":"255"},{"ruleId":"185","severity":1,"message":"256","line":164,"column":7,"nodeType":"188","endLine":164,"endColumn":27,"suggestions":"257"},{"ruleId":"180","severity":1,"message":"258","line":188,"column":19,"nodeType":"182","messageId":"183","endLine":188,"endColumn":22},{"ruleId":"185","severity":1,"message":"259","line":196,"column":7,"nodeType":"188","endLine":196,"endColumn":9,"suggestions":"260"},{"ruleId":"206","severity":1,"message":"207","line":200,"column":64,"nodeType":"192","endLine":200,"endColumn":117},{"ruleId":"206","severity":1,"message":"207","line":202,"column":67,"nodeType":"192","endLine":202,"endColumn":121},{"ruleId":"185","severity":1,"message":"261","line":284,"column":34,"nodeType":"188","endLine":284,"endColumn":36,"suggestions":"262"},{"ruleId":"185","severity":1,"message":"263","line":378,"column":7,"nodeType":"188","endLine":378,"endColumn":27,"suggestions":"264"},{"ruleId":"190","severity":1,"message":"265","line":398,"column":58,"nodeType":"192","messageId":"193","endLine":398,"endColumn":138},{"ruleId":"206","severity":1,"message":"207","line":414,"column":69,"nodeType":"192","endLine":414,"endColumn":152},{"ruleId":"216","severity":1,"message":"217","line":420,"column":26,"nodeType":"218","messageId":"219","endLine":420,"endColumn":47},{"ruleId":"206","severity":1,"message":"207","line":445,"column":16,"nodeType":"192","endLine":445,"endColumn":177},{"ruleId":"206","severity":1,"message":"207","line":458,"column":10,"nodeType":"192","endLine":458,"endColumn":165},{"ruleId":"185","severity":1,"message":"266","line":56,"column":7,"nodeType":"188","endLine":56,"endColumn":9,"suggestions":"267"},{"ruleId":"185","severity":1,"message":"268","line":63,"column":26,"nodeType":"218","endLine":63,"endColumn":30},{"ruleId":"206","severity":1,"message":"207","line":77,"column":9,"nodeType":"192","endLine":77,"endColumn":93},{"ruleId":"185","severity":1,"message":"269","line":134,"column":7,"nodeType":"188","endLine":134,"endColumn":19,"suggestions":"270"},{"ruleId":"185","severity":1,"message":"271","line":196,"column":7,"nodeType":"188","endLine":196,"endColumn":9,"suggestions":"272"},{"ruleId":"185","severity":1,"message":"186","line":198,"column":26,"nodeType":"182","endLine":198,"endColumn":37},{"ruleId":"185","severity":1,"message":"222","line":233,"column":19,"nodeType":"182","endLine":233,"endColumn":26},{"ruleId":"185","severity":1,"message":"222","line":234,"column":19,"nodeType":"182","endLine":234,"endColumn":26},{"ruleId":"180","severity":1,"message":"230","line":4,"column":10,"nodeType":"182","messageId":"183","endLine":4,"endColumn":20},{"ruleId":"180","severity":1,"message":"273","line":5,"column":16,"nodeType":"182","messageId":"183","endLine":5,"endColumn":26},{"ruleId":"180","severity":1,"message":"200","line":6,"column":8,"nodeType":"182","messageId":"183","endLine":6,"endColumn":17},{"ruleId":"180","severity":1,"message":"231","line":7,"column":10,"nodeType":"182","messageId":"183","endLine":7,"endColumn":23},{"ruleId":"185","severity":1,"message":"274","line":31,"column":15,"nodeType":"188","endLine":31,"endColumn":17,"suggestions":"275"},{"ruleId":"206","severity":1,"message":"207","line":85,"column":13,"nodeType":"192","endLine":85,"endColumn":109},"no-unused-vars","'login_data' is assigned a value but never used.","Identifier","unusedVar","'blogs' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["276"],"react/jsx-pascal-case","Imported JSX component Login_context must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","noTargetBlank",{"range":"277","text":"278"},{"range":"279","text":"278"},{"range":"280","text":"278"},"'appConfig' is defined but never used.","'change_menu_state' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","Expected '===' and instead saw '=='.","no-use-before-define","'block_state' was used before it was defined.","usedBeforeDefined","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","'login_context' is assigned a value but never used.","'get' is defined but never used.","React Hook useMemo does nothing when called with only one argument. Did you forget to pass an array of dependencies?","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-whitespace-before-property","Unexpected whitespace before property 0.","MemberExpression","unexpectedWhitespace",{"range":"281","text":"282"},"'useContext' is defined but never used.","'Login_context' is defined but never used.","'useLocation' is defined but never used.","'Switch' is defined but never used.","'parseHTML' is defined but never used.","React Hook useEffect has a missing dependency: 'change_display'. Either include it or remove the dependency array.",["283"],"React Hook useEffect has an unnecessary dependency: 'sessionStorage.session'. Either exclude it or remove the dependency array. Outer scope values like 'sessionStorage.session' aren't valid dependencies because mutating them doesn't re-render the component.",["284"],"'useMemo' is defined but never used.","'useRouteMatch' is defined but never used.",["285"],"React Hook useCallback has a missing dependency: 'props.user_id'. Either include it or remove the dependency array.",["286"],"React Hook useEffect has a missing dependency: 'check_follower'. Either include it or remove the dependency array.",["287"],"'to' is assigned a value but never used.","Assignments to the 'flag' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","React Hook useMemo has an unnecessary dependency: 'upload_blog_state'. Either exclude it or remove the dependency array.",["288"],["289"],"Imported JSX component Editor_tabs must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Editing_pane must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Preview_tab must be in PascalCase or SCREAMING_SNAKE_CASE","React Hook useEffect has missing dependencies: 'history' and 'login_context'. Either include them or remove the dependency array.",["290"],"React Hook useEffect has missing dependencies: 'data_list', 'history', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["291"],"'url' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'path' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["292"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["293"],"React Hook useCallback has missing dependencies: 'history' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["294"],"Imported JSX component Blog_part must be in PascalCase or SCREAMING_SNAKE_CASE","React Hook useEffect has missing dependencies: 'blog_id' and 'history'. Either include them or remove the dependency array.",["295"],"Assignments to the 'full' variable from inside React Hook useCallback will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useCallback.","React Hook useEffect has a missing dependency: 'props.blog_id'. Either include it or remove the dependency array.",["296"],"React Hook useEffect has missing dependencies: 'history' and 'props.blog_id'. Either include them or remove the dependency array.",["297"],"'useHistory' is defined but never used.","React Hook useEffect has a missing dependency: 'mq_change'. Either include it or remove the dependency array.",["298"],{"desc":"299","fix":"300"},[1545,1545]," rel=\"noreferrer\"",[1762,1762],[1980,1980],[6037,6038],"",{"desc":"301","fix":"302"},{"desc":"303","fix":"304"},{"desc":"305","fix":"306"},{"desc":"307","fix":"308"},{"desc":"309","fix":"310"},{"desc":"311","fix":"312"},{"desc":"313","fix":"314"},{"desc":"315","fix":"316"},{"desc":"317","fix":"318"},{"desc":"319","fix":"320"},{"desc":"321","fix":"322"},{"desc":"323","fix":"324"},{"desc":"325","fix":"326"},{"desc":"327","fix":"328"},{"desc":"329","fix":"330"},{"desc":"331","fix":"332"},"Update the dependencies array to be: [history, login_context_state]",{"range":"333","text":"334"},"Update the dependencies array to be: [change_display, props.open]",{"range":"335","text":"336"},"Update the dependencies array to be: [login, login_context]",{"range":"337","text":"338"},"Update the dependencies array to be: [history, user_id]",{"range":"339","text":"340"},"Update the dependencies array to be: [context, props.user_id]",{"range":"341","text":"342"},"Update the dependencies array to be: [ref, props.user_id, check_follower]",{"range":"343","text":"344"},"Update the dependencies array to be: [change_image, forward_to_editor]",{"range":"345","text":"346"},"Update the dependencies array to be: [editor_state, history]",{"range":"347","text":"348"},"Update the dependencies array to be: [history, login_context]",{"range":"349","text":"350"},"Update the dependencies array to be: [props.list, context, props, data_list, history]",{"range":"351","text":"352"},"Update the dependencies array to be: [path, props]",{"range":"353","text":"354"},"Update the dependencies array to be: [props]",{"range":"355","text":"356"},"Update the dependencies array to be: [blog, history, login_context, props]",{"range":"357","text":"358"},"Update the dependencies array to be: [blog_id, history]",{"range":"359","text":"360"},"Update the dependencies array to be: [props.blog_id, session_id]",{"range":"361","text":"362"},"Update the dependencies array to be: [history, props.blog_id]",{"range":"363","text":"364"},"Update the dependencies array to be: [mq_change]",{"range":"365","text":"366"},[3050,3071],"[history, login_context_state]",[2025,2037],"[change_display, props.open]",[2274,2320],"[login, login_context]",[2128,2137],"[history, user_id]",[10804,10813],"[context, props.user_id]",[11059,11078],"[ref, props.user_id, check_follower]",[3378,3429],"[change_image, forward_to_editor]",[3913,3927],"[editor_state, history]",[4909,4911],"[history, login_context]",[6820,6840],"[props.list, context, props, data_list, history]",[7667,7669],"[path, props]",[11239,11241],"[props]",[15474,15494],"[blog, history, login_context, props]",[2263,2265],"[blog_id, history]",[5498,5510],"[props.blog_id, session_id]",[8054,8056],"[history, props.blog_id]",[1090,1092],"[mq_change]"]