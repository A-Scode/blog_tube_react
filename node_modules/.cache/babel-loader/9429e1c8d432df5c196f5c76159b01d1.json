{"ast":null,"code":"\"use strict\";\n\nvar _index = require(\"./index\");\n\nvar _index2 = _interopRequireDefault(_index);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n(0, _index2.default)(\"JSXAttribute\", {\n  visitor: [\"name\", \"value\"],\n  aliases: [\"JSX\", \"Immutable\"],\n  fields: {\n    name: {\n      validate: (0, _index.assertNodeType)(\"JSXIdentifier\", \"JSXNamespacedName\")\n    },\n    value: {\n      optional: true,\n      validate: (0, _index.assertNodeType)(\"JSXElement\", \"StringLiteral\", \"JSXExpressionContainer\")\n    }\n  }\n});\n(0, _index2.default)(\"JSXClosingElement\", {\n  visitor: [\"name\"],\n  aliases: [\"JSX\", \"Immutable\"],\n  fields: {\n    name: {\n      validate: (0, _index.assertNodeType)(\"JSXIdentifier\", \"JSXMemberExpression\")\n    }\n  }\n});\n(0, _index2.default)(\"JSXElement\", {\n  builder: [\"openingElement\", \"closingElement\", \"children\", \"selfClosing\"],\n  visitor: [\"openingElement\", \"children\", \"closingElement\"],\n  aliases: [\"JSX\", \"Immutable\", \"Expression\"],\n  fields: {\n    openingElement: {\n      validate: (0, _index.assertNodeType)(\"JSXOpeningElement\")\n    },\n    closingElement: {\n      optional: true,\n      validate: (0, _index.assertNodeType)(\"JSXClosingElement\")\n    },\n    children: {\n      validate: (0, _index.chain)((0, _index.assertValueType)(\"array\"), (0, _index.assertEach)((0, _index.assertNodeType)(\"JSXText\", \"JSXExpressionContainer\", \"JSXSpreadChild\", \"JSXElement\")))\n    }\n  }\n});\n(0, _index2.default)(\"JSXEmptyExpression\", {\n  aliases: [\"JSX\", \"Expression\"]\n});\n(0, _index2.default)(\"JSXExpressionContainer\", {\n  visitor: [\"expression\"],\n  aliases: [\"JSX\", \"Immutable\"],\n  fields: {\n    expression: {\n      validate: (0, _index.assertNodeType)(\"Expression\")\n    }\n  }\n});\n(0, _index2.default)(\"JSXSpreadChild\", {\n  visitor: [\"expression\"],\n  aliases: [\"JSX\", \"Immutable\"],\n  fields: {\n    expression: {\n      validate: (0, _index.assertNodeType)(\"Expression\")\n    }\n  }\n});\n(0, _index2.default)(\"JSXIdentifier\", {\n  builder: [\"name\"],\n  aliases: [\"JSX\", \"Expression\"],\n  fields: {\n    name: {\n      validate: (0, _index.assertValueType)(\"string\")\n    }\n  }\n});\n(0, _index2.default)(\"JSXMemberExpression\", {\n  visitor: [\"object\", \"property\"],\n  aliases: [\"JSX\", \"Expression\"],\n  fields: {\n    object: {\n      validate: (0, _index.assertNodeType)(\"JSXMemberExpression\", \"JSXIdentifier\")\n    },\n    property: {\n      validate: (0, _index.assertNodeType)(\"JSXIdentifier\")\n    }\n  }\n});\n(0, _index2.default)(\"JSXNamespacedName\", {\n  visitor: [\"namespace\", \"name\"],\n  aliases: [\"JSX\"],\n  fields: {\n    namespace: {\n      validate: (0, _index.assertNodeType)(\"JSXIdentifier\")\n    },\n    name: {\n      validate: (0, _index.assertNodeType)(\"JSXIdentifier\")\n    }\n  }\n});\n(0, _index2.default)(\"JSXOpeningElement\", {\n  builder: [\"name\", \"attributes\", \"selfClosing\"],\n  visitor: [\"name\", \"attributes\"],\n  aliases: [\"JSX\", \"Immutable\"],\n  fields: {\n    name: {\n      validate: (0, _index.assertNodeType)(\"JSXIdentifier\", \"JSXMemberExpression\")\n    },\n    selfClosing: {\n      default: false,\n      validate: (0, _index.assertValueType)(\"boolean\")\n    },\n    attributes: {\n      validate: (0, _index.chain)((0, _index.assertValueType)(\"array\"), (0, _index.assertEach)((0, _index.assertNodeType)(\"JSXAttribute\", \"JSXSpreadAttribute\")))\n    }\n  }\n});\n(0, _index2.default)(\"JSXSpreadAttribute\", {\n  visitor: [\"argument\"],\n  aliases: [\"JSX\"],\n  fields: {\n    argument: {\n      validate: (0, _index.assertNodeType)(\"Expression\")\n    }\n  }\n});\n(0, _index2.default)(\"JSXText\", {\n  aliases: [\"JSX\", \"Immutable\"],\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: (0, _index.assertValueType)(\"string\")\n    }\n  }\n});","map":{"version":3,"sources":["D:/Python files/Start Django/blog_tube/frontend/blog_tube/node_modules/babel-types/lib/definitions/jsx.js"],"names":["_index","require","_index2","_interopRequireDefault","obj","__esModule","default","visitor","aliases","fields","name","validate","assertNodeType","value","optional","builder","openingElement","closingElement","children","chain","assertValueType","assertEach","expression","object","property","namespace","selfClosing","attributes","argument"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _index = require(\"./index\");\n\nvar _index2 = _interopRequireDefault(_index);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(0, _index2.default)(\"JSXAttribute\", {\n  visitor: [\"name\", \"value\"],\n  aliases: [\"JSX\", \"Immutable\"],\n  fields: {\n    name: {\n      validate: (0, _index.assertNodeType)(\"JSXIdentifier\", \"JSXNamespacedName\")\n    },\n    value: {\n      optional: true,\n      validate: (0, _index.assertNodeType)(\"JSXElement\", \"StringLiteral\", \"JSXExpressionContainer\")\n    }\n  }\n});\n\n(0, _index2.default)(\"JSXClosingElement\", {\n  visitor: [\"name\"],\n  aliases: [\"JSX\", \"Immutable\"],\n  fields: {\n    name: {\n      validate: (0, _index.assertNodeType)(\"JSXIdentifier\", \"JSXMemberExpression\")\n    }\n  }\n});\n\n(0, _index2.default)(\"JSXElement\", {\n  builder: [\"openingElement\", \"closingElement\", \"children\", \"selfClosing\"],\n  visitor: [\"openingElement\", \"children\", \"closingElement\"],\n  aliases: [\"JSX\", \"Immutable\", \"Expression\"],\n  fields: {\n    openingElement: {\n      validate: (0, _index.assertNodeType)(\"JSXOpeningElement\")\n    },\n    closingElement: {\n      optional: true,\n      validate: (0, _index.assertNodeType)(\"JSXClosingElement\")\n    },\n    children: {\n      validate: (0, _index.chain)((0, _index.assertValueType)(\"array\"), (0, _index.assertEach)((0, _index.assertNodeType)(\"JSXText\", \"JSXExpressionContainer\", \"JSXSpreadChild\", \"JSXElement\")))\n    }\n  }\n});\n\n(0, _index2.default)(\"JSXEmptyExpression\", {\n  aliases: [\"JSX\", \"Expression\"]\n});\n\n(0, _index2.default)(\"JSXExpressionContainer\", {\n  visitor: [\"expression\"],\n  aliases: [\"JSX\", \"Immutable\"],\n  fields: {\n    expression: {\n      validate: (0, _index.assertNodeType)(\"Expression\")\n    }\n  }\n});\n\n(0, _index2.default)(\"JSXSpreadChild\", {\n  visitor: [\"expression\"],\n  aliases: [\"JSX\", \"Immutable\"],\n  fields: {\n    expression: {\n      validate: (0, _index.assertNodeType)(\"Expression\")\n    }\n  }\n});\n\n(0, _index2.default)(\"JSXIdentifier\", {\n  builder: [\"name\"],\n  aliases: [\"JSX\", \"Expression\"],\n  fields: {\n    name: {\n      validate: (0, _index.assertValueType)(\"string\")\n    }\n  }\n});\n\n(0, _index2.default)(\"JSXMemberExpression\", {\n  visitor: [\"object\", \"property\"],\n  aliases: [\"JSX\", \"Expression\"],\n  fields: {\n    object: {\n      validate: (0, _index.assertNodeType)(\"JSXMemberExpression\", \"JSXIdentifier\")\n    },\n    property: {\n      validate: (0, _index.assertNodeType)(\"JSXIdentifier\")\n    }\n  }\n});\n\n(0, _index2.default)(\"JSXNamespacedName\", {\n  visitor: [\"namespace\", \"name\"],\n  aliases: [\"JSX\"],\n  fields: {\n    namespace: {\n      validate: (0, _index.assertNodeType)(\"JSXIdentifier\")\n    },\n    name: {\n      validate: (0, _index.assertNodeType)(\"JSXIdentifier\")\n    }\n  }\n});\n\n(0, _index2.default)(\"JSXOpeningElement\", {\n  builder: [\"name\", \"attributes\", \"selfClosing\"],\n  visitor: [\"name\", \"attributes\"],\n  aliases: [\"JSX\", \"Immutable\"],\n  fields: {\n    name: {\n      validate: (0, _index.assertNodeType)(\"JSXIdentifier\", \"JSXMemberExpression\")\n    },\n    selfClosing: {\n      default: false,\n      validate: (0, _index.assertValueType)(\"boolean\")\n    },\n    attributes: {\n      validate: (0, _index.chain)((0, _index.assertValueType)(\"array\"), (0, _index.assertEach)((0, _index.assertNodeType)(\"JSXAttribute\", \"JSXSpreadAttribute\")))\n    }\n  }\n});\n\n(0, _index2.default)(\"JSXSpreadAttribute\", {\n  visitor: [\"argument\"],\n  aliases: [\"JSX\"],\n  fields: {\n    argument: {\n      validate: (0, _index.assertNodeType)(\"Expression\")\n    }\n  }\n});\n\n(0, _index2.default)(\"JSXText\", {\n  aliases: [\"JSX\", \"Immutable\"],\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: (0, _index.assertValueType)(\"string\")\n    }\n  }\n});"]},"metadata":{},"sourceType":"script"}