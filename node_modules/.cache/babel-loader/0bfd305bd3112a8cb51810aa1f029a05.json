{"ast":null,"code":"var _jsxFileName = \"A:\\\\Python files\\\\Start Django\\\\blog_tube\\\\frontend\\\\blog_tube\\\\src\\\\componenets\\\\appBlogians.js\",\n    _s = $RefreshSig$();\n\nimport './statics/css/appBlogians.css';\nimport appConfig from './statics/appConfig.json';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar AppBlogians = props => {\n  _s();\n\n  const [user_list, set_user_list] = useState([]);\n  xhr = new XMLHttpRequest();\n  xhr.open('GET', appConfig.origin + \"backend_api/userlist\");\n\n  xhr.onreadystatechange = () => {\n    if (xhr.readyState == 4 && xhr.status == 200) {\n      let response = JSON.parse(xhr.response);\n\n      if (response.status == 'success') {\n        set_user_list(response.userslist);\n        console.log(user_list);\n      } else if (reesponse.status == 'fail') {\n        set_user_list([]);\n      }\n    }\n  };\n\n  xhr.send();\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: user_list\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AppBlogians, \"6wRjpgZ8epYWijxCna5a9eMC7kE=\");\n\n_c = AppBlogians;\nexport default AppBlogians;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppBlogians\");","map":{"version":3,"sources":["A:/Python files/Start Django/blog_tube/frontend/blog_tube/src/componenets/appBlogians.js"],"names":["appConfig","useState","AppBlogians","props","user_list","set_user_list","xhr","XMLHttpRequest","open","origin","onreadystatechange","readyState","status","response","JSON","parse","userslist","console","log","reesponse","send"],"mappings":";;;AAAA,OAAO,+BAAP;AACA,OAAOA,SAAP,MAAsB,0BAAtB;AACA,SAAQC,QAAR,QAAwB,OAAxB;;;AAEA,IAAIC,WAAW,GAAGC,KAAK,IAAE;AAAA;;AACrB,QAAM,CAACC,SAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,EAAD,CAA5C;AACAK,EAAAA,GAAG,GAAG,IAAIC,cAAJ,EAAN;AACAD,EAAAA,GAAG,CAACE,IAAJ,CAAS,KAAT,EAAiBR,SAAS,CAACS,MAAV,GAAmB,sBAApC;;AACAH,EAAAA,GAAG,CAACI,kBAAJ,GAAyB,MAAI;AACzB,QAAIJ,GAAG,CAACK,UAAJ,IAAkB,CAAlB,IAAuBL,GAAG,CAACM,MAAJ,IAAc,GAAzC,EAA6C;AACzC,UAAIC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWT,GAAG,CAACO,QAAf,CAAf;;AAEA,UAAIA,QAAQ,CAACD,MAAT,IAAmB,SAAvB,EAAiC;AAC7BP,QAAAA,aAAa,CAACQ,QAAQ,CAACG,SAAV,CAAb;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYd,SAAZ;AACH,OAHD,MAGM,IAAIe,SAAS,CAACP,MAAV,IAAoB,MAAxB,EAA+B;AACjCP,QAAAA,aAAa,CAAC,EAAD,CAAb;AACH;AACJ;AACJ,GAXD;;AAYAC,EAAAA,GAAG,CAACc,IAAJ;AAEA,sBACI;AAAA,cAAKhB;AAAL;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CArBD;;GAAIF,W;;KAAAA,W;AAuBJ,eAAgBA,WAAhB","sourcesContent":["import './statics/css/appBlogians.css'\r\nimport appConfig from './statics/appConfig.json'\r\nimport {useState } from 'react'\r\n\r\nvar AppBlogians = props=>{\r\n    const [user_list , set_user_list] = useState([])\r\n    xhr = new XMLHttpRequest()\r\n    xhr.open('GET' , appConfig.origin + \"backend_api/userlist\")\r\n    xhr.onreadystatechange = ()=>{\r\n        if (xhr.readyState == 4 && xhr.status == 200){\r\n            let response = JSON.parse(xhr.response)\r\n\r\n            if (response.status == 'success'){\r\n                set_user_list(response.userslist)\r\n                console.log(user_list)\r\n            }else if (reesponse.status == 'fail'){\r\n                set_user_list([])\r\n            }\r\n        }\r\n    }\r\n    xhr.send()\r\n\r\n    return (\r\n        <h1>{user_list}</h1>\r\n    )\r\n}\r\n\r\nexport  default AppBlogians;"]},"metadata":{},"sourceType":"module"}