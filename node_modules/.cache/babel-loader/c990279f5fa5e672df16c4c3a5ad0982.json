{"ast":null,"code":"var _jsxFileName = \"D:\\\\Python files\\\\Start Django\\\\blog_tube\\\\frontend\\\\blog_tube\\\\src\\\\componenets\\\\appBlog.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport { useContext, useEffect, useState, useRef, useCallback, useMemo } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { Blog } from \"./appUploadBlog\";\nimport { BlogiansMiniProfile } from \"./appBlogians\";\nimport appConfig from './statics/appConfig.json';\nimport './statics/css/appUploadBlog.css';\nimport './statics/css/appBlog.css';\nimport view_logo from \"./statics/images/preview.svg\";\nimport like_logo from \"./statics/images/like.svg\";\nimport dislike_logo from \"./statics/images/dislike.svg\";\nimport { Login_context } from \"../App\";\nimport UserImage from \"./userImage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AppBlog = props => {\n  _s();\n\n  const url = new URLSearchParams(window.location.search);\n  const blog_id = url.get('id');\n  const history = useHistory();\n\n  if (blog_id === null) {\n    history.push('/blog_tube_react/Error');\n  }\n\n  const [blog_data_list, set_blog_data_list] = useState([]);\n  const [blog_details, set_blog_details] = useState({\n    likes: \"\",\n    dislikes: \"\",\n    views: \"\",\n    title: \"\",\n    image_url: \"\",\n    blogger_details: {}\n  });\n  const ref = useRef({});\n  useEffect(() => {\n    const xhr = new XMLHttpRequest();\n    xhr.open('GET', appConfig.origin + 'backend_api/getBlog?blog_id=' + blog_id);\n\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState === 4 && xhr.status === 200) {\n        let response = JSON.parse(xhr.response);\n\n        switch (response.status) {\n          case \"success\":\n            set_blog_data_list(response.blog);\n            set_blog_details({\n              likes: response.likes,\n              dislikes: response.dislikes,\n              views: response.views,\n              title: response.title,\n              image_url: response.image_url,\n              blogger_details: response.blogger_details\n            });\n            break;\n\n          case \"page_not_found\":\n            history.push('/blog_tube_react/Error');\n            break;\n\n          case \"fail\":\n            history.push('/blog_tube_react/Error');\n            break;\n\n          default:\n            break;\n        }\n      }\n    };\n\n    xhr.send();\n  }, []);\n  var full = false;\n  const getFullScreen = useCallback(() => {\n    if (!full) {\n      document.documentElement.requestFullscreen().then(() => full = true).catch(() => full = false);\n    }\n  }, [ref.current.blog_page]);\n  useEffect(() => {\n    let ele = document.getElementsByClassName(\"appbody\")[0];\n    ele.scrollTo(0, 0);\n  }, [blog_details]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"blog_page\",\n    ref: el => ref.current.blog_page = el,\n    onMouseDown: getFullScreen,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      align: \"center\",\n      children: blog_details.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: blog_details.image_url,\n      className: \"title_image\",\n      loading: \"eager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(BlogiansMiniProfile, {\n      user_details: blog_details.blogger_details,\n      onClick: () => null,\n      to: `/blog_tube_react/Profile/${blog_details.blogger_details.user_id}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Blog, {\n      children: blog_data_list.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container_data\",\n        dangerouslySetInnerHTML: {\n          __html: item\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 48\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ReviewBlog, {\n      blog_id: blog_id,\n      likes: blog_details.likes,\n      dislikes: blog_details.dislikes,\n      views: blog_details.views\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Comments, {\n      blog_id: blog_id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 12\n  }, this);\n};\n\n_s(AppBlog, \"2X4HIqmsDeCLCbK+zNLJjMa0bCA=\", false, function () {\n  return [useHistory];\n});\n\n_c = AppBlog;\nexport default AppBlog;\n\nconst ReviewBlog = props => {\n  _s2();\n\n  const session_id = useContext(Login_context);\n  const history = useHistory();\n  const [reviewed, set_reviewed] = useState(\"not yet\");\n  const [reviews, set_reviews] = useState({\n    likes: props.likes,\n    dislikes: props.dislikes,\n    views: props.views\n  });\n  const ref = useRef({});\n  useEffect(() => {\n    set_reviews({\n      likes: props.likes,\n      dislikes: props.dislikes,\n      views: props.views\n    });\n  }, [props.likes, props.dislikes, props.views]);\n\n  const review = event => {\n    let opt = event.target.value;\n\n    if (session_id === sessionStorage.session) {\n      let xhr = new XMLHttpRequest();\n      let uid = JSON.parse(localStorage.login_data).user_id;\n      xhr.open('POST', appConfig.origin + `backend_api/Blogreview`);\n\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState === 4 && xhr.status === 200) {\n          let response = JSON.parse(xhr.response);\n\n          if (response.status === \"success\") {\n            set_reviews({ ...response.details\n            });\n          }\n        }\n      };\n\n      let formdata = new FormData();\n      formdata.append('uid', uid);\n      formdata.append('bid', props.blog_id);\n      formdata.append('review', opt);\n      xhr.send(formdata);\n    } else {\n      history.push('/blog_tube_react/Error');\n    }\n  };\n\n  useEffect(() => {\n    if (session_id === sessionStorage.session) {\n      let xhr = new XMLHttpRequest();\n      let uid = JSON.parse(localStorage.login_data).user_id;\n      xhr.open('GET', appConfig.origin + `backend_api/checkReviewr?bid=${props.blog_id}&uid=${uid}`);\n\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState === 4 && xhr.status === 200) {\n          let response = JSON.parse(xhr.response);\n\n          if (response.status === \"success\") {\n            set_reviewed(response.isreviewer);\n          }\n        }\n      };\n\n      xhr.send();\n    }\n  }, [session_id]);\n  useEffect(() => {\n    if (reviewed === \"like\") {\n      ref.current.like.click();\n    } else if (reviewed === \"dislike\") {\n      ref.current.dislike.click();\n    }\n  }, [reviewed]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"review\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"radio\",\n      name: \"review\",\n      ref: el => ref.current.like = el,\n      id: \"like\",\n      value: \"like\",\n      onInput: e => review(e),\n      hidden: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"like\",\n      id: \"like_label\",\n      style: {\n        backgroundImage: `url(${like_logo})`\n      },\n      children: reviews.likes > 0 ? reviews.likes : \"No Likes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      id: \"view_label\",\n      style: {\n        backgroundImage: `url(${view_logo})`\n      },\n      children: reviews.views > 0 ? reviews.views : \"No Views\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"radio\",\n      name: \"review\",\n      ref: el => ref.current.dislike = el,\n      id: \"dislike\",\n      value: \"dislike\",\n      onInput: e => review(e),\n      disabled: !session_id,\n      hidden: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"dislike\",\n      id: \"dislike_label\",\n      style: {\n        backgroundImage: `url(${dislike_logo})`\n      },\n      children: reviews.dislikes > 0 ? reviews.dislikes : \"No Dislikes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(ReviewBlog, \"e2O+neoT90r5NONUwVLkCtvRG1A=\", false, function () {\n  return [useHistory];\n});\n\n_c2 = ReviewBlog;\n\nconst Comments = props => {\n  _s3();\n\n  let session_id = useContext(Login_context);\n  const ref = useRef({});\n  const [login_status, set_login_status] = useState(false);\n  const history = useHistory();\n  useEffect(() => {\n    if (session_id === sessionStorage.session) {\n      set_login_status(true);\n    } else {\n      set_login_status(false);\n    }\n  }, [session_id]);\n  const [comment_list, set_comment_list] = useState([]);\n  useEffect(() => {\n    let xhr = new XMLHttpRequest();\n    xhr.open('POST', appConfig.origin + `backend_api/getComments`);\n\n    xhr.onreadystatechange = () => {\n      if (xhr.status === 200 && xhr.readyState === 4) {\n        let response = JSON.parse(xhr.response);\n\n        switch (response.status) {\n          case \"success\":\n            set_comment_list(response.comment_list);\n            console.log(response);\n            break;\n\n          case \"loginRequired\":\n            history.push(\"/blog_tube_react/Login\");\n            break;\n\n          default:\n            console.log(response.status);\n            break;\n        }\n      }\n    };\n\n    let formdata = new FormData();\n    formdata.append('blog_id', props.blog_id);\n    xhr.send(formdata);\n  }, []);\n  const send_comment = useCallback(() => {\n    let comment = ref.current.comment_input.value;\n\n    if (session_id === sessionStorage.session && comment !== '') {\n      const xhr = new XMLHttpRequest();\n      xhr.open(\"POST\", appConfig.origin + `backend_api/uploadComment`);\n\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState === 4 && xhr.status === 200) {\n          let response = JSON.parse(xhr.response);\n          ref.current.comment_input.value = '';\n\n          switch (response.status) {\n            case \"success\":\n              console.log(response);\n              set_comment_list([response.new_comment, ...comment_list]);\n              break;\n\n            case \"loginRequired\":\n              console.log(response.status);\n              history.push(\"/blog_tube_react/Login\");\n              break;\n\n            case \"fail\":\n              console.log(response.status);\n              history.push(\"/blog_tube_react/Error\");\n              break;\n\n            default:\n              console.log(response.status);\n              break;\n            // list has to be updated here\n          }\n        }\n      };\n\n      const formdata = new FormData();\n      xhr.setRequestHeader(\"session\", session_id);\n      formdata.append(\"comment\", comment);\n      formdata.append(\"user_id\", JSON.parse(localStorage.login_data).user_id);\n      formdata.append(\"blog_id\", props.blog_id);\n      xhr.send(formdata);\n    }\n  });\n  const cList = useMemo(() => comment_list.map(item => /*#__PURE__*/_jsxDEV(Comment, {\n    c_detials: item\n  }, item.cid, false, {\n    fileName: _jsxFileName,\n    lineNumber: 232,\n    columnNumber: 56\n  }, this)));\n  const nList = useMemo(() => /*#__PURE__*/_jsxDEV(\"span\", {\n    style: {\n      display: \"grid\",\n      placeItems: \"center\",\n      fontSize: \"30px\",\n      width: \"100%\",\n      height: \"100%\"\n    },\n    id: \"no_comments\",\n    children: \"No Comments\\uD83D\\uDE05\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 32\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments\",\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      align: \"center\",\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cover\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"comment\",\n        maxLength: 1000,\n        id: \"comment_input\",\n        disabled: !login_status,\n        ref: el => ref.current.comment_input = el,\n        cols: \"3\",\n        rows: \"5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        ref: el => ref.current.send_comment = el,\n        disabled: !login_status,\n        id: \"send_comment\",\n        onClick: () => send_comment()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment_list\",\n      children: comment_list.length === 0 ? nList : cList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 235,\n    columnNumber: 12\n  }, this);\n};\n\n_s3(Comments, \"7wMkvIxea+VAEL1HzzKEcgAES8E=\", false, function () {\n  return [useHistory];\n});\n\n_c3 = Comments;\n\nconst Comment = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment\",\n    id: props.key,\n    children: [/*#__PURE__*/_jsxDEV(UserImage, {\n      user_id: props.c_detials.uid,\n      width: \"50px\",\n      height: \"50px\",\n      style: {\n        gridArea: \"user_image\",\n        borderWidth: \"2px\",\n        alignSelf: \"center\",\n        justifySelf: \"center\"\n      },\n      to: `/blog_tube_react/Profile/${props.c_detials.uid}`,\n      onClick: () => null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"user_name\",\n      children: props.c_detials.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"comment_text\",\n      style: {\n        whiteSpace: \"break-spaces\"\n      },\n      children: props.c_detials.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"datetime\",\n      children: props.c_detials.upload_datetime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 253,\n    columnNumber: 9\n  }, this);\n};\n\n_c4 = Comment;\nexport { Comment };\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"AppBlog\");\n$RefreshReg$(_c2, \"ReviewBlog\");\n$RefreshReg$(_c3, \"Comments\");\n$RefreshReg$(_c4, \"Comment\");","map":{"version":3,"sources":["D:/Python files/Start Django/blog_tube/frontend/blog_tube/src/componenets/appBlog.js"],"names":["useContext","useEffect","useState","useRef","useCallback","useMemo","useHistory","Blog","BlogiansMiniProfile","appConfig","Login_context","UserImage","AppBlog","props","url","URLSearchParams","window","location","search","blog_id","get","history","push","blog_data_list","set_blog_data_list","blog_details","set_blog_details","likes","dislikes","views","title","image_url","blogger_details","ref","xhr","XMLHttpRequest","open","origin","onreadystatechange","readyState","status","response","JSON","parse","blog","send","full","getFullScreen","document","documentElement","requestFullscreen","then","catch","current","blog_page","ele","getElementsByClassName","scrollTo","el","user_id","map","item","index","__html","ReviewBlog","session_id","reviewed","set_reviewed","reviews","set_reviews","review","event","opt","target","value","sessionStorage","session","uid","localStorage","login_data","details","formdata","FormData","append","isreviewer","like","click","dislike","e","backgroundImage","like_logo","view_logo","dislike_logo","Comments","login_status","set_login_status","comment_list","set_comment_list","console","log","send_comment","comment","comment_input","new_comment","setRequestHeader","cList","cid","nList","display","placeItems","fontSize","width","height","length","Comment","key","c_detials","gridArea","borderWidth","alignSelf","justifySelf","name","whiteSpace","text","upload_datetime"],"mappings":"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","sourcesContent":["import { useContext, useEffect, useState ,useRef, useCallback, useMemo} from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Blog } from \"./appUploadBlog\";\r\nimport { BlogiansMiniProfile } from \"./appBlogians\";\r\nimport appConfig from './statics/appConfig.json'\r\nimport './statics/css/appUploadBlog.css'\r\nimport './statics/css/appBlog.css'\r\nimport view_logo from './statics/images/preview.svg'\r\nimport like_logo from './statics/images/like.svg'\r\nimport dislike_logo from './statics/images/dislike.svg'\r\nimport { Login_context } from \"../App\";\r\nimport UserImage from \"./userImage\";\r\n\r\nconst AppBlog  = props=>{\r\n    const url = new URLSearchParams(window.location.search)\r\n    const blog_id = url.get('id')    \r\n    const history = useHistory()\r\n    if (blog_id === null){\r\n        history.push('/blog_tube_react/Error')\r\n    }\r\n\r\n    const [blog_data_list , set_blog_data_list] = useState([])\r\n    const [blog_details , set_blog_details] = useState({likes:\"\" , dislikes:\"\" ,\r\n     views :\"\" , title:\"\" , image_url:\"\",blogger_details:{}})\r\n\r\n     const ref = useRef({})\r\n    useEffect(()=>{\r\n    const xhr = new XMLHttpRequest()\r\n    xhr.open('GET' ,appConfig.origin+'backend_api/getBlog?blog_id='+blog_id )\r\n    xhr.onreadystatechange =()=>{\r\n        if (xhr.readyState === 4 && xhr.status === 200){\r\n            let response = JSON.parse(xhr.response)\r\n            switch (response.status){\r\n                case \"success\":\r\n                    set_blog_data_list(response.blog)\r\n                    set_blog_details({likes:response.likes ,\r\n                                      dislikes:response.dislikes ,\r\n                                    views:response.views ,\r\n                                title :response.title ,\r\n                            image_url:response.image_url,\r\n                                blogger_details : response.blogger_details})\r\n                    break;\r\n                case \"page_not_found\":\r\n                    history.push('/blog_tube_react/Error')\r\n                    break;\r\n                case \"fail\":\r\n                    history.push('/blog_tube_react/Error')\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    xhr.send()\r\n\r\n    },[])\r\n\r\n    var full = false\r\n\r\n    const getFullScreen = useCallback(()=>{\r\n        if (!full){\r\n        document.documentElement.requestFullscreen()\r\n        .then( ()=>full= true)\r\n        .catch(()=>full = false)}    \r\n        \r\n    },[ref.current.blog_page])\r\n    useEffect(()=>{\r\n        let ele  = document.getElementsByClassName(\"appbody\")[0]\r\n        ele.scrollTo(0,0)\r\n    }\r\n    \r\n    ,[blog_details])\r\n\r\n\r\n    return(<div  className = \"blog_page\" ref ={el=>ref.current.blog_page = el} onMouseDown={getFullScreen} >\r\n        <h2 align = \"center\">{blog_details.title}</h2>\r\n        <img src = {blog_details.image_url} className = \"title_image\" loading = {\"eager\"} />\r\n        <BlogiansMiniProfile user_details = {blog_details.blogger_details} onClick={()=>null}  to ={`/blog_tube_react/Profile/${blog_details.blogger_details.user_id}`} />\r\n        <Blog>\r\n            {blog_data_list.map((item,index)=>(<div key = {index} className = \"container_data\" dangerouslySetInnerHTML = {{__html:item}}></div>))}\r\n        </Blog>\r\n        <ReviewBlog blog_id = {blog_id} likes = {blog_details.likes} dislikes= {blog_details.dislikes} views= {blog_details.views} />\r\n        <Comments  blog_id = {blog_id} />\r\n    </div>)\r\n}\r\n\r\nexport default AppBlog\r\n\r\nconst ReviewBlog=props=>{\r\n    const session_id = useContext(Login_context)\r\n    const history = useHistory()\r\n    const[ reviewed  ,set_reviewed] = useState(\"not yet\")\r\n    const[reviews ,set_reviews] =useState({likes : props.likes ,dislikes : props.dislikes ,views : props.views})\r\n    const ref = useRef({})\r\n    useEffect(()=>{\r\n        set_reviews({likes : props.likes ,dislikes : props.dislikes ,views : props.views})\r\n    },[props.likes , props.dislikes , props.views])\r\n\r\n    const review=event=>{\r\n        let opt = event.target.value\r\n        if (session_id === sessionStorage.session ){\r\n            let xhr = new XMLHttpRequest()\r\n            let uid = JSON.parse(localStorage.login_data).user_id\r\n            xhr.open('POST' , appConfig.origin+`backend_api/Blogreview`)\r\n            xhr.onreadystatechange=()=>{if(xhr.readyState===4 && xhr.status===200){\r\n                let response = JSON.parse(xhr.response)\r\n                if(response.status===\"success\"){\r\n                    set_reviews({...response.details})\r\n                }\r\n            }}\r\n            let formdata = new FormData()\r\n            formdata.append('uid' , uid)\r\n            formdata.append('bid' , props.blog_id)\r\n            formdata.append('review' , opt)\r\n            xhr.send(formdata)\r\n        }else{\r\n            history.push('/blog_tube_react/Error')\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        if (session_id===sessionStorage.session){\r\n\r\n            let xhr = new XMLHttpRequest()\r\n            let uid = JSON.parse(localStorage.login_data).user_id\r\n            xhr.open('GET' , appConfig.origin+`backend_api/checkReviewr?bid=${props.blog_id}&uid=${uid}`)\r\n            xhr.onreadystatechange=()=>{if(xhr.readyState===4 && xhr.status===200){\r\n                let response = JSON.parse(xhr.response)\r\n                if(response.status===\"success\"){\r\n                    set_reviewed( response.isreviewer)\r\n                }\r\n            }}\r\n            xhr.send()\r\n        }\r\n    },[session_id])\r\n    useEffect(()=>{\r\n        if (reviewed === \"like\"){\r\n            ref.current.like.click()\r\n        }else if (reviewed === \"dislike\"){\r\n            ref.current.dislike.click()\r\n        }\r\n    },[reviewed])\r\n\r\n    \r\n    return(\r\n        <div className=\"review\">\r\n            <input type=\"radio\" name=\"review\" ref = {el=>ref.current.like = el}  id=\"like\" value= {\"like\"} onInput={e=>review(e)}  hidden/>\r\n            <label htmlFor=\"like\" id=\"like_label\" style={{backgroundImage:`url(${like_logo})`}} >{reviews.likes>0?reviews.likes:\"No Likes\"}</label>\r\n            <label id =\"view_label\" style={{backgroundImage:`url(${view_logo})`}}>{reviews.views>0?reviews.views:\"No Views\"}</label>\r\n            <input type=\"radio\" name=\"review\" ref = {el=>ref.current.dislike = el}  id=\"dislike\" value={\"dislike\"} onInput={e=>review(e)} disabled={!session_id} hidden/>\r\n            <label htmlFor=\"dislike\" id=\"dislike_label\" style={{backgroundImage:`url(${dislike_logo})`}}  >{reviews.dislikes>0?reviews.dislikes:\"No Dislikes\"}</label>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Comments =props=>{\r\n    let session_id = useContext(Login_context)\r\n    const ref = useRef({})\r\n    const [login_status , set_login_status] = useState(false)\r\n    const history = useHistory()\r\n    useEffect(()=>{\r\n        if(session_id === sessionStorage.session){\r\n            set_login_status(true)\r\n        }else{\r\n            set_login_status(false)\r\n        }\r\n    },[session_id])\r\n\r\n    const [comment_list , set_comment_list] = useState([])\r\n\r\n    useEffect(()=>{\r\n        let xhr = new XMLHttpRequest()\r\n        xhr.open('POST' , appConfig.origin+`backend_api/getComments`)\r\n        xhr.onreadystatechange=()=>{\r\n            if(xhr.status===200 && xhr.readyState === 4 ){\r\n                let response = JSON.parse(xhr.response)\r\n                switch (response.status) {\r\n                    case \"success\":\r\n                        set_comment_list(response.comment_list)\r\n                        console.log(response)\r\n                        break;\r\n                    case \"loginRequired\":\r\n                        history.push(\"/blog_tube_react/Login\")\r\n                        break;\r\n                \r\n                    default:\r\n                        console.log(response.status)\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        let formdata = new FormData()\r\n        formdata.append('blog_id' , props.blog_id)\r\n        xhr.send(formdata)\r\n        \r\n    },[])\r\n\r\n    const send_comment = useCallback(()=>{\r\n        let comment = ref.current.comment_input.value\r\n        if (session_id === sessionStorage.session &&  comment !== ''){\r\n            const xhr = new XMLHttpRequest()\r\n            xhr.open(\"POST\" , appConfig.origin+`backend_api/uploadComment`)\r\n            xhr.onreadystatechange = ()=>{\r\n                if(xhr.readyState === 4 && xhr.status === 200){\r\n                let response = JSON.parse(xhr.response) \r\n                ref.current.comment_input.value =''\r\n                switch (response.status) {\r\n                    case \"success\":\r\n                        console.log(response)\r\n                        set_comment_list([response.new_comment ,...comment_list])\r\n                        break;\r\n                    case \"loginRequired\":\r\n                        console.log(response.status)\r\n                        history.push(\"/blog_tube_react/Login\")\r\n                        break;\r\n                    case \"fail\":\r\n                        console.log(response.status)\r\n                        history.push(\"/blog_tube_react/Error\") \r\n                        break;              \r\n                    default:\r\n                        console.log(response.status)\r\n                        break;                                 // list has to be updated here\r\n            }}}\r\n            const formdata = new FormData()\r\n            xhr.setRequestHeader(\"session\" ,session_id )\r\n            formdata.append(\"comment\" , comment)\r\n            formdata.append(\"user_id\"  , JSON.parse(localStorage.login_data).user_id)\r\n            formdata.append(\"blog_id\" , props.blog_id)\r\n            xhr.send(formdata)\r\n        }\r\n    \r\n    })\r\n    const cList = useMemo(()=>(comment_list.map(item=>(<Comment c_detials = {item} key ={item.cid} />))))\r\n    const nList = useMemo(()=>(<span style ={{display:\"grid\",placeItems:\"center\",\r\n    fontSize:\"30px\",width:\"100%\" ,height:\"100%\"}} id = \"no_comments\">No Comments😅</span>))\r\n    return(<div className=\"comments\">\r\n                <h5 align = \"center\">Comments</h5>\r\n                <div className=\"cover\">\r\n                <textarea name=\"comment\" maxLength={1000} id=\"comment_input\"  disabled={!login_status}\r\n                ref={el=>ref.current.comment_input = el} cols=\"3\" rows=\"5\">\r\n                </textarea>\r\n                <button ref = {el=>ref.current.send_comment = el} disabled= {!login_status}\r\n                   id=\"send_comment\" onClick = {()=>send_comment()} ></button>\r\n                </div>\r\n                <div className=\"comment_list\">\r\n                    {comment_list.length ===0?nList: cList }\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nconst Comment = props=>{\r\n    return (\r\n        <div className=\"comment\" id = {props.key}>\r\n            <UserImage user_id= {props.c_detials.uid} width={\"50px\"} height=\"50px\"\r\n             style= {{gridArea :\"user_image\" , borderWidth : \"2px\" , alignSelf : \"center\" , justifySelf: \"center\"}}\r\n             to = {`/blog_tube_react/Profile/${props.c_detials.uid}`} onClick={()=>null} />\r\n            <span id=\"user_name\">{props.c_detials.name}</span>\r\n            <p className=\"comment_text\" style={{whiteSpace:\"break-spaces\"}}>{props.c_detials.text}</p>\r\n            <div className=\"datetime\">{props.c_detials.upload_datetime}</div>\r\n        </div>\r\n    )\r\n}\r\nexport {Comment}"]},"metadata":{},"sourceType":"module"}