{"ast":null,"code":"var _jsxFileName = \"A:\\\\Python files\\\\Start Django\\\\blog_tube\\\\frontend\\\\blog_tube\\\\src\\\\componenets\\\\appLogin.js\",\n    _s = $RefreshSig$();\n\nimport './statics/css/appLogin.css';\nimport username_logo from \"./statics/images/username.svg\";\nimport password_logo from \"./statics/images/password.svg\";\nimport form_background from \"./statics/images/form_background.svg\";\nimport appConfig from './statics/appConfig.json';\nimport anime from 'animejs';\nimport { useEffect, useRef, useState, useCallback } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar AppLogin = props => {\n  _s();\n\n  let ref = useRef({});\n  let [Error, set_Error] = useState(false);\n  useEffect(() => {\n    try {\n      if (!Error) {\n        ref.current['username'].style.backgroundImage = `url(${username_logo})`;\n        ref.current['password'].style.backgroundImage = `url(${password_logo})`;\n        ref.current['form'].style.backgroundImage = `url(${form_background})`;\n        anime({\n          targets: ref.current['heading'],\n          update: function (anime) {\n            try {\n              ref.current['heading'].style.filter = `hue-rotate(${anime.progress * 3.6}deg)`;\n            } catch (err) {\n              console.log(err);\n            }\n          },\n          duration: 2000,\n          autoplay: true,\n          direction: 'alternate',\n          loop: true\n        });\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }, [ref, Error]);\n  const origin = appConfig.origin;\n  let chars = {\n    \"!\": null,\n    \"#\": null,\n    \"$\": null,\n    \"%\": null,\n    \"^\": null,\n    \"&\": null,\n    \"*\": null,\n    \"(\": null,\n    \")\": null,\n    \"'\": null,\n    '\"': null,\n    \";\": null,\n    \":\": null\n  };\n\n  let Login = event => {\n    console.log(event);\n    let form = event.target;\n    let email_input = form[0];\n    let password_input = form[1];\n    let xhr = new XMLHttpRequest();\n    xhr.open('POST', `${origin}backend_api/loginmanully`);\n    props.appbodyloading('flex');\n\n    xhr.onreadystatechange = () => {\n      if (xhr.status == 200 && xhr.readyState == 4) {\n        let response = JSON.parse(xhr.response);\n\n        if (response.status === \"fail\") {\n          set_Error(true);\n          props.appbodyloading('none');\n        } else if (response.status === \"not_match\") {\n          password_input.focus();\n          password_input.setCustomValidity('⚠️invalid password⚠️!!Forgot password ?');\n          password_input.reportValidity();\n          props.appbodyloading('none');\n        } else if (response.status === \"success\") {\n          console.log(response);\n          props.appbodyloading('none');\n        }\n      }\n    };\n\n    xhr.setRequestHeader(\"credentails\", JSON.stringify({\n      email: email_input.value,\n      password: password_input.value\n    }));\n    xhr.send();\n  };\n\n  var checkUsername = useCallback(event => {\n    event.preventDefault();\n    let filtered_list = [...event.target.value].filter(item => !(item in chars));\n    let list = [...event.target.value];\n\n    if (filtered_list.join('') == list.join('')) {\n      event.target.setCustomValidity(\"\");\n    } else if (event.nativeEvent.data === '\"' || event.nativeEvent.data === \"'\") {\n      event.target.value = event.target.value.slice(0, event.target.value.length - 1);\n    } else if (event.nativeEvent.data in chars) {\n      event.target.setCustomValidity(\"username should not contain \\n ------------ ?!:;@#$%^&*() ------------\");\n      event.target.reportValidity();\n    }\n  });\n\n  let login_form = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      align: \"center\",\n      ref: el => ref.current['heading'] = el,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"javascript:void(0);\",\n      method: \"POST\",\n      onSubmit: e => Login(e),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"username\",\n        maxLength: 100,\n        type: \"email\",\n        ref: el => ref.current['username'] = el,\n        placeholder: \"Email\",\n        onInput: e => checkUsername(e),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        minLength: 8,\n        maxLength: 100,\n        id: \"password\",\n        ref: el => ref.current['password'] = el,\n        placeholder: \"Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"submit\",\n        type: \"submit\",\n        value: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n\n  let error_msg = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      ref: el => ref.current['heading'] = el,\n      align: \"cetner\",\n      children: \"Invalid Credentials\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"back\",\n      onClick: () => set_Error(false),\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 22\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      ref: el => ref.current['form'] = el,\n      children: [!Error ? login_form : error_msg, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"redirectSignup\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Didn't Have an account?\", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/Signup\",\n            children: \"SignUp\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 47\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AppLogin, \"oPxfth8IuBpT5FA8xrvKzcD+mKE=\");\n\n_c = AppLogin;\nexport default AppLogin;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppLogin\");","map":{"version":3,"sources":["A:/Python files/Start Django/blog_tube/frontend/blog_tube/src/componenets/appLogin.js"],"names":["appConfig","anime","useEffect","useRef","useState","useCallback","Link","Redirect","AppLogin","props","ref","Error","set_Error","current","style","backgroundImage","username_logo","password_logo","form_background","targets","update","filter","progress","err","console","log","duration","autoplay","direction","loop","origin","chars","Login","event","form","target","email_input","password_input","xhr","XMLHttpRequest","open","appbodyloading","onreadystatechange","status","readyState","response","JSON","parse","focus","setCustomValidity","reportValidity","setRequestHeader","stringify","email","value","password","send","checkUsername","preventDefault","filtered_list","item","list","join","nativeEvent","data","slice","length","login_form","el","e","error_msg"],"mappings":"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","sourcesContent":["import './statics/css/appLogin.css'\r\nimport username_logo from './statics/images/username.svg'\r\nimport password_logo from './statics/images/password.svg'\r\nimport form_background from './statics/images/form_background.svg'\r\nimport appConfig from './statics/appConfig.json'\r\n\r\nimport anime from 'animejs'\r\nimport { useEffect, useRef , useState , useCallback} from 'react'\r\nimport {\r\n    Link, Redirect \r\n} from 'react-router-dom'\r\n\r\nvar AppLogin = props=>{\r\n   \r\n    let ref = useRef({})\r\n\r\n    let [Error, set_Error] = useState(false)\r\n\r\n    useEffect(()=>{\r\n        try{\r\n        if (!Error){\r\n        ref.current['username'].style.backgroundImage = `url(${username_logo})`\r\n        ref.current['password'].style.backgroundImage = `url(${password_logo})`\r\n        ref.current['form'].style.backgroundImage = `url(${form_background})`\r\n        anime({\r\n            targets:ref.current['heading'],\r\n            update:function(anime){\r\n                try{\r\n                ref.current['heading'].style.filter = `hue-rotate(${anime.progress *3.6}deg)`\r\n                }catch(err){\r\n                    console.log(err)\r\n                }\r\n            },\r\n            duration:2000,\r\n            autoplay:true,\r\n            direction:'alternate',\r\n            loop:true\r\n        })}\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n\r\n\r\n    },[ref , Error])\r\n\r\n    const origin = appConfig.origin\r\n\r\n    let chars = {\"!\":null , \"#\":null , \"$\":null,\"%\":null,\"^\":null,\"&\":null,\"*\":null,\"(\":null,\")\":null,\"'\":null, '\"':null,\";\":null, \":\":null}\r\n    let Login = (event)=>{\r\n        console.log(event)\r\n        let form = event.target\r\n        let email_input = form[0]\r\n        let password_input = form[1]\r\n\r\n        let xhr = new XMLHttpRequest()\r\n        xhr.open('POST', `${origin}backend_api/loginmanully`)\r\n        props.appbodyloading('flex')\r\n\r\n        xhr.onreadystatechange = ()=>{\r\n            if (xhr.status == 200 && xhr.readyState == 4){\r\n                let response = JSON.parse(xhr.response)\r\n                \r\n                if(response.status === \"fail\"){\r\n                    set_Error(true)\r\n                    props.appbodyloading('none')\r\n\r\n                }else if(response.status === \"not_match\"){\r\n                    password_input.focus()\r\n                    password_input.setCustomValidity('⚠️invalid password⚠️!!Forgot password ?')\r\n                    password_input.reportValidity()\r\n                    props.appbodyloading('none')\r\n\r\n                }else if(response.status === \"success\"){\r\n                    console.log(response)\r\n                    props.appbodyloading('none')\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        xhr.setRequestHeader(\"credentails\" , JSON.stringify({email : email_input.value,\r\n                                                        password : password_input.value}))\r\n        xhr.send()\r\n    }\r\n    var checkUsername = useCallback(event=>{\r\n        event.preventDefault()\r\n        let filtered_list = [...event.target.value].filter((item)=> !(item in chars))\r\n        let list = [...event.target.value]\r\n\r\n        if( filtered_list.join('') == list.join('') ){\r\n                event.target.setCustomValidity(\"\")\r\n            }\r\n\r\n        else if (event.nativeEvent.data === '\"' || event.nativeEvent.data === \"'\"){\r\n            event.target.value = event.target.value.slice(0, event.target.value.length-1)\r\n        }else if (event.nativeEvent.data in chars ){\r\n            event.target.setCustomValidity(\"username should not contain \\n ------------ ?!:;@#$%^&*() ------------\")\r\n            event.target.reportValidity()\r\n            \r\n        }\r\n\r\n    })\r\n\r\n    let login_form = (<><h1 align='center' ref = {el =>ref.current['heading'] =el} >Login</h1>\r\n    <form action= 'javascript:void(0);' method = 'POST' onSubmit =  {(e)=>Login(e) } >  \r\n        <input id='username' maxLength={100} type=\"email\" ref= {el=>ref.current['username']= el} placeholder = 'Email' onInput= {e=>checkUsername(e)} required = {true} />\r\n        <input type=\"password\" minLength={8} maxLength={100} id='password' ref = {el=>ref.current['password']=el}  placeholder= \"Password\" required = {true} />\r\n        <input className='submit' type=\"submit\"  value= 'Login'   />\r\n    </form></>)\r\n\r\n    let error_msg = (<div className = 'error'>\r\n    <h2 ref = {el =>ref.current['heading'] =el} align = 'cetner'>Invalid Credentials</h2>\r\n    <button className = \"back\"  onClick = {()=>set_Error(false)} >Back</button>\r\n    </div>)\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"form\" ref = {el =>ref.current['form'] = el}>\r\n                 {!Error?login_form :error_msg }\r\n\r\n                <div className=\"redirectSignup\">\r\n                    <p>Didn't Have an account?<Link to = '/Signup'>SignUp</Link></p>\r\n                </div>\r\n\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default AppLogin;"]},"metadata":{},"sourceType":"module"}