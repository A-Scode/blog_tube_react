{"ast":null,"code":"var _jsxFileName = \"A:\\\\Python files\\\\Start Django\\\\blog_tube\\\\frontend\\\\blog_tube\\\\src\\\\componenets\\\\appBlogians.js\",\n    _s = $RefreshSig$();\n\nimport './statics/css/appBlogians.css';\nimport appConfig from './statics/appConfig.json';\nimport { useEffect, useState } from 'react';\nimport blogiansIcon from \"./statics/images/blogians.svg\";\nimport PropTypes from 'prop-types';\nimport formbackground from \"./statics/images/form_background.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar AppBlogians = props => {\n  _s();\n\n  const [user_list, set_user_list] = useState([]);\n  var all_users_list;\n  useEffect(() => {\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', appConfig.origin + \"backend_api/userlist\");\n\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState == 4 && xhr.status == 200) {\n        let response = JSON.parse(xhr.response);\n\n        if (response.status == 'success') {\n          all_users_list = response.userslist;\n          set_user_list(response.userslist);\n        } else if (response.status == 'fail') {\n          set_user_list([]);\n        }\n\n        console.log(response.status);\n      }\n    };\n\n    xhr.send();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"blogians\",\n    style: {\n      backgroundImage: `url(${formbackground})`,\n      backgroundSize: \"1000px 3000px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"blogiansInput\",\n      style: {\n        backgroundImage: `url(${blogiansIcon})`\n      },\n      type: \"text\",\n      placeholder: \"Search Blogians\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"allBlogians\",\n      children: user_list.map(item => {\n        return /*#__PURE__*/_jsxDEV(BlogiansMiniProfile, {\n          user_details: item\n        }, item.user_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 32\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 13\n  }, this);\n};\n\n_s(AppBlogians, \"lZrzNI1n5hlgkd79p/rjfiKcvCQ=\");\n\n_c = AppBlogians;\n\nfunction BlogiansMiniProfile(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"miniprofile\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profilePhoto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile_name\",\n      children: props.user_details.user_name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"follower_count\",\n      style: {\n        backgroundImage: `url(${blogiansIcon})`\n      },\n      children: [props.user_details.followers > 0 ? props.user_details.followers : \"No\", \" Followers\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), props.user_details.total_blogs === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tag\",\n      children: \"\\uD83C\\uDFF9Blogger\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 52\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = BlogiansMiniProfile;\nBlogiansMiniProfile.propTypes = {\n  user_details: PropTypes.object.isRequired\n};\nexport default AppBlogians;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AppBlogians\");\n$RefreshReg$(_c2, \"BlogiansMiniProfile\");","map":{"version":3,"sources":["A:/Python files/Start Django/blog_tube/frontend/blog_tube/src/componenets/appBlogians.js"],"names":["appConfig","useEffect","useState","PropTypes","AppBlogians","props","user_list","set_user_list","all_users_list","xhr","XMLHttpRequest","open","origin","onreadystatechange","readyState","status","response","JSON","parse","userslist","console","log","send","backgroundImage","formbackground","backgroundSize","blogiansIcon","map","item","user_id","BlogiansMiniProfile","user_details","user_name","followers","total_blogs","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import './statics/css/appBlogians.css'\r\nimport appConfig from './statics/appConfig.json'\r\nimport {useEffect, useState } from 'react'\r\nimport blogiansIcon from './statics/images/blogians.svg'\r\nimport PropTypes from 'prop-types'\r\nimport formbackground from './statics/images/form_background.svg'\r\n\r\nvar AppBlogians = props=>{\r\n    const [user_list , set_user_list] = useState([])\r\n\r\n    var all_users_list ;\r\n\r\n    useEffect(()=>{\r\n    var xhr = new XMLHttpRequest()\r\n    xhr.open('GET' , appConfig.origin + \"backend_api/userlist\")\r\n    xhr.onreadystatechange = ()=>{\r\n        if (xhr.readyState == 4 && xhr.status == 200){\r\n            let response = JSON.parse(xhr.response)\r\n\r\n            if (response.status == 'success'){\r\n                all_users_list = response.userslist\r\n                set_user_list(response.userslist)\r\n            }else if (response.status == 'fail'){\r\n                set_user_list([])\r\n            }\r\n            console.log(response.status)\r\n        }\r\n    }\r\n    xhr.send()\r\n},[])\r\n\r\n    return (<div className=\"blogians\" style = {{backgroundImage: `url(${formbackground})`, backgroundSize : \"1000px 3000px\"}}>\r\n                <input className = \"blogiansInput\" style= {{backgroundImage:`url(${blogiansIcon})`}} type = \"text\" placeholder = \"Search Blogians\" />\r\n                <div className=\"allBlogians\">\r\n                    {user_list.map(item=>{\r\n                        return(<BlogiansMiniProfile key = {item.user_id} user_details = {item} />)\r\n                    })}\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\n\r\nfunction BlogiansMiniProfile(props){\r\n    return(\r\n        <div className=\"miniprofile\">\r\n            <div className=\"profilePhoto\">\r\n            </div>\r\n            <div className=\"profile_name\">{props.user_details.user_name}</div>\r\n            <div className=\"follower_count\" style= {{backgroundImage : `url(${blogiansIcon})`}} >{props.user_details.followers > 0 ?props.user_details.followers:\"No\"} Followers</div>\r\n            {props.user_details.total_blogs === 0 ?<div className=\"tag\">üèπBlogger</div>:null}\r\n        </div>\r\n    )\r\n}\r\n\r\nBlogiansMiniProfile.propTypes = {\r\n    user_details : PropTypes.object.isRequired\r\n}\r\n\r\n\r\n\r\nexport  default AppBlogians;\r\n"]},"metadata":{},"sourceType":"module"}