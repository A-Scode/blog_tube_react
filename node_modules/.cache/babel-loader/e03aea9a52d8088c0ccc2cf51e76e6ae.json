{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\n\nvar _assign = require(\"babel-runtime/core-js/object/assign\");\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nexports.default = buildConfigChain;\n\nvar _resolve = require(\"../../../helpers/resolve\");\n\nvar _resolve2 = _interopRequireDefault(_resolve);\n\nvar _json = require(\"json5\");\n\nvar _json2 = _interopRequireDefault(_json);\n\nvar _pathIsAbsolute = require(\"path-is-absolute\");\n\nvar _pathIsAbsolute2 = _interopRequireDefault(_pathIsAbsolute);\n\nvar _path = require(\"path\");\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _fs = require(\"fs\");\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar existsCache = {};\nvar jsonCache = {};\nvar BABELIGNORE_FILENAME = \".babelignore\";\nvar BABELRC_FILENAME = \".babelrc\";\nvar PACKAGE_FILENAME = \"package.json\";\n\nfunction exists(filename) {\n  var cached = existsCache[filename];\n\n  if (cached == null) {\n    return existsCache[filename] = _fs2.default.existsSync(filename);\n  } else {\n    return cached;\n  }\n}\n\nfunction buildConfigChain() {\n  var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var log = arguments[1];\n  var filename = opts.filename;\n  var builder = new ConfigChainBuilder(log);\n\n  if (opts.babelrc !== false) {\n    builder.findConfigs(filename);\n  }\n\n  builder.mergeConfig({\n    options: opts,\n    alias: \"base\",\n    dirname: filename && _path2.default.dirname(filename)\n  });\n  return builder.configs;\n}\n\nvar ConfigChainBuilder = function () {\n  function ConfigChainBuilder(log) {\n    (0, _classCallCheck3.default)(this, ConfigChainBuilder);\n    this.resolvedConfigs = [];\n    this.configs = [];\n    this.log = log;\n  }\n\n  ConfigChainBuilder.prototype.findConfigs = function findConfigs(loc) {\n    if (!loc) return;\n\n    if (!(0, _pathIsAbsolute2.default)(loc)) {\n      loc = _path2.default.join(process.cwd(), loc);\n    }\n\n    var foundConfig = false;\n    var foundIgnore = false;\n\n    while (loc !== (loc = _path2.default.dirname(loc))) {\n      if (!foundConfig) {\n        var configLoc = _path2.default.join(loc, BABELRC_FILENAME);\n\n        if (exists(configLoc)) {\n          this.addConfig(configLoc);\n          foundConfig = true;\n        }\n\n        var pkgLoc = _path2.default.join(loc, PACKAGE_FILENAME);\n\n        if (!foundConfig && exists(pkgLoc)) {\n          foundConfig = this.addConfig(pkgLoc, \"babel\", JSON);\n        }\n      }\n\n      if (!foundIgnore) {\n        var ignoreLoc = _path2.default.join(loc, BABELIGNORE_FILENAME);\n\n        if (exists(ignoreLoc)) {\n          this.addIgnoreConfig(ignoreLoc);\n          foundIgnore = true;\n        }\n      }\n\n      if (foundIgnore && foundConfig) return;\n    }\n  };\n\n  ConfigChainBuilder.prototype.addIgnoreConfig = function addIgnoreConfig(loc) {\n    var file = _fs2.default.readFileSync(loc, \"utf8\");\n\n    var lines = file.split(\"\\n\");\n    lines = lines.map(function (line) {\n      return line.replace(/#(.*?)$/, \"\").trim();\n    }).filter(function (line) {\n      return !!line;\n    });\n\n    if (lines.length) {\n      this.mergeConfig({\n        options: {\n          ignore: lines\n        },\n        alias: loc,\n        dirname: _path2.default.dirname(loc)\n      });\n    }\n  };\n\n  ConfigChainBuilder.prototype.addConfig = function addConfig(loc, key) {\n    var json = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _json2.default;\n\n    if (this.resolvedConfigs.indexOf(loc) >= 0) {\n      return false;\n    }\n\n    this.resolvedConfigs.push(loc);\n\n    var content = _fs2.default.readFileSync(loc, \"utf8\");\n\n    var options = void 0;\n\n    try {\n      options = jsonCache[content] = jsonCache[content] || json.parse(content);\n      if (key) options = options[key];\n    } catch (err) {\n      err.message = loc + \": Error while parsing JSON - \" + err.message;\n      throw err;\n    }\n\n    this.mergeConfig({\n      options: options,\n      alias: loc,\n      dirname: _path2.default.dirname(loc)\n    });\n    return !!options;\n  };\n\n  ConfigChainBuilder.prototype.mergeConfig = function mergeConfig(_ref) {\n    var options = _ref.options,\n        alias = _ref.alias,\n        loc = _ref.loc,\n        dirname = _ref.dirname;\n\n    if (!options) {\n      return false;\n    }\n\n    options = (0, _assign2.default)({}, options);\n    dirname = dirname || process.cwd();\n    loc = loc || alias;\n\n    if (options.extends) {\n      var extendsLoc = (0, _resolve2.default)(options.extends, dirname);\n\n      if (extendsLoc) {\n        this.addConfig(extendsLoc);\n      } else {\n        if (this.log) this.log.error(\"Couldn't resolve extends clause of \" + options.extends + \" in \" + alias);\n      }\n\n      delete options.extends;\n    }\n\n    this.configs.push({\n      options: options,\n      alias: alias,\n      loc: loc,\n      dirname: dirname\n    });\n    var envOpts = void 0;\n    var envKey = process.env.BABEL_ENV || process.env.NODE_ENV || \"development\";\n\n    if (options.env) {\n      envOpts = options.env[envKey];\n      delete options.env;\n    }\n\n    this.mergeConfig({\n      options: envOpts,\n      alias: alias + \".env.\" + envKey,\n      dirname: dirname\n    });\n  };\n\n  return ConfigChainBuilder;\n}();\n\nmodule.exports = exports[\"default\"];","map":{"version":3,"sources":["D:/Python files/Start Django/blog_tube/frontend/blog_tube/node_modules/babel-core/lib/transformation/file/options/build-config-chain.js"],"names":["exports","__esModule","_assign","require","_assign2","_interopRequireDefault","_classCallCheck2","_classCallCheck3","default","buildConfigChain","_resolve","_resolve2","_json","_json2","_pathIsAbsolute","_pathIsAbsolute2","_path","_path2","_fs","_fs2","obj","existsCache","jsonCache","BABELIGNORE_FILENAME","BABELRC_FILENAME","PACKAGE_FILENAME","exists","filename","cached","existsSync","opts","arguments","length","undefined","log","builder","ConfigChainBuilder","babelrc","findConfigs","mergeConfig","options","alias","dirname","configs","resolvedConfigs","prototype","loc","join","process","cwd","foundConfig","foundIgnore","configLoc","addConfig","pkgLoc","JSON","ignoreLoc","addIgnoreConfig","file","readFileSync","lines","split","map","line","replace","trim","filter","ignore","key","json","indexOf","push","content","parse","err","message","_ref","extends","extendsLoc","error","envOpts","envKey","env","BABEL_ENV","NODE_ENV","module"],"mappings":"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","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\n\nvar _assign = require(\"babel-runtime/core-js/object/assign\");\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nexports.default = buildConfigChain;\n\nvar _resolve = require(\"../../../helpers/resolve\");\n\nvar _resolve2 = _interopRequireDefault(_resolve);\n\nvar _json = require(\"json5\");\n\nvar _json2 = _interopRequireDefault(_json);\n\nvar _pathIsAbsolute = require(\"path-is-absolute\");\n\nvar _pathIsAbsolute2 = _interopRequireDefault(_pathIsAbsolute);\n\nvar _path = require(\"path\");\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _fs = require(\"fs\");\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar existsCache = {};\nvar jsonCache = {};\n\nvar BABELIGNORE_FILENAME = \".babelignore\";\nvar BABELRC_FILENAME = \".babelrc\";\nvar PACKAGE_FILENAME = \"package.json\";\n\nfunction exists(filename) {\n  var cached = existsCache[filename];\n  if (cached == null) {\n    return existsCache[filename] = _fs2.default.existsSync(filename);\n  } else {\n    return cached;\n  }\n}\n\nfunction buildConfigChain() {\n  var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var log = arguments[1];\n\n  var filename = opts.filename;\n  var builder = new ConfigChainBuilder(log);\n\n  if (opts.babelrc !== false) {\n    builder.findConfigs(filename);\n  }\n\n  builder.mergeConfig({\n    options: opts,\n    alias: \"base\",\n    dirname: filename && _path2.default.dirname(filename)\n  });\n\n  return builder.configs;\n}\n\nvar ConfigChainBuilder = function () {\n  function ConfigChainBuilder(log) {\n    (0, _classCallCheck3.default)(this, ConfigChainBuilder);\n\n    this.resolvedConfigs = [];\n    this.configs = [];\n    this.log = log;\n  }\n\n  ConfigChainBuilder.prototype.findConfigs = function findConfigs(loc) {\n    if (!loc) return;\n\n    if (!(0, _pathIsAbsolute2.default)(loc)) {\n      loc = _path2.default.join(process.cwd(), loc);\n    }\n\n    var foundConfig = false;\n    var foundIgnore = false;\n\n    while (loc !== (loc = _path2.default.dirname(loc))) {\n      if (!foundConfig) {\n        var configLoc = _path2.default.join(loc, BABELRC_FILENAME);\n        if (exists(configLoc)) {\n          this.addConfig(configLoc);\n          foundConfig = true;\n        }\n\n        var pkgLoc = _path2.default.join(loc, PACKAGE_FILENAME);\n        if (!foundConfig && exists(pkgLoc)) {\n          foundConfig = this.addConfig(pkgLoc, \"babel\", JSON);\n        }\n      }\n\n      if (!foundIgnore) {\n        var ignoreLoc = _path2.default.join(loc, BABELIGNORE_FILENAME);\n        if (exists(ignoreLoc)) {\n          this.addIgnoreConfig(ignoreLoc);\n          foundIgnore = true;\n        }\n      }\n\n      if (foundIgnore && foundConfig) return;\n    }\n  };\n\n  ConfigChainBuilder.prototype.addIgnoreConfig = function addIgnoreConfig(loc) {\n    var file = _fs2.default.readFileSync(loc, \"utf8\");\n    var lines = file.split(\"\\n\");\n\n    lines = lines.map(function (line) {\n      return line.replace(/#(.*?)$/, \"\").trim();\n    }).filter(function (line) {\n      return !!line;\n    });\n\n    if (lines.length) {\n      this.mergeConfig({\n        options: { ignore: lines },\n        alias: loc,\n        dirname: _path2.default.dirname(loc)\n      });\n    }\n  };\n\n  ConfigChainBuilder.prototype.addConfig = function addConfig(loc, key) {\n    var json = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _json2.default;\n\n    if (this.resolvedConfigs.indexOf(loc) >= 0) {\n      return false;\n    }\n\n    this.resolvedConfigs.push(loc);\n\n    var content = _fs2.default.readFileSync(loc, \"utf8\");\n    var options = void 0;\n\n    try {\n      options = jsonCache[content] = jsonCache[content] || json.parse(content);\n      if (key) options = options[key];\n    } catch (err) {\n      err.message = loc + \": Error while parsing JSON - \" + err.message;\n      throw err;\n    }\n\n    this.mergeConfig({\n      options: options,\n      alias: loc,\n      dirname: _path2.default.dirname(loc)\n    });\n\n    return !!options;\n  };\n\n  ConfigChainBuilder.prototype.mergeConfig = function mergeConfig(_ref) {\n    var options = _ref.options,\n        alias = _ref.alias,\n        loc = _ref.loc,\n        dirname = _ref.dirname;\n\n    if (!options) {\n      return false;\n    }\n\n    options = (0, _assign2.default)({}, options);\n\n    dirname = dirname || process.cwd();\n    loc = loc || alias;\n\n    if (options.extends) {\n      var extendsLoc = (0, _resolve2.default)(options.extends, dirname);\n      if (extendsLoc) {\n        this.addConfig(extendsLoc);\n      } else {\n        if (this.log) this.log.error(\"Couldn't resolve extends clause of \" + options.extends + \" in \" + alias);\n      }\n      delete options.extends;\n    }\n\n    this.configs.push({\n      options: options,\n      alias: alias,\n      loc: loc,\n      dirname: dirname\n    });\n\n    var envOpts = void 0;\n    var envKey = process.env.BABEL_ENV || process.env.NODE_ENV || \"development\";\n    if (options.env) {\n      envOpts = options.env[envKey];\n      delete options.env;\n    }\n\n    this.mergeConfig({\n      options: envOpts,\n      alias: alias + \".env.\" + envKey,\n      dirname: dirname\n    });\n  };\n\n  return ConfigChainBuilder;\n}();\n\nmodule.exports = exports[\"default\"];"]},"metadata":{},"sourceType":"script"}