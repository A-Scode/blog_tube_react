{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.Flow = exports.Pure = exports.Generated = exports.User = exports.Var = exports.BlockScoped = exports.Referenced = exports.Scope = exports.Expression = exports.Statement = exports.BindingIdentifier = exports.ReferencedMemberExpression = exports.ReferencedIdentifier = undefined;\n\nvar _babelTypes = require(\"babel-types\");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nvar ReferencedIdentifier = exports.ReferencedIdentifier = {\n  types: [\"Identifier\", \"JSXIdentifier\"],\n  checkPath: function checkPath(_ref, opts) {\n    var node = _ref.node,\n        parent = _ref.parent;\n\n    if (!t.isIdentifier(node, opts) && !t.isJSXMemberExpression(parent, opts)) {\n      if (t.isJSXIdentifier(node, opts)) {\n        if (_babelTypes.react.isCompatTag(node.name)) return false;\n      } else {\n        return false;\n      }\n    }\n\n    return t.isReferenced(node, parent);\n  }\n};\nvar ReferencedMemberExpression = exports.ReferencedMemberExpression = {\n  types: [\"MemberExpression\"],\n  checkPath: function checkPath(_ref2) {\n    var node = _ref2.node,\n        parent = _ref2.parent;\n    return t.isMemberExpression(node) && t.isReferenced(node, parent);\n  }\n};\nvar BindingIdentifier = exports.BindingIdentifier = {\n  types: [\"Identifier\"],\n  checkPath: function checkPath(_ref3) {\n    var node = _ref3.node,\n        parent = _ref3.parent;\n    return t.isIdentifier(node) && t.isBinding(node, parent);\n  }\n};\nvar Statement = exports.Statement = {\n  types: [\"Statement\"],\n  checkPath: function checkPath(_ref4) {\n    var node = _ref4.node,\n        parent = _ref4.parent;\n\n    if (t.isStatement(node)) {\n      if (t.isVariableDeclaration(node)) {\n        if (t.isForXStatement(parent, {\n          left: node\n        })) return false;\n        if (t.isForStatement(parent, {\n          init: node\n        })) return false;\n      }\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n};\nvar Expression = exports.Expression = {\n  types: [\"Expression\"],\n  checkPath: function checkPath(path) {\n    if (path.isIdentifier()) {\n      return path.isReferencedIdentifier();\n    } else {\n      return t.isExpression(path.node);\n    }\n  }\n};\nvar Scope = exports.Scope = {\n  types: [\"Scopable\"],\n  checkPath: function checkPath(path) {\n    return t.isScope(path.node, path.parent);\n  }\n};\nvar Referenced = exports.Referenced = {\n  checkPath: function checkPath(path) {\n    return t.isReferenced(path.node, path.parent);\n  }\n};\nvar BlockScoped = exports.BlockScoped = {\n  checkPath: function checkPath(path) {\n    return t.isBlockScoped(path.node);\n  }\n};\nvar Var = exports.Var = {\n  types: [\"VariableDeclaration\"],\n  checkPath: function checkPath(path) {\n    return t.isVar(path.node);\n  }\n};\nvar User = exports.User = {\n  checkPath: function checkPath(path) {\n    return path.node && !!path.node.loc;\n  }\n};\nvar Generated = exports.Generated = {\n  checkPath: function checkPath(path) {\n    return !path.isUser();\n  }\n};\nvar Pure = exports.Pure = {\n  checkPath: function checkPath(path, opts) {\n    return path.scope.isPure(path.node, opts);\n  }\n};\nvar Flow = exports.Flow = {\n  types: [\"Flow\", \"ImportDeclaration\", \"ExportDeclaration\", \"ImportSpecifier\"],\n  checkPath: function checkPath(_ref5) {\n    var node = _ref5.node;\n\n    if (t.isFlow(node)) {\n      return true;\n    } else if (t.isImportDeclaration(node)) {\n      return node.importKind === \"type\" || node.importKind === \"typeof\";\n    } else if (t.isExportDeclaration(node)) {\n      return node.exportKind === \"type\";\n    } else if (t.isImportSpecifier(node)) {\n      return node.importKind === \"type\" || node.importKind === \"typeof\";\n    } else {\n      return false;\n    }\n  }\n};","map":{"version":3,"sources":["D:/Python files/Start Django/blog_tube/frontend/blog_tube/node_modules/babel-traverse/lib/path/lib/virtual-types.js"],"names":["exports","__esModule","Flow","Pure","Generated","User","Var","BlockScoped","Referenced","Scope","Expression","Statement","BindingIdentifier","ReferencedMemberExpression","ReferencedIdentifier","undefined","_babelTypes","require","t","_interopRequireWildcard","obj","newObj","key","Object","prototype","hasOwnProperty","call","default","types","checkPath","_ref","opts","node","parent","isIdentifier","isJSXMemberExpression","isJSXIdentifier","react","isCompatTag","name","isReferenced","_ref2","isMemberExpression","_ref3","isBinding","_ref4","isStatement","isVariableDeclaration","isForXStatement","left","isForStatement","init","path","isReferencedIdentifier","isExpression","isScope","isBlockScoped","isVar","loc","isUser","scope","isPure","_ref5","isFlow","isImportDeclaration","importKind","isExportDeclaration","exportKind","isImportSpecifier"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,IAAR,GAAeF,OAAO,CAACG,IAAR,GAAeH,OAAO,CAACI,SAAR,GAAoBJ,OAAO,CAACK,IAAR,GAAeL,OAAO,CAACM,GAAR,GAAcN,OAAO,CAACO,WAAR,GAAsBP,OAAO,CAACQ,UAAR,GAAqBR,OAAO,CAACS,KAAR,GAAgBT,OAAO,CAACU,UAAR,GAAqBV,OAAO,CAACW,SAAR,GAAoBX,OAAO,CAACY,iBAAR,GAA4BZ,OAAO,CAACa,0BAAR,GAAqCb,OAAO,CAACc,oBAAR,GAA+BC,SAAnR;;AAEA,IAAIC,WAAW,GAAGC,OAAO,CAAC,aAAD,CAAzB;;AAEA,IAAIC,CAAC,GAAGC,uBAAuB,CAACH,WAAD,CAA/B;;AAEA,SAASG,uBAAT,CAAiCC,GAAjC,EAAsC;AAAE,MAAIA,GAAG,IAAIA,GAAG,CAACnB,UAAf,EAA2B;AAAE,WAAOmB,GAAP;AAAa,GAA1C,MAAgD;AAAE,QAAIC,MAAM,GAAG,EAAb;;AAAiB,QAAID,GAAG,IAAI,IAAX,EAAiB;AAAE,WAAK,IAAIE,GAAT,IAAgBF,GAAhB,EAAqB;AAAE,YAAIG,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCN,GAArC,EAA0CE,GAA1C,CAAJ,EAAoDD,MAAM,CAACC,GAAD,CAAN,GAAcF,GAAG,CAACE,GAAD,CAAjB;AAAyB;AAAE;;AAACD,IAAAA,MAAM,CAACM,OAAP,GAAiBP,GAAjB;AAAsB,WAAOC,MAAP;AAAgB;AAAE;;AAE7Q,IAAIP,oBAAoB,GAAGd,OAAO,CAACc,oBAAR,GAA+B;AACxDc,EAAAA,KAAK,EAAE,CAAC,YAAD,EAAe,eAAf,CADiD;AAExDC,EAAAA,SAAS,EAAE,SAASA,SAAT,CAAmBC,IAAnB,EAAyBC,IAAzB,EAA+B;AACxC,QAAIC,IAAI,GAAGF,IAAI,CAACE,IAAhB;AAAA,QACIC,MAAM,GAAGH,IAAI,CAACG,MADlB;;AAGA,QAAI,CAACf,CAAC,CAACgB,YAAF,CAAeF,IAAf,EAAqBD,IAArB,CAAD,IAA+B,CAACb,CAAC,CAACiB,qBAAF,CAAwBF,MAAxB,EAAgCF,IAAhC,CAApC,EAA2E;AACzE,UAAIb,CAAC,CAACkB,eAAF,CAAkBJ,IAAlB,EAAwBD,IAAxB,CAAJ,EAAmC;AACjC,YAAIf,WAAW,CAACqB,KAAZ,CAAkBC,WAAlB,CAA8BN,IAAI,CAACO,IAAnC,CAAJ,EAA8C,OAAO,KAAP;AAC/C,OAFD,MAEO;AACL,eAAO,KAAP;AACD;AACF;;AAED,WAAOrB,CAAC,CAACsB,YAAF,CAAeR,IAAf,EAAqBC,MAArB,CAAP;AACD;AAfuD,CAA1D;AAkBA,IAAIpB,0BAA0B,GAAGb,OAAO,CAACa,0BAAR,GAAqC;AACpEe,EAAAA,KAAK,EAAE,CAAC,kBAAD,CAD6D;AAEpEC,EAAAA,SAAS,EAAE,SAASA,SAAT,CAAmBY,KAAnB,EAA0B;AACnC,QAAIT,IAAI,GAAGS,KAAK,CAACT,IAAjB;AAAA,QACIC,MAAM,GAAGQ,KAAK,CAACR,MADnB;AAGA,WAAOf,CAAC,CAACwB,kBAAF,CAAqBV,IAArB,KAA8Bd,CAAC,CAACsB,YAAF,CAAeR,IAAf,EAAqBC,MAArB,CAArC;AACD;AAPmE,CAAtE;AAUA,IAAIrB,iBAAiB,GAAGZ,OAAO,CAACY,iBAAR,GAA4B;AAClDgB,EAAAA,KAAK,EAAE,CAAC,YAAD,CAD2C;AAElDC,EAAAA,SAAS,EAAE,SAASA,SAAT,CAAmBc,KAAnB,EAA0B;AACnC,QAAIX,IAAI,GAAGW,KAAK,CAACX,IAAjB;AAAA,QACIC,MAAM,GAAGU,KAAK,CAACV,MADnB;AAGA,WAAOf,CAAC,CAACgB,YAAF,CAAeF,IAAf,KAAwBd,CAAC,CAAC0B,SAAF,CAAYZ,IAAZ,EAAkBC,MAAlB,CAA/B;AACD;AAPiD,CAApD;AAUA,IAAItB,SAAS,GAAGX,OAAO,CAACW,SAAR,GAAoB;AAClCiB,EAAAA,KAAK,EAAE,CAAC,WAAD,CAD2B;AAElCC,EAAAA,SAAS,EAAE,SAASA,SAAT,CAAmBgB,KAAnB,EAA0B;AACnC,QAAIb,IAAI,GAAGa,KAAK,CAACb,IAAjB;AAAA,QACIC,MAAM,GAAGY,KAAK,CAACZ,MADnB;;AAGA,QAAIf,CAAC,CAAC4B,WAAF,CAAcd,IAAd,CAAJ,EAAyB;AACvB,UAAId,CAAC,CAAC6B,qBAAF,CAAwBf,IAAxB,CAAJ,EAAmC;AACjC,YAAId,CAAC,CAAC8B,eAAF,CAAkBf,MAAlB,EAA0B;AAAEgB,UAAAA,IAAI,EAAEjB;AAAR,SAA1B,CAAJ,EAA+C,OAAO,KAAP;AAC/C,YAAId,CAAC,CAACgC,cAAF,CAAiBjB,MAAjB,EAAyB;AAAEkB,UAAAA,IAAI,EAAEnB;AAAR,SAAzB,CAAJ,EAA8C,OAAO,KAAP;AAC/C;;AAED,aAAO,IAAP;AACD,KAPD,MAOO;AACL,aAAO,KAAP;AACD;AACF;AAhBiC,CAApC;AAmBA,IAAItB,UAAU,GAAGV,OAAO,CAACU,UAAR,GAAqB;AACpCkB,EAAAA,KAAK,EAAE,CAAC,YAAD,CAD6B;AAEpCC,EAAAA,SAAS,EAAE,SAASA,SAAT,CAAmBuB,IAAnB,EAAyB;AAClC,QAAIA,IAAI,CAAClB,YAAL,EAAJ,EAAyB;AACvB,aAAOkB,IAAI,CAACC,sBAAL,EAAP;AACD,KAFD,MAEO;AACL,aAAOnC,CAAC,CAACoC,YAAF,CAAeF,IAAI,CAACpB,IAApB,CAAP;AACD;AACF;AARmC,CAAtC;AAWA,IAAIvB,KAAK,GAAGT,OAAO,CAACS,KAAR,GAAgB;AAC1BmB,EAAAA,KAAK,EAAE,CAAC,UAAD,CADmB;AAE1BC,EAAAA,SAAS,EAAE,SAASA,SAAT,CAAmBuB,IAAnB,EAAyB;AAClC,WAAOlC,CAAC,CAACqC,OAAF,CAAUH,IAAI,CAACpB,IAAf,EAAqBoB,IAAI,CAACnB,MAA1B,CAAP;AACD;AAJyB,CAA5B;AAOA,IAAIzB,UAAU,GAAGR,OAAO,CAACQ,UAAR,GAAqB;AACpCqB,EAAAA,SAAS,EAAE,SAASA,SAAT,CAAmBuB,IAAnB,EAAyB;AAClC,WAAOlC,CAAC,CAACsB,YAAF,CAAeY,IAAI,CAACpB,IAApB,EAA0BoB,IAAI,CAACnB,MAA/B,CAAP;AACD;AAHmC,CAAtC;AAMA,IAAI1B,WAAW,GAAGP,OAAO,CAACO,WAAR,GAAsB;AACtCsB,EAAAA,SAAS,EAAE,SAASA,SAAT,CAAmBuB,IAAnB,EAAyB;AAClC,WAAOlC,CAAC,CAACsC,aAAF,CAAgBJ,IAAI,CAACpB,IAArB,CAAP;AACD;AAHqC,CAAxC;AAMA,IAAI1B,GAAG,GAAGN,OAAO,CAACM,GAAR,GAAc;AACtBsB,EAAAA,KAAK,EAAE,CAAC,qBAAD,CADe;AAEtBC,EAAAA,SAAS,EAAE,SAASA,SAAT,CAAmBuB,IAAnB,EAAyB;AAClC,WAAOlC,CAAC,CAACuC,KAAF,CAAQL,IAAI,CAACpB,IAAb,CAAP;AACD;AAJqB,CAAxB;AAOA,IAAI3B,IAAI,GAAGL,OAAO,CAACK,IAAR,GAAe;AACxBwB,EAAAA,SAAS,EAAE,SAASA,SAAT,CAAmBuB,IAAnB,EAAyB;AAClC,WAAOA,IAAI,CAACpB,IAAL,IAAa,CAAC,CAACoB,IAAI,CAACpB,IAAL,CAAU0B,GAAhC;AACD;AAHuB,CAA1B;AAMA,IAAItD,SAAS,GAAGJ,OAAO,CAACI,SAAR,GAAoB;AAClCyB,EAAAA,SAAS,EAAE,SAASA,SAAT,CAAmBuB,IAAnB,EAAyB;AAClC,WAAO,CAACA,IAAI,CAACO,MAAL,EAAR;AACD;AAHiC,CAApC;AAMA,IAAIxD,IAAI,GAAGH,OAAO,CAACG,IAAR,GAAe;AACxB0B,EAAAA,SAAS,EAAE,SAASA,SAAT,CAAmBuB,IAAnB,EAAyBrB,IAAzB,EAA+B;AACxC,WAAOqB,IAAI,CAACQ,KAAL,CAAWC,MAAX,CAAkBT,IAAI,CAACpB,IAAvB,EAA6BD,IAA7B,CAAP;AACD;AAHuB,CAA1B;AAMA,IAAI7B,IAAI,GAAGF,OAAO,CAACE,IAAR,GAAe;AACxB0B,EAAAA,KAAK,EAAE,CAAC,MAAD,EAAS,mBAAT,EAA8B,mBAA9B,EAAmD,iBAAnD,CADiB;AAExBC,EAAAA,SAAS,EAAE,SAASA,SAAT,CAAmBiC,KAAnB,EAA0B;AACnC,QAAI9B,IAAI,GAAG8B,KAAK,CAAC9B,IAAjB;;AAEA,QAAId,CAAC,CAAC6C,MAAF,CAAS/B,IAAT,CAAJ,EAAoB;AAClB,aAAO,IAAP;AACD,KAFD,MAEO,IAAId,CAAC,CAAC8C,mBAAF,CAAsBhC,IAAtB,CAAJ,EAAiC;AACtC,aAAOA,IAAI,CAACiC,UAAL,KAAoB,MAApB,IAA8BjC,IAAI,CAACiC,UAAL,KAAoB,QAAzD;AACD,KAFM,MAEA,IAAI/C,CAAC,CAACgD,mBAAF,CAAsBlC,IAAtB,CAAJ,EAAiC;AACtC,aAAOA,IAAI,CAACmC,UAAL,KAAoB,MAA3B;AACD,KAFM,MAEA,IAAIjD,CAAC,CAACkD,iBAAF,CAAoBpC,IAApB,CAAJ,EAA+B;AACpC,aAAOA,IAAI,CAACiC,UAAL,KAAoB,MAApB,IAA8BjC,IAAI,CAACiC,UAAL,KAAoB,QAAzD;AACD,KAFM,MAEA;AACL,aAAO,KAAP;AACD;AACF;AAhBuB,CAA1B","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.Flow = exports.Pure = exports.Generated = exports.User = exports.Var = exports.BlockScoped = exports.Referenced = exports.Scope = exports.Expression = exports.Statement = exports.BindingIdentifier = exports.ReferencedMemberExpression = exports.ReferencedIdentifier = undefined;\n\nvar _babelTypes = require(\"babel-types\");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar ReferencedIdentifier = exports.ReferencedIdentifier = {\n  types: [\"Identifier\", \"JSXIdentifier\"],\n  checkPath: function checkPath(_ref, opts) {\n    var node = _ref.node,\n        parent = _ref.parent;\n\n    if (!t.isIdentifier(node, opts) && !t.isJSXMemberExpression(parent, opts)) {\n      if (t.isJSXIdentifier(node, opts)) {\n        if (_babelTypes.react.isCompatTag(node.name)) return false;\n      } else {\n        return false;\n      }\n    }\n\n    return t.isReferenced(node, parent);\n  }\n};\n\nvar ReferencedMemberExpression = exports.ReferencedMemberExpression = {\n  types: [\"MemberExpression\"],\n  checkPath: function checkPath(_ref2) {\n    var node = _ref2.node,\n        parent = _ref2.parent;\n\n    return t.isMemberExpression(node) && t.isReferenced(node, parent);\n  }\n};\n\nvar BindingIdentifier = exports.BindingIdentifier = {\n  types: [\"Identifier\"],\n  checkPath: function checkPath(_ref3) {\n    var node = _ref3.node,\n        parent = _ref3.parent;\n\n    return t.isIdentifier(node) && t.isBinding(node, parent);\n  }\n};\n\nvar Statement = exports.Statement = {\n  types: [\"Statement\"],\n  checkPath: function checkPath(_ref4) {\n    var node = _ref4.node,\n        parent = _ref4.parent;\n\n    if (t.isStatement(node)) {\n      if (t.isVariableDeclaration(node)) {\n        if (t.isForXStatement(parent, { left: node })) return false;\n        if (t.isForStatement(parent, { init: node })) return false;\n      }\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n};\n\nvar Expression = exports.Expression = {\n  types: [\"Expression\"],\n  checkPath: function checkPath(path) {\n    if (path.isIdentifier()) {\n      return path.isReferencedIdentifier();\n    } else {\n      return t.isExpression(path.node);\n    }\n  }\n};\n\nvar Scope = exports.Scope = {\n  types: [\"Scopable\"],\n  checkPath: function checkPath(path) {\n    return t.isScope(path.node, path.parent);\n  }\n};\n\nvar Referenced = exports.Referenced = {\n  checkPath: function checkPath(path) {\n    return t.isReferenced(path.node, path.parent);\n  }\n};\n\nvar BlockScoped = exports.BlockScoped = {\n  checkPath: function checkPath(path) {\n    return t.isBlockScoped(path.node);\n  }\n};\n\nvar Var = exports.Var = {\n  types: [\"VariableDeclaration\"],\n  checkPath: function checkPath(path) {\n    return t.isVar(path.node);\n  }\n};\n\nvar User = exports.User = {\n  checkPath: function checkPath(path) {\n    return path.node && !!path.node.loc;\n  }\n};\n\nvar Generated = exports.Generated = {\n  checkPath: function checkPath(path) {\n    return !path.isUser();\n  }\n};\n\nvar Pure = exports.Pure = {\n  checkPath: function checkPath(path, opts) {\n    return path.scope.isPure(path.node, opts);\n  }\n};\n\nvar Flow = exports.Flow = {\n  types: [\"Flow\", \"ImportDeclaration\", \"ExportDeclaration\", \"ImportSpecifier\"],\n  checkPath: function checkPath(_ref5) {\n    var node = _ref5.node;\n\n    if (t.isFlow(node)) {\n      return true;\n    } else if (t.isImportDeclaration(node)) {\n      return node.importKind === \"type\" || node.importKind === \"typeof\";\n    } else if (t.isExportDeclaration(node)) {\n      return node.exportKind === \"type\";\n    } else if (t.isImportSpecifier(node)) {\n      return node.importKind === \"type\" || node.importKind === \"typeof\";\n    } else {\n      return false;\n    }\n  }\n};"]},"metadata":{},"sourceType":"script"}