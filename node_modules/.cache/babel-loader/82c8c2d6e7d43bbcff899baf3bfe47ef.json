{"ast":null,"code":"var _jsxFileName = \"D:\\\\Python files\\\\Start Django\\\\blog_tube\\\\frontend\\\\blog_tube\\\\src\\\\componenets\\\\appUploadBlog.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useEffect, useContext, useState, useCallback, useMemo, useRef } from 'react';\nimport { Redirect, useHistory } from 'react-router';\nimport { Login_context } from '../App';\nimport './statics/css/appUploadBlog.css';\nimport $, { event } from \"jquery\";\nimport domtoimage from 'dom-to-image';\nimport preview_image from \"./statics/images/preview.svg\";\nimport editor_image from \"./statics/images/editor.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar AppUploadBlog = props => {\n  _s();\n\n  var login_context = useContext(Login_context);\n  const history = useHistory();\n  const ref = useRef({});\n  useEffect(() => {\n    if (login_context !== sessionStorage.session) {\n      history.push('/Login');\n      return null;\n    }\n  }, []);\n  const [upload_blog_state, set_upload_blog_state] = useState('blog');\n\n  function dataURLtoFile(image_span) {\n    let u8arr, mime;\n    domtoimage.toJpeg(image_span, {\n      quality: 1\n    }).then(data => {\n      final_image_blob = data;\n      let arr = final_image_blob.split(',');\n      mime = 'image/jpeg';\n      let bstr = atob(arr[1]);\n      let n = bstr.length;\n      u8arr = new Uint8Array(n);\n\n      while (n--) {\n        u8arr[n] = bstr.charCodeAt(n);\n      }\n    });\n    return new File([u8arr], \"blog_image.jpg\", {\n      type: mime\n    });\n  }\n\n  var final_image_blob;\n  var new_image_file;\n  var blog_info_obj = {};\n  const change_image = useCallback(event => {\n    let image_file = event.target.files[0];\n    let image_url = URL.createObjectURL(image_file);\n    let image_span = $('#image_span');\n    image_span.css({\n      'backgroundImage': `url(${image_url})`,\n      backgroundSize: 'contain',\n      backgroundPosition: 'center',\n      backdropFilter: 'blur(3px)',\n      'borderRadius': '20px'\n    });\n    let target = $('#label_image');\n    target.css({\n      'backgroundImage': `url(${image_url})`,\n      'borderRadius': '20px',\n      'backgroundSize': 'cover',\n      \"boxShadow\": \"0px 1px 7px 3px #1976d2\"\n    });\n    image_span = document.getElementById(\"image_span\");\n    new_image_file = dataURLtoFile(image_span);\n    console.log(new_image_file);\n  }, [final_image_blob, new_image_file]);\n  const [blog_details, set_blog_details] = useState({});\n  const forward_to_editor = useCallback(event => {\n    event.preventDefault();\n    blog_info_obj.title = ref.current['blog_title'].value;\n    blog_info_obj.discription = ref.current['blog_discription'].value;\n    set_upload_blog_state('blog_editor');\n    console.log(blog_info_obj);\n  });\n  const blog_info = useMemo(() => /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"blog_info\",\n    action: \"javascript:void(0);\",\n    onSubmit: event => forward_to_editor(event),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blog_info_child\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        align: \"center\",\n        children: \"Blog Information \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"blog_title\",\n        id: \"label_title\",\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        autoComplete: \"off\",\n        spellCheck: \"true\",\n        autoCapitalize: \"words\",\n        id: \"blog_title\",\n        maxLength: 100,\n        ref: el => ref.current['blog_title'] = el,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"blog_discription\",\n        id: \"label_discription\",\n        children: \"Discription\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        autoComplete: \"off\",\n        spellCheck: \"true\",\n        autoCapitalize: \"sentences\",\n        id: \"blog_discription\",\n        placeholder: \"Discription\",\n        maxLength: 200,\n        ref: el => ref.current['blog_discription'] = el\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"blog_image\",\n        id: \"label_image\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"image_span\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 61\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"blog_image\",\n        onChange: change_image,\n        hidden: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Next\",\n        id: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this), [upload_blog_state, change_image, forward_to_editor]);\n  const [editor_state, set_editor_state] = useState('editor');\n\n  let set_to_editor = e => {\n    set_editor_state(e.target.value);\n  };\n\n  const blog_editor = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"editor\",\n    children: [/*#__PURE__*/_jsxDEV(Editor_tabs, {\n      change_state: set_to_editor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), editor_state === \"editor\" ? /*#__PURE__*/_jsxDEV(Editing_pane, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 39\n    }, this) : null, editor_state === \"preview\" ? null : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"blog_upload_page\",\n    children: [upload_blog_state == 'blog' ? blog_info : null, upload_blog_state == 'blog_editor' ? blog_editor : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AppUploadBlog, \"k05+LKLy8P9ZhzUOCDU94a1tg6E=\", false, function () {\n  return [useHistory];\n});\n\n_c = AppUploadBlog;\nexport default AppUploadBlog;\n\nvar Editor_tabs = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tabs\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"radio\",\n      name: \"tabs\",\n      id: \"editer_radio\",\n      value: \"editor\",\n      onInput: e => props.change_state(e),\n      hidden: true,\n      defaultChecked: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"editer_radio\",\n      id: \"label_editor\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: editor_image,\n        className: \"label_ico\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 64\n      }, this), \"Editor\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"radio\",\n      name: \"tabs\",\n      id: \"preview_radio\",\n      value: \"preview\",\n      onInput: e => props.change_state(e),\n      hidden: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"preview_radio\",\n      id: \"label_preview\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: preview_image,\n        className: \"label_ico\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 67\n      }, this), \"Preview\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = Editor_tabs;\n\nvar Editing_pane = props => {\n  _s2();\n\n  const ref = useRef({});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"editing_pane\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editing\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"addComponents\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"upload\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"components\",\n      children: /*#__PURE__*/_jsxDEV(\"h6\", {\n        align: \"center\",\n        className: \"heading\",\n        children: \"Components\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"text_input\",\n      ref: el => ref.current[\"text_input\"] = el,\n      cols: \"30\",\n      rows: \"10\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        contentEditable: \"false\",\n        children: \"hrllo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"maintext\",\n        contentEditable: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 61\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(Editing_pane, \"QMBuJFIdzLIeqBcFwhMf246mjOM=\");\n\n_c3 = Editing_pane;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"AppUploadBlog\");\n$RefreshReg$(_c2, \"Editor_tabs\");\n$RefreshReg$(_c3, \"Editing_pane\");","map":{"version":3,"sources":["D:/Python files/Start Django/blog_tube/frontend/blog_tube/src/componenets/appUploadBlog.js"],"names":["useEffect","useContext","useState","useCallback","useMemo","useRef","Redirect","useHistory","Login_context","$","event","domtoimage","AppUploadBlog","props","login_context","history","ref","sessionStorage","session","push","upload_blog_state","set_upload_blog_state","dataURLtoFile","image_span","u8arr","mime","toJpeg","quality","then","data","final_image_blob","arr","split","bstr","atob","n","length","Uint8Array","charCodeAt","File","type","new_image_file","blog_info_obj","change_image","image_file","target","files","image_url","URL","createObjectURL","css","backgroundSize","backgroundPosition","backdropFilter","document","getElementById","console","log","blog_details","set_blog_details","forward_to_editor","preventDefault","title","current","value","discription","blog_info","el","editor_state","set_editor_state","set_to_editor","e","blog_editor","Editor_tabs","change_state","editor_image","preview_image","Editing_pane"],"mappings":";;;;AAAA,SAAQA,SAAR,EAAmBC,UAAnB,EAAgCC,QAAhC,EAA0CC,WAA1C,EAAuDC,OAAvD,EAAgEC,MAAhE,QAA6E,OAA7E;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,cAArC;AACA,SAASC,aAAT,QAA8B,QAA9B;AACA,OAAO,iCAAP;AACA,OAAOC,CAAP,IAAYC,KAAZ,QAAyB,QAAzB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;;;AAKA,IAAIC,aAAa,GAAGC,KAAK,IAAE;AAAA;;AACvB,MAAIC,aAAa,GAAIb,UAAU,CAACO,aAAD,CAA/B;AACA,QAAMO,OAAO,GAAIR,UAAU,EAA3B;AACA,QAAMS,GAAG,GAAGX,MAAM,CAAC,EAAD,CAAlB;AACAL,EAAAA,SAAS,CAAC,MAAI;AACV,QAAIc,aAAa,KAAKG,cAAc,CAACC,OAArC,EAA6C;AACzCH,MAAAA,OAAO,CAACI,IAAR,CAAa,QAAb;AACA,aAAO,IAAP;AACH;AACJ,GALQ,EAKP,EALO,CAAT;AAOA,QAAM,CAACC,iBAAD,EAAqBC,qBAArB,IAA8CnB,QAAQ,CAAC,MAAD,CAA5D;;AAEA,WAASoB,aAAT,CAAuBC,UAAvB,EAAkC;AAC9B,QAAIC,KAAJ,EAAYC,IAAZ;AAEAd,IAAAA,UAAU,CAACe,MAAX,CAAkBH,UAAlB,EAA8B;AAACI,MAAAA,OAAO,EAAC;AAAT,KAA9B,EAA2CC,IAA3C,CAAgDC,IAAI,IAAE;AACtDC,MAAAA,gBAAgB,GAAGD,IAAnB;AAEA,UAAIE,GAAG,GAAID,gBAAgB,CAACE,KAAjB,CAAuB,GAAvB,CAAX;AACAP,MAAAA,IAAI,GAAG,YAAP;AACA,UAAIQ,IAAI,GAAGC,IAAI,CAACH,GAAG,CAAC,CAAD,CAAJ,CAAf;AACA,UAAII,CAAC,GAAGF,IAAI,CAACG,MAAb;AACAZ,MAAAA,KAAK,GAAG,IAAIa,UAAJ,CAAeF,CAAf,CAAR;;AACA,aAAMA,CAAC,EAAP,EAAU;AACNX,QAAAA,KAAK,CAACW,CAAD,CAAL,GAAWF,IAAI,CAACK,UAAL,CAAgBH,CAAhB,CAAX;AACH;AACJ,KAXG;AAaA,WAAO,IAAII,IAAJ,CAAS,CAACf,KAAD,CAAT,EAAiB,gBAAjB,EAAoC;AAACgB,MAAAA,IAAI,EAACf;AAAN,KAApC,CAAP;AAEH;;AAED,MAAIK,gBAAJ;AACA,MAAIW,cAAJ;AACA,MAAIC,aAAa,GAAG,EAApB;AAEA,QAAMC,YAAY,GAAGxC,WAAW,CAACO,KAAK,IAAE;AACpC,QAAIkC,UAAU,GAAGlC,KAAK,CAACmC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAjB;AAEA,QAAIC,SAAS,GAAGC,GAAG,CAACC,eAAJ,CAAoBL,UAApB,CAAhB;AACA,QAAIrB,UAAU,GAAGd,CAAC,CAAC,aAAD,CAAlB;AACAc,IAAAA,UAAU,CAAC2B,GAAX,CAAe;AACX,yBAAmB,OAAMH,SAAU,GADxB;AAEXI,MAAAA,cAAc,EAAC,SAFJ;AAGXC,MAAAA,kBAAkB,EAAG,QAHV;AAIXC,MAAAA,cAAc,EAAC,WAJJ;AAKX,sBAAe;AALJ,KAAf;AAQA,QAAIR,MAAM,GAAGpC,CAAC,CAAC,cAAD,CAAd;AACAoC,IAAAA,MAAM,CAACK,GAAP,CAAW;AAAC,yBAAoB,OAAMH,SAAU,GAArC;AACR,sBAAe,MADP;AAER,wBAAkB,OAFV;AAGR,mBAAa;AAHL,KAAX;AAMAxB,IAAAA,UAAU,GAAG+B,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAb;AAEJd,IAAAA,cAAc,GAAGnB,aAAa,CAACC,UAAD,CAA9B;AACAiC,IAAAA,OAAO,CAACC,GAAR,CAAYhB,cAAZ;AACC,GAxB+B,EAwB9B,CAACX,gBAAD,EAAoBW,cAApB,CAxB8B,CAAhC;AA0BA,QAAM,CAACiB,YAAD,EAAgBC,gBAAhB,IAAoCzD,QAAQ,CAAC,EAAD,CAAlD;AAEA,QAAM0D,iBAAiB,GAAGzD,WAAW,CAAEO,KAAD,IAAS;AAC3CA,IAAAA,KAAK,CAACmD,cAAN;AACAnB,IAAAA,aAAa,CAACoB,KAAd,GAAsB9C,GAAG,CAAC+C,OAAJ,CAAY,YAAZ,EAA0BC,KAAhD;AACAtB,IAAAA,aAAa,CAACuB,WAAd,GAA4BjD,GAAG,CAAC+C,OAAJ,CAAY,kBAAZ,EAAgCC,KAA5D;AACA3C,IAAAA,qBAAqB,CAAC,aAAD,CAArB;AACAmC,IAAAA,OAAO,CAACC,GAAR,CAAYf,aAAZ;AACH,GANoC,CAArC;AAQA,QAAMwB,SAAS,GAAG9D,OAAO,CAAC,mBACtB;AAAM,IAAA,SAAS,EAAC,WAAhB;AAA4B,IAAA,MAAM,EAAC,qBAAnC;AAAyD,IAAA,QAAQ,EAAIM,KAAK,IAAEkD,iBAAiB,CAAClD,KAAD,CAA7F;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACA;AAAI,QAAA,KAAK,EAAG,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAO,QAAA,OAAO,EAAC,YAAf;AAA4B,QAAA,EAAE,EAAG,aAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAG,OAAjC;AAAyC,QAAA,YAAY,EAAC,KAAtD;AAA4D,QAAA,UAAU,EAAC,MAAvE;AAA8E,QAAA,cAAc,EAAC,OAA7F;AAAsG,QAAA,EAAE,EAAG,YAA3G;AAAwH,QAAA,SAAS,EAAE,GAAnI;AAAwI,QAAA,GAAG,EAAGyD,EAAE,IAAGnD,GAAG,CAAC+C,OAAJ,CAAY,YAAZ,IAA0BI,EAA7K;AAAiL,QAAA,QAAQ;AAAzL;AAAA;AAAA;AAAA;AAAA,cAHA,eAKA;AAAO,QAAA,OAAO,EAAC,kBAAf;AAAkC,QAAA,EAAE,EAAG,mBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALA,eAMA;AAAU,QAAA,IAAI,EAAC,MAAf;AAAsB,QAAA,YAAY,EAAC,KAAnC;AAAyC,QAAA,UAAU,EAAC,MAApD;AAA2D,QAAA,cAAc,EAAC,WAA1E;AAAsF,QAAA,EAAE,EAAC,kBAAzF;AAA4G,QAAA,WAAW,EAAC,aAAxH;AAAsI,QAAA,SAAS,EAAE,GAAjJ;AAAsJ,QAAA,GAAG,EAAGA,EAAE,IAAGnD,GAAG,CAAC+C,OAAJ,CAAY,kBAAZ,IAAgCI;AAAjM;AAAA;AAAA;AAAA;AAAA,cANA,eAQA;AAAO,QAAA,OAAO,EAAC,YAAf;AAA4B,QAAA,EAAE,EAAG,aAAjC;AAAA,+BAAgD;AAAM,UAAA,EAAE,EAAG;AAAX;AAAA;AAAA;AAAA;AAAA;AAAhD;AAAA;AAAA;AAAA;AAAA,cARA,eASA;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAG,YAAxB;AAAqC,QAAA,QAAQ,EAAExB,YAA/C;AAA6D,QAAA,MAAM;AAAnE;AAAA;AAAA;AAAA;AAAA,cATA,eAWA;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAsB,QAAA,KAAK,EAAC,MAA5B;AAAmC,QAAA,EAAE,EAAG;AAAxC;AAAA;AAAA;AAAA;AAAA,cAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADqB,EAiBvB,CAACvB,iBAAD,EAAoBuB,YAApB,EAAiCiB,iBAAjC,CAjBuB,CAAzB;AAmBA,QAAM,CAACQ,YAAD,EAAcC,gBAAd,IAAkCnE,QAAQ,CAAC,QAAD,CAAhD;;AAEA,MAAIoE,aAAa,GAAEC,CAAC,IAAE;AAClBF,IAAAA,gBAAgB,CAACE,CAAC,CAAC1B,MAAF,CAASmB,KAAV,CAAhB;AACH,GAFD;;AAIA,QAAMQ,WAAW,gBACb;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACI,QAAC,WAAD;AAAa,MAAA,YAAY,EAAIF;AAA7B;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKF,YAAY,KAAI,QAAhB,gBAAyB,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YAAzB,GAA0C,IAF/C,EAGKA,YAAY,KAAK,SAAjB,GAA2B,IAA3B,GAAgC,IAHrC;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;;AAOA,sBACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,eACKhD,iBAAiB,IAAI,MAArB,GAA6B8C,SAA7B,GAAyC,IAD9C,EAEK9C,iBAAiB,IAAI,aAArB,GAAmCoD,WAAnC,GAA+C,IAFpD;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAhHD;;GAAI5D,a;UAEiBL,U;;;KAFjBK,a;AAkHJ,eAAgBA,aAAhB;;AAGA,IAAI6D,WAAW,GAAE5D,KAAK,IAAG;AACrB,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,IAAI,EAAC,MAAzB;AAAgC,MAAA,EAAE,EAAC,cAAnC;AAAkD,MAAA,KAAK,EAAE,QAAzD;AAAmE,MAAA,OAAO,EAAI0D,CAAD,IAAK1D,KAAK,CAAC6D,YAAN,CAAmBH,CAAnB,CAAlF;AAAyG,MAAA,MAAM,MAA/G;AAAiH,MAAA,cAAc;AAA/H;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,OAAO,EAAC,cAAf;AAA8B,MAAA,EAAE,EAAG,cAAnC;AAAA,8BAAmD;AAAK,QAAA,GAAG,EAAII,YAAZ;AAA2B,QAAA,SAAS,EAAG;AAAvC;AAAA;AAAA;AAAA;AAAA,cAAnD;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,IAAI,EAAC,MAAzB;AAAgC,MAAA,EAAE,EAAC,eAAnC;AAAmD,MAAA,KAAK,EAAE,SAA1D;AAAoE,MAAA,OAAO,EAAIJ,CAAD,IAAK1D,KAAK,CAAC6D,YAAN,CAAmBH,CAAnB,CAAnF;AAA0G,MAAA,MAAM;AAAhH;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAO,MAAA,OAAO,EAAE,eAAhB;AAAgC,MAAA,EAAE,EAAG,eAArC;AAAA,8BAAsD;AAAK,QAAA,GAAG,EAAIK,aAAZ;AAA4B,QAAA,SAAS,EAAG;AAAxC;AAAA;AAAA;AAAA;AAAA,cAAtD;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CATD;;MAAIH,W;;AAWJ,IAAII,YAAY,GAAGhE,KAAK,IAAG;AAAA;;AACvB,QAAMG,GAAG,GAAGX,MAAM,CAAC,EAAD,CAAlB;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACI;AAAQ,QAAA,SAAS,EAAG;AAApB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,SAAS,EAAG,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACI;AAAI,QAAA,KAAK,EAAG,QAAZ;AAAqB,QAAA,SAAS,EAAC,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YALJ,eAQI;AAAK,MAAA,EAAE,EAAC,YAAR;AAAqB,MAAA,GAAG,EAAI8D,EAAE,IAAEnD,GAAG,CAAC+C,OAAJ,CAAY,YAAZ,IAA0BI,EAA1D;AAA8D,MAAA,IAAI,EAAC,IAAnE;AAAwE,MAAA,IAAI,EAAC,IAA7E;AAAA,8BACI;AAAM,QAAA,eAAe,EAAG,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eACgD;AAAK,QAAA,SAAS,EAAC,UAAf;AAAyB,QAAA,eAAe;AAAxC;AAAA;AAAA;AAAA;AAAA,cADhD;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAhBD;;IAAIU,Y;;MAAAA,Y","sourcesContent":["import {useEffect ,useContext , useState, useCallback, useMemo, useRef} from 'react'\r\nimport { Redirect ,useHistory } from 'react-router'\r\nimport { Login_context } from '../App'\r\nimport './statics/css/appUploadBlog.css'\r\nimport $, { event } from \"jquery\"\r\nimport domtoimage from 'dom-to-image'\r\nimport preview_image from './statics/images/preview.svg'\r\nimport editor_image from './statics/images/editor.svg'\r\n\r\n\r\nvar AppUploadBlog = props=>{\r\n    var login_context  = useContext(Login_context)\r\n    const history  = useHistory()\r\n    const ref = useRef({})\r\n    useEffect(()=>{\r\n        if (login_context !== sessionStorage.session){\r\n            history.push('/Login')\r\n            return null\r\n        }        \r\n    },[])\r\n\r\n    const [upload_blog_state , set_upload_blog_state] = useState('blog')\r\n\r\n    function dataURLtoFile(image_span){\r\n        let u8arr , mime\r\n\r\n        domtoimage.toJpeg(image_span ,{quality:1}).then(data=>{\r\n        final_image_blob = data\r\n\r\n        let arr =  final_image_blob.split(',')\r\n        mime = 'image/jpeg'\r\n        let bstr = atob(arr[1])\r\n        let n = bstr.length\r\n        u8arr = new Uint8Array(n)\r\n        while(n--){\r\n            u8arr[n] = bstr.charCodeAt(n)\r\n        }\r\n    })\r\n\r\n        return new File([u8arr],\"blog_image.jpg\" , {type:mime})\r\n    \r\n    }\r\n\r\n    var final_image_blob\r\n    var new_image_file\r\n    var blog_info_obj = {}\r\n\r\n    const change_image = useCallback(event=>{\r\n        let image_file = event.target.files[0]\r\n        \r\n        let image_url = URL.createObjectURL(image_file)\r\n        let image_span = $('#image_span')\r\n        image_span.css({\r\n            'backgroundImage':`url(${image_url})`,\r\n            backgroundSize:'contain',\r\n            backgroundPosition : 'center',\r\n            backdropFilter:'blur(3px)',\r\n            'borderRadius':'20px',\r\n           \r\n        })\r\n        let target = $('#label_image')\r\n        target.css({'backgroundImage': `url(${image_url})`,\r\n           'borderRadius':'20px',\r\n           'backgroundSize' :'cover',\r\n           \"boxShadow\": \"0px 1px 7px 3px #1976d2\"\r\n        })\r\n\r\n        image_span = document.getElementById(\"image_span\")\r\n    \r\n    new_image_file = dataURLtoFile(image_span)\r\n    console.log(new_image_file)\r\n    },[final_image_blob , new_image_file])\r\n\r\n    const [blog_details , set_blog_details] = useState({})\r\n\r\n    const forward_to_editor = useCallback((event)=>{\r\n        event.preventDefault()\r\n        blog_info_obj.title = ref.current['blog_title'].value\r\n        blog_info_obj.discription = ref.current['blog_discription'].value\r\n        set_upload_blog_state('blog_editor')\r\n        console.log(blog_info_obj)\r\n    })\r\n    \r\n    const blog_info = useMemo(()=>(\r\n        <form className=\"blog_info\" action='javascript:void(0);' onSubmit = {event=>forward_to_editor(event)}>\r\n            <div className=\"blog_info_child\">\r\n            <h1 align = \"center\">Blog Information </h1>\r\n            <label htmlFor=\"blog_title\" id = \"label_title\">Title</label>\r\n            <input type=\"text\" placeholder = \"Title\" autoComplete=\"off\" spellCheck=\"true\" autoCapitalize=\"words\"  id = \"blog_title\" maxLength={100} ref= {el =>ref.current['blog_title']=el} required />\r\n\r\n            <label htmlFor=\"blog_discription\" id = \"label_discription\">Discription</label>\r\n            <textarea type=\"text\" autoComplete=\"off\" spellCheck=\"true\" autoCapitalize=\"sentences\" id=\"blog_discription\" placeholder=\"Discription\" maxLength={200} ref= {el =>ref.current['blog_discription']=el} />\r\n\r\n            <label htmlFor=\"blog_image\" id = \"label_image\" ><span id = \"image_span\"></span></label>\r\n            <input type=\"file\" id = \"blog_image\" onChange={change_image} hidden />\r\n\r\n            <input type=\"submit\"  value=\"Next\" id = \"submit\" />\r\n            </div>\r\n\r\n        </form>\r\n    ),[upload_blog_state, change_image,forward_to_editor])\r\n\r\n    const [editor_state,set_editor_state] = useState('editor')\r\n\r\n    let set_to_editor= e=>{\r\n        set_editor_state(e.target.value)\r\n    }\r\n\r\n    const blog_editor = (\r\n        <div className=\"editor\">\r\n            <Editor_tabs change_state = {set_to_editor} />\r\n            {editor_state ===\"editor\"?<Editing_pane />:null}\r\n            {editor_state === \"preview\"?null:null}\r\n        </div>\r\n    )\r\n    return(\r\n        <div className=\"blog_upload_page\">\r\n            {upload_blog_state == 'blog'? blog_info : null}\r\n            {upload_blog_state == 'blog_editor'?blog_editor:null}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default  AppUploadBlog;\r\n\r\n\r\nvar Editor_tabs= props =>{\r\n    return(\r\n        <div className=\"tabs\">\r\n            <input type=\"radio\" name=\"tabs\" id=\"editer_radio\" value={\"editor\"} onInput= {(e)=>props.change_state(e)} hidden  defaultChecked/>\r\n            <label htmlFor=\"editer_radio\" id = \"label_editor\" ><img src = {editor_image}  className = \"label_ico\" />Editor</label>\r\n            <input type=\"radio\" name=\"tabs\" id=\"preview_radio\" value= \"preview\" onInput= {(e)=>props.change_state(e)} hidden />\r\n            <label htmlFor= \"preview_radio\" id = \"label_preview\" ><img src = {preview_image}  className = \"label_ico\" />Preview</label>\r\n        </div>\r\n        )\r\n}\r\n\r\nvar Editing_pane = props =>{\r\n    const ref = useRef({})\r\n    return (\r\n        <div className=\"editing_pane\">\r\n            <div className=\"editing\">\r\n                <button className = \"addComponents\" ></button>\r\n                <button className = \"upload\" >Upload</button>\r\n            </div>\r\n            <div className=\"components\">\r\n                <h6 align = \"center\" className=\"heading\">Components</h6>\r\n            </div>\r\n            <div id=\"text_input\" ref = {el=>ref.current[\"text_input\"]=el} cols=\"30\" rows=\"10\" >\r\n                <span contentEditable = \"false\">hrllo</span><div className=\"maintext\"contentEditable></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}